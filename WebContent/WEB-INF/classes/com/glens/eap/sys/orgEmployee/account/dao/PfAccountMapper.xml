<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="PfAccountMapper" >
  <resultMap id="BaseResultMap" type="com.glens.eap.sys.orgEmployee.account.vo.PfAccount" >
    <result column="REGION_CODE" property="regionCode" jdbcType="VARCHAR" />
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="EMPLOYEECODE" property="employeecode" jdbcType="VARCHAR" />
    <result column="EMPLOYEENAME" property="employeename" jdbcType="VARCHAR" />
    <result column="ROLECODE" property="rolecode" jdbcType="VARCHAR" />
    <result column="ROLENAME" property="rolename" jdbcType="VARCHAR" />
    <result column="UNIT_NAME" property="unitName" jdbcType="VARCHAR" />
    <result column="ACCOUNT_CODE" property="accountCode" jdbcType="VARCHAR" />
    <result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
    <result column="ACCOUNT_PASSWORD" property="accountPassword" jdbcType="VARCHAR" />
    <result column="ACCOUNT_TYPE" property="accountType" jdbcType="INTEGER" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    rowid, REGION_CODE, COMPANY_CODE, EMPLOYEECODE, ROLECODE, ACCOUNT_CODE, ACCOUNT_NAME, 
    ACCOUNT_PASSWORD, ACCOUNT_TYPE, REMARKS
  </sql>
  <select id="[queryPfAccount]" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    t1.*,t2.employeename,t3.role_name as rolename, t4.unit_name
    from pf_account t1
    left join md_employee t2 on t1.EMPLOYEECODE=t2.EMPLOYEECODE
  	left join sm_role t3 on t1.rolecode = t3.role_code
  	left join md_org_unit t4 on t2.unit_code = t4.unit_code
    where ACCOUNT_CODE = #{accountCode}
  </select>
  <update id="delete" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pf_account set SYS_PROCESS_FLAG='1',SYS_DELETE_TIME=now()
    where ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.glens.eap.sys.orgEmployee.account.vo.PfAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pf_account (REGION_CODE, COMPANY_CODE, 
      EMPLOYEECODE, ROLECODE, ACCOUNT_CODE, 
      ACCOUNT_NAME, ACCOUNT_PASSWORD, ACCOUNT_TYPE, 
      SYS_CREATE_TIME, SYS_UPDATE_TIME, SYS_DELETE_TIME, 
      SYS_PROCESS_FLAG, REMARKS)
    values (#{regionCode,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, 
      #{employeecode,jdbcType=VARCHAR}, #{rolecode,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{accountPassword,jdbcType=VARCHAR}, #{accountType,jdbcType=INTEGER}, 
      now(), null, null, 
      '1', #{remarks,jdbcType=VARCHAR})
  </insert>

  <update id="update" parameterType="com.glens.eap.sys.orgEmployee.account.vo.PfAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pf_account
    <set>
		<if test="regionCode!=null and regionCode!=''">
		REGION_CODE = #{regionCode,jdbcType=VARCHAR},
		</if>
		
		<if test="companyCode!=null and companyCode!=''">
		COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
		</if>
		
		<if test="employeecode!=null and employeecode!=''">
		EMPLOYEECODE = #{employeecode,jdbcType=VARCHAR},
		</if>
		
		<if test="rolecode!=null and rolecode!=''">
		ROLECODE = #{rolecode,jdbcType=VARCHAR},
		</if>
		
		<if test="accountCode!=null and accountCode!=''">
		ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
		</if>
		
		<if test="accountName!=null and accountName!=''">
		ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
		</if>
		
		<if test="accountPassword!=null and accountPassword!=''">
		ACCOUNT_PASSWORD = #{accountPassword,jdbcType=VARCHAR},
		</if>
		
		<if test="accountType!=null and accountType!=''">
		ACCOUNT_TYPE = #{accountType,jdbcType=INTEGER},
		</if>
		
<!-- 		<if test="grantMode!=null and grantMode!=''"> -->
<!-- 		GRANT_MODE = #{grantMode,jdbcType=INTEGER}, -->
<!-- 		</if> -->
		
<!-- 		<if test="regionMode!=null and regionMode!=''"> -->
<!-- 		REGION_MODE = #{regionMode,jdbcType=VARCHAR}, -->
<!-- 		</if> -->
		
<!-- 		<if test="proNos!=null and proNos!=''"> -->
<!-- 		PRO_NOS = #{proNos,jdbcType=VARCHAR}, -->
<!-- 		</if> -->
		
		<if test="sysCreateTime!=null and sysCreateTime!=''">
		SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
		</if>
		
		SYS_UPDATE_TIME = now(),
		
		<if test="sysDeleteTime!=null and sysDeleteTime!=''">
		SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
		</if>
		
		<if test="sysProcessFlag!=null and sysProcessFlag!=''">
		SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
		</if>
		
		<if test="remarks!=null and remarks!=''">
		REMARKS = #{remarks,jdbcType=VARCHAR},
		</if>
    </set>
    where ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR}
  </update>
  
<!--    <sql id="querycon"> -->
<!--   	where SYS_PROCESS_FLAG='1' -->
<!--   	<if test="companyCode!=null and companyCode!=''"> -->
<!--   		and COMPANY_CODE=#{companyCode} -->
<!--   	</if> -->
<!--   	<if test="unitCode!=null and unitCode!=''"> -->
<!--   		and REGION_CODE=#{unitCode} -->
<!--   	</if> -->
<!--   	<if test="searchName!=null and searchName!=''"> -->
<!--   		and ACCOUNT_NAME like concat(#{searchName},'%') -->
<!--   	</if> -->
<!--   </sql> -->
  
  <select id="queryForCount" parameterType="map" resultType="int">
  	select count(*) from pf_account t1, md_employee t2
  	where t1.EMPLOYEECODE=t2.EMPLOYEECODE and t1.SYS_PROCESS_FLAG='1'
  	<if test="companyCode!=null and companyCode!=''">
  		and t1.COMPANY_CODE=#{companyCode}
  	</if>
  	<if test="unitCode!=null and unitCode!=''">
  		and t2.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="accountType!=null and accountType!=''">
  		and t1.ACCOUNT_TYPE=#{accountType}
  	</if>
  	<if test="searchName!=null and searchName!=''">
  		and t1.ACCOUNT_NAME like concat(#{searchName},'%')
  	</if>
  </select>
  
  <select id="queryForPage" parameterType="map" resultMap="BaseResultMap">
  	select t1.*,t2.employeename,t3.role_name as rolename, t4.unit_name
  	from pf_account t1
  	left join md_employee t2 on t1.EMPLOYEECODE=t2.EMPLOYEECODE
  	left join sm_role t3 on t1.rolecode = t3.role_code
  	left join md_org_unit t4 on t2.unit_code = t4.unit_code
  	where t1.SYS_PROCESS_FLAG='1'
  	<if test="companyCode!=null and companyCode!=''">
  		and t1.COMPANY_CODE=#{companyCode}
  	</if>
  	<if test="unitCode!=null and unitCode!=''">
  		and t2.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="accountType!=null and accountType!=''">
  		and t1.ACCOUNT_TYPE=#{accountType}
  	</if>
  	<if test="searchName!=null and searchName!=''">
  		and (t1.ACCOUNT_NAME like concat('%',#{searchName},'%') or
  			t2.employeename like concat('%',#{searchName},'%'))
  	</if>
  	limit #{firstResult},#{maxResult}
  </select>
  <select id="selectAccountByEmployeecode" parameterType="map" resultMap="BaseResultMap">
  	select *
  	from pf_account
  	where employeecode=#{employeecode}
  	limit 0,1
  </select>
  <select id="selectAccountsByEmployeecodes" parameterType="list" resultType="string">
  	select account_code
  	from pf_account
  	where 1&lt;&gt;1
  	<foreach collection="list" item="item">
  	or employeecode=#{item}
  	</foreach>
  </select>
</mapper>