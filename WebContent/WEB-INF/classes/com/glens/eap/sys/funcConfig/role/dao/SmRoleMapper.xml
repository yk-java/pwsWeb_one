<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SmRoleMapper">
	<resultMap id="BaseResultMap" type="com.glens.eap.sys.funcConfig.role.vo.SmRole">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="rowid" property="rowid" jdbcType="BIGINT" />
		<result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
		<result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		rowid, COMPANY_CODE, ROLE_CODE, ROLE_NAME, REMARKS
	</sql>
	<select id="queryForCount" resultType="int">
		select count(*) from
		sm_role
		<if test="companyCode != null and companyCode != ''">
	  		where  COMPANY_CODE= #{companyCode}
		</if>
		
	</select>

	<select id="queryForPage" parameterType="java.util.HashMap"
		resultType="map">
	
		select a.role_name roleName,a.role_code roleCode,count(a.role_code) num,a.COMPANY_CODE companyCode from sm_role a
		left join (select s.* from sm_role_module s 
		left join ad_app_modules m on s.MODULE_CODE=m.MODULE_CODE
		where m.module_level=3) b on a.role_code=b.role_code
		<if test="companyCode != null and companyCode != ''">
			  		where  a.COMPANY_CODE= #{companyCode}
		</if>
		group by a.role_code
		order by a.rowid
		limit #{firstResult},#{maxResult}
	</select>
	
	<select id="getRoleList" parameterType="java.util.HashMap"
		resultType="map">
	
		select a.role_name roleName,a.role_code roleCode,count(a.role_code) num,a.COMPANY_CODE companyCode from sm_role a
		left join (select s.* from sm_role_module s 
		left join ad_app_modules m on s.MODULE_CODE=m.MODULE_CODE
		where m.module_level=3) b on a.role_code=b.role_code
		<if test="companyCode != null and companyCode != ''">
			  		where  a.COMPANY_CODE= #{companyCode}
		</if>
		group by a.role_code
		order by a.rowid
		
	</select>

	<select id="findById" resultMap="BaseResultMap"
		parameterType="com.glens.eap.sys.funcConfig.role.vo.SmRole">

		select
		<include refid="Base_Column_List" />
		from sm_role


		where COMPANY_CODE=#{companyCode} and ROLE_CODE=#{roleCode}
	</select>

	<update id="update" parameterType="com.glens.eap.sys.funcConfig.role.vo.SmRole">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update sm_role set  ROLE_NAME=#{roleName},REMARKS=#{remarks}
		where COMPANY_CODE=#{companyCode} and ROLE_CODE=#{roleCode}
	</update>


	<insert id="insert" parameterType="com.glens.eap.sys.funcConfig.role.vo.SmRole">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into sm_role (COMPANY_CODE, ROLE_CODE,
		ROLE_NAME, REMARKS)
		values (#{companyCode,jdbcType=VARCHAR},
		#{roleCode,jdbcType=VARCHAR},
		#{roleName,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
	</insert>

	
<delete id="delete" parameterType="com.glens.eap.sys.funcConfig.role.vo.SmRole" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sm_role
   where COMPANY_CODE=#{companyCode} and ROLE_CODE=#{roleCode}
  </delete>
	





	<select id="[queryModuleList]" parameterType="string"
		resultType="map">
		SELECT
		d.PARENT_MODULE_CODE parentModuleCode,
		d.MODULE_CODE
		moduleCode,
		d.MODULE_NAME moduleName,
		d.MODULE_LEVEL modleLevel
		FROM
		sm_role b,
		sm_role_module c,
		ad_app_modules d
		WHERE
		b.ROLE_CODE =
		#{roleCode}
		AND b.ROLE_CODE = c.ROLE_CODE
		AND c.MODULE_CODE =
		d.MODULE_CODE
	</select>

	<delete id="[deleteRoleModule]" parameterType="string">
		delete from
		sm_role_module
		where role_code=#{roleCode}
	</delete>

	<insert id="[insertRoleModule]" parameterType="map">
		insert into sm_role_module(role_code,module_code) values
		<foreach collection="list" item="item" separator="," close=""
			open="">
			(#{item.roleCode},#{item.moduleCode})
		</foreach>
	</insert>
</mapper>