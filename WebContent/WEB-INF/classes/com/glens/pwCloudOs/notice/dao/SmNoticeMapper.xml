<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.notice.dao.SmNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.notice.vo.SmNotice" >
   
    <id column="rowid" property="rowid" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="CHAR" />
    <result column="TOWHO" property="towho" jdbcType="CHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="BTEXT" property="btext" jdbcType="VARCHAR" />
    <result column="PUBLISH_DATE" property="publishDate" jdbcType="VARCHAR" />
    <result column="VALID_DATE" property="validDate" jdbcType="VARCHAR" />
    <result column="SYS_CREATE_TIME" property="sysCreateTime" jdbcType="VARCHAR" />
    <result column="SYS_UPDATE_TIME" property="sysUpdateTime" jdbcType="VARCHAR" />
    <result column="SYS_DELETE_TIME" property="sysDeleteTime" jdbcType="VARCHAR" />
    <result column="SYS_PROCESS_FLAG" property="sysProcessFlag" jdbcType="CHAR" />
    <result column="SOURCE" property="source" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    rowid, TYPE, TOWHO, TITLE, BTEXT,PUBLISH_DATE, VALID_DATE, SYS_CREATE_TIME, SYS_UPDATE_TIME, 
    SYS_DELETE_TIME, SYS_PROCESS_FLAG,SOURCE, REMARKS
  </sql>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
   
    select 
    <include refid="Base_Column_List" />
   
    from sm_notice
    where rowid = #{rowid,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sm_notice
    where rowid = #{rowid,jdbcType=BIGINT}
  </delete>
  
  
  <insert id="insert" parameterType="com.glens.pwCloudOs.notice.vo.SmNotice" >
   
    insert into sm_notice (rowid, TYPE, TOWHO, 
      TITLE, PUBLISH_DATE, VALID_DATE, 
      SYS_CREATE_TIME, SYS_UPDATE_TIME, SYS_DELETE_TIME, 
      SYS_PROCESS_FLAG, REMARKS, BTEXT,SOURCE
      )
    values (#{rowid,jdbcType=BIGINT}, #{type,jdbcType=CHAR}, #{towho,jdbcType=CHAR}, 
      #{title,jdbcType=VARCHAR}, #{publishDate,jdbcType=VARCHAR}, #{validDate,jdbcType=VARCHAR}, 
      #{sysCreateTime,jdbcType=VARCHAR}, #{sysUpdateTime,jdbcType=VARCHAR}, #{sysDeleteTime,jdbcType=VARCHAR}, 
      #{sysProcessFlag,jdbcType=CHAR}, #{remarks,jdbcType=VARCHAR}, #{btext,jdbcType=LONGVARCHAR},#{source}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.glens.pwCloudOs.notice.vo.SmNotice" useGeneratedKeys="true" keyProperty="rowid">
   
    insert into sm_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rowid != null" >
        rowid,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="towho != null" >
        TOWHO,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE,
      </if>
      <if test="validDate != null" >
        VALID_DATE,
      </if>
      <if test="sysCreateTime != null" >
        SYS_CREATE_TIME,
      </if>
      <if test="sysUpdateTime != null" >
        SYS_UPDATE_TIME,
      </if>
      <if test="sysDeleteTime != null" >
        SYS_DELETE_TIME,
      </if>
      <if test="sysProcessFlag != null" >
        SYS_PROCESS_FLAG,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="btext != null" >
        BTEXT,
      </if>
      <if test="source != null" >
        SOURCE,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rowid != null" >
        #{rowid,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="towho != null" >
        #{towho,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="validDate != null" >
        #{validDate,jdbcType=VARCHAR},
      </if>
      <if test="sysCreateTime != null" >
        #{sysCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateTime != null" >
        #{sysUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteTime != null" >
        #{sysDeleteTime,jdbcType=VARCHAR},
      </if>
      <if test="sysProcessFlag != null" >
        #{sysProcessFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="btext != null" >
        #{btext,jdbcType=LONGVARCHAR},
      </if>
       <if test="source != null" >
       	#{source}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.glens.pwCloudOs.notice.vo.SmNotice" >
   
    update sm_notice
    <set >
      <if test="type != null" >
        TYPE = #{type,jdbcType=CHAR},
      </if>
      <if test="towho != null" >
        TOWHO = #{towho,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE = #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="validDate != null" >
        VALID_DATE = #{validDate,jdbcType=VARCHAR},
      </if>
      <if test="sysCreateTime != null" >
        SYS_CREATE_TIME = #{sysCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateTime != null" >
        SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteTime != null" >
        SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=VARCHAR},
      </if>
      <if test="sysProcessFlag != null" >
        SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="btext != null" >
        BTEXT = #{btext,jdbcType=LONGVARCHAR},
      </if>
       <if test="source != null" >
        SOURCE = #{source},
      </if>
    </set>
    where rowid = #{rowid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.glens.pwCloudOs.notice.vo.SmNotice" >
   
    update sm_notice
    set TYPE = #{type,jdbcType=CHAR},
      TOWHO = #{towho,jdbcType=CHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      PUBLISH_DATE = #{publishDate,jdbcType=VARCHAR},
      VALID_DATE = #{validDate,jdbcType=VARCHAR},
      SYS_CREATE_TIME = #{sysCreateTime,jdbcType=VARCHAR},
      SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=VARCHAR},
      SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=VARCHAR},
      SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      BTEXT = #{btext,jdbcType=LONGVARCHAR},
      SOURCE = #{source,jdbcType=LONGVARCHAR}
    where rowid = #{rowid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glens.pwCloudOs.notice.vo.SmNotice" >
   
    update sm_notice
    set TYPE = #{type,jdbcType=CHAR},
      TOWHO = #{towho,jdbcType=CHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      PUBLISH_DATE = #{publishDate,jdbcType=VARCHAR},
      VALID_DATE = #{validDate,jdbcType=VARCHAR},
      SYS_CREATE_TIME = #{sysCreateTime,jdbcType=VARCHAR},
      SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=VARCHAR},
      SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=VARCHAR},
      SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      SOURCE = #{source,jdbcType=VARCHAR}
    where rowid = #{rowid,jdbcType=BIGINT}
  </update>
  
  <select id="queryAllNoticeList" parameterType="string" resultType="map">
	SELECT
		e.rowid,
		e.TITLE,
		e.PUBLISH_DATE,
		CASE
	WHEN f.rowid IS NOT NULL THEN
		1
	ELSE
		0
	END status,
		e.SOURCE
	FROM
		(
			SELECT
				b.rowid,
				b.TITLE,
				b.PUBLISH_DATE,
				b.SOURCE
			FROM
				sm_notice b
			WHERE
				b.SYS_PROCESS_FLAG = '1'
			AND b.TOWHO = '0'
			UNION
				SELECT
					c.rowid,
					c.TITLE,
					c.PUBLISH_DATE,
					c.SOURCE
				FROM
					sm_notice c
				LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
				WHERE
					c.SYS_PROCESS_FLAG = '1'
				AND c.TOWHO = '1'
				AND d.ACCOUNT_CODE = #{accountCode}
		) e
	LEFT JOIN sm_notice_read_history f ON e.rowid = f.notice_id
	AND f.ACCOUNTCODE = #{accountCode}
	ORDER BY
		e.rowid DESC
		  
	</select>
	
	
	<select id="queryUnReadNoticeList" parameterType="string" resultType="map">
	SELECT
		e.rowid,
		e.TITLE,
		e.PUBLISH_DATE,0 status,
		e.SOURCE
	FROM
		(
			SELECT
				b.rowid,
				b.TITLE,
				b.PUBLISH_DATE,
				b.SOURCE
			FROM
				sm_notice b
			WHERE
				b.SYS_PROCESS_FLAG = '1'
			AND b.TOWHO = '0'
			UNION
				SELECT
					c.rowid,
					c.TITLE,
					c.PUBLISH_DATE,
					c.SOURCE
				FROM
					sm_notice c
				LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
				WHERE
					c.SYS_PROCESS_FLAG = '1'
				AND c.TOWHO = '1'
				AND d.ACCOUNT_CODE = #{accountCode}
		) e
	WHERE
		e.rowid NOT IN (
			SELECT
				f.notice_id
			FROM
				sm_notice_read_history f
			WHERE
				f.accountcode = #{accountCode}
		)
	ORDER BY
		e.rowid DESC		
	</select>
	
	
	<select id="queryReadNoticeList" parameterType="string" resultType="map">
	SELECT
		e.rowid,
		e.TITLE,
		e.PUBLISH_DATE,1 status
		,e.SOURCE
	FROM
		(
			SELECT
				b.rowid,
				b.TITLE,
				b.PUBLISH_DATE,
				b.SOURCE
			FROM
				sm_notice b
			WHERE
				b.SYS_PROCESS_FLAG = '1'
			AND b.TOWHO = '0'
			UNION
				SELECT
					c.rowid,
					c.TITLE,
					c.PUBLISH_DATE,
					c.SOURCE
				FROM
					sm_notice c
				LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
				WHERE
					c.SYS_PROCESS_FLAG = '1'
				AND c.TOWHO = '1'
				AND d.ACCOUNT_CODE = #{accountCode}
		) e
	WHERE
		e.rowid IN (
			SELECT
				f.notice_id
			FROM
				sm_notice_read_history f
			WHERE
				f.accountcode = #{accountCode}
		)
	ORDER BY
		e.rowid DESC		
	</select>
	
	<select id="queryForPage" parameterType="map" resultType="map">
		<if test="status==0">
				SELECT
						e.rowid,
						e.TITLE,
						e.PUBLISH_DATE,
						CASE
					WHEN f.rowid IS NOT NULL THEN
						1
					ELSE
						0
					END status,
						e.SOURCE
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE,
								b.SOURCE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE,
									c.SOURCE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					LEFT JOIN sm_notice_read_history f ON e.rowid = f.notice_id
					AND f.ACCOUNTCODE = #{accountCode}
					where 1=1 
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
					ORDER BY
						e.rowid DESC
					limit #{firstResult},#{maxResult}			
		</if>
		<if test="status==1">
			SELECT
					e.rowid,
					e.TITLE,
					e.PUBLISH_DATE,0 status,
					e.SOURCE
				FROM
					(
						SELECT
							b.rowid,
							b.TITLE,
							b.PUBLISH_DATE,
							b.SOURCE
						FROM
							sm_notice b
						WHERE
							b.SYS_PROCESS_FLAG = '1'
						AND b.TOWHO = '0'
						UNION
							SELECT
								c.rowid,
								c.TITLE,
								c.PUBLISH_DATE,
								c.SOURCE
							FROM
								sm_notice c
							LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
							WHERE
								c.SYS_PROCESS_FLAG = '1'
							AND c.TOWHO = '1'
							AND d.ACCOUNT_CODE = #{accountCode}
					) e
				WHERE
					e.rowid NOT IN (
						SELECT
							f.notice_id
						FROM
							sm_notice_read_history f
						WHERE
							f.accountcode = #{accountCode}
					)
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
				ORDER BY
					e.rowid DESC	
				limit #{firstResult},#{maxResult}				
		</if>
		<if test="status==2">
				SELECT
						e.rowid,
						e.TITLE,
						e.PUBLISH_DATE,1 status,
						e.SOURCE
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE,
								b.SOURCE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE,
									c.SOURCE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					WHERE
						e.rowid IN (
							SELECT
								f.notice_id
							FROM
								sm_notice_read_history f
							WHERE
								f.accountcode = #{accountCode}
						)
						
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
					
					ORDER BY
						e.rowid DESC
					limit #{firstResult},#{maxResult}		
		</if>
	</select>
	
	<select id="queryForCount" parameterType="map" resultType="int">
		<if test="status==0">
				SELECT
						count(1) cnt
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE,
								b.SOURCE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE,
									c.SOURCE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					LEFT JOIN sm_notice_read_history f ON e.rowid = f.notice_id
					AND f.ACCOUNTCODE = #{accountCode}
					where 1=1 
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
						
		</if>
		<if test="status==1">
			SELECT
					count(1) cnt
				FROM
					(
						SELECT
							b.rowid,
							b.TITLE,
							b.PUBLISH_DATE
						FROM
							sm_notice b
						WHERE
							b.SYS_PROCESS_FLAG = '1'
						AND b.TOWHO = '0'
						UNION
							SELECT
								c.rowid,
								c.TITLE,
								c.PUBLISH_DATE
							FROM
								sm_notice c
							LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
							WHERE
								c.SYS_PROCESS_FLAG = '1'
							AND c.TOWHO = '1'
							AND d.ACCOUNT_CODE = #{accountCode}
					) e
				WHERE
					e.rowid NOT IN (
						SELECT
							f.notice_id
						FROM
							sm_notice_read_history f
						WHERE
							f.accountcode = #{accountCode}
					)
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
		</if>
		<if test="status==2">
				SELECT
						count(1) cnt
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					WHERE
						e.rowid IN (
							SELECT
								f.notice_id
							FROM
								sm_notice_read_history f
							WHERE
								f.accountcode = #{accountCode}
						)
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
			</if>
	</select>
	
	<select id="queryForList" parameterType="map" resultType="map">
		<if test="status==0">
				SELECT
						e.rowid,
						e.TITLE,
						e.PUBLISH_DATE,
						CASE
					WHEN f.rowid IS NOT NULL THEN
						1
					ELSE
						0
					END status,
						e.SOURCE
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE,
								b.SOURCE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE,
									c.SOURCE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					LEFT JOIN sm_notice_read_history f ON e.rowid = f.notice_id
					AND f.ACCOUNTCODE = #{accountCode}
					where 1=1 
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
					<choose>
						<when test="orderType==1">
							ORDER BY
							e.PUBLISH_DATE DESC
						</when>
						<when test="orderType==2">
							ORDER BY
							e.TITLE
						</when>
						<otherwise>
							ORDER BY e.rowid desc
						</otherwise>
					</choose>
					
					
		</if>
		<if test="status==1">
			SELECT
					e.rowid,
					e.TITLE,
					e.PUBLISH_DATE,0 status,
					e.SOURCE
				FROM
					(
						SELECT
							b.rowid,
							b.TITLE,
							b.PUBLISH_DATE,
							b.SOURCE
						FROM
							sm_notice b
						WHERE
							b.SYS_PROCESS_FLAG = '1'
						AND b.TOWHO = '0'
						UNION
							SELECT
								c.rowid,
								c.TITLE,
								c.PUBLISH_DATE,
								c.SOURCE
							FROM
								sm_notice c
							LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
							WHERE
								c.SYS_PROCESS_FLAG = '1'
							AND c.TOWHO = '1'
							AND d.ACCOUNT_CODE = #{accountCode}
					) e
				WHERE
					e.rowid NOT IN (
						SELECT
							f.notice_id
						FROM
							sm_notice_read_history f
						WHERE
							f.accountcode = #{accountCode}
					)
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
					<choose>
						<when test="orderType==1">
							ORDER BY
							e.PUBLISH_DATE DESC
						</when>
						<when test="orderType==2">
							ORDER BY
							e.TITLE
						</when>
						<otherwise>
							ORDER BY e.rowid desc
						</otherwise>
					</choose>
		</if>
		<if test="status==2">
				SELECT
						e.rowid,
						e.TITLE,
						e.PUBLISH_DATE,1 status,
						e.SOURCE
					FROM
						(
							SELECT
								b.rowid,
								b.TITLE,
								b.PUBLISH_DATE,
								b.SOURCE
							FROM
								sm_notice b
							WHERE
								b.SYS_PROCESS_FLAG = '1'
							AND b.TOWHO = '0'
							UNION
								SELECT
									c.rowid,
									c.TITLE,
									c.PUBLISH_DATE,
									c.SOURCE
								FROM
									sm_notice c
								LEFT JOIN sm_notice_receive d ON c.rowid = d.NOTICE_ID
								WHERE
									c.SYS_PROCESS_FLAG = '1'
								AND c.TOWHO = '1'
								AND d.ACCOUNT_CODE = #{accountCode}
						) e
					WHERE
						e.rowid IN (
							SELECT
								f.notice_id
							FROM
								sm_notice_read_history f
							WHERE
								f.accountcode = #{accountCode}
						)
						
					<if test="title!=null and title!=''">
						and e.TITLE like #{title}
					</if>
					<if test="startDate!=null and startDate!=''">
						and e.PUBLISH_DATE >= #{startDate}
					</if>
					<if test="endDate!=null and endDate!=''">
						and e.PUBLISH_DATE &lt;= #{endDate}
					</if>
					<choose>
						<when test="orderType==1">
							ORDER BY
							e.PUBLISH_DATE DESC
						</when>
						<when test="orderType==2">
							ORDER BY
							e.TITLE
						</when>
						<otherwise>
							ORDER BY e.rowid desc
						</otherwise>
					</choose>
		</if>		
	</select>
	
</mapper>