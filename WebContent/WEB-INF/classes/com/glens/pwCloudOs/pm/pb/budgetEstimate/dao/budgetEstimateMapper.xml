<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.pm.pb.bdgetEstimate.dao.budgetEstimateMapper" >
  
  <select id="selectProPhaseList" parameterType="map" resultType="map">
  
	SELECT b.PHASE_CODE phaseCode,b.PHASE_NAME phaseName,b.MILESTONE milestone,b.PHASE_ORDER phaseOrder,
	DATE_FORMAT(b.PHASE_START_DATE,'%Y-%m-%d') phaseStartDate,DATE_FORMAT(b.PHASE_END_DATE,'%Y-%m-%d') phaseEndDate,
	b.BUDGETESTIMATE_CODE,b.VERSION_CODE
	FROM PM_PB_PHASE  b
	JOIN PM_PB_BUDGETESTIMATE c ON b.COMPANY_CODE=c.COMPANY_CODE AND b.PRO_NO=c.PRO_NO
  	JOIN (SELECT * FROM  PM_PB_BUDGETESTIMATE_VERSION where PRO_NO=#{proNo} ORDER BY VERSION_ORDER DESC limit 0,1) v 
  	on v.BUDGETESTIMATE_CODE=c.BUDGETESTIMATE_CODE and v.PRO_NO=c.PRO_NO 
	and c.COMPANY_CODE=v.COMPANY_CODE and b.VERSION_CODE=v.VERSION_CODE
  	WHERE b.COMPANY_CODE=#{companyCode} AND b.PRO_NO=#{proNo} ORDER BY b.PHASE_ORDER
  	
  </select>
  
  <insert id="insertProPhase" parameterType="map">
  	insert into PM_PB_PHASE(COMPANY_CODE,PRO_NO,PRO_NAME,PHASE_CODE,PHASE_NAME,MILESTONE,
  	PHASE_START_DATE,PHASE_END_DATE,PHASE_ORDER,SYS_CREATE_TIME,SYS_PROCESS_FLAG,BUDGETESTIMATE_CODE,VERSION_CODE) 
  	values(#{companyCode},#{proNo},#{proName},#{phaseCode},#{phaseName},#{milestone},
  	#{phaseStartDate},#{phaseEndDate},#{phaseOrder},now(),'1',#{budgetEstimateCode},#{versionCode})
  </insert>
  
  
  <update id="updateProPhase" parameterType="map">
  	update PM_PB_PHASE
  	<set>
  		<if test="phaseName != null and phaseName != ''">
  			PHASE_NAME=#{phaseName},
  		</if>
  		<if test="milestone != null and milestone != ''">
  			MILESTONE=#{milestone},
  		</if>
  		<if test="phaseStartDate != null and phaseStartDate != ''">
  			PHASE_START_DATE=#{phaseStartDate},
  		</if>
  		<if test="phaseEndDate != null and phaseEndDate != ''">
  			PHASE_END_DATE=#{phaseEndDate},
  		</if>
  		<if test="phaseOrder != null and phaseOrder != '' and phaseOrder != 0">
  			PHASE_ORDER=#{phaseOrder},
  		</if>
  		SYS_UPDATE_TIME=now()
  	</set>
  	where PHASE_CODE=#{phaseCode}
  </update>
  
  <delete id="deleteProPhase" parameterType="map">
  	delete from PM_PB_PHASE where PHASE_CODE=#{phaseCode} and PRO_NO=#{proNo}
  </delete>
  
  
  <delete id="deleteProRelevenfund" parameterType="map">
  	delete from PM_PB_RELEVENTFUND where PHASE_CODE=#{phaseCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  </delete>
  
  <delete id="deleteProLabourCost" parameterType="map">
  	delete from PM_PB_LABOURCOST where PHASE_CODE=#{phaseCode} and PRO_NO=#{proNo}
  </delete>
  
  <delete id="deleteProItemCost" parameterType="map">
  	delete from PM_PB_ITEM_COST where PHASE_CODE=#{phaseCode} and PRO_NO=#{proNo}
  </delete>
  
  <select id="selectProBudgetEstimateList" parameterType="map" resultType="map">
  	SELECT a.pro_no proNo,a.pro_name proName,a.PRO_MANAGER proManager,a.EMPLOYEECODE proManagerCode,b.CATEGORY_NAME categoryName,a.pro_code proCode,
  	IFNULL(a.DISTRICT_MANAGER,'') districtManager,
	IFNULL(c.BUDGETESTIMATE_TITLE,'') budgetEstimateTitle,
	IFNULL(DATE_FORMAT(c.BUDGETESTIMATE_TIME,'%Y-%m-%d'),'') budgetEstimateTime,
	IFNULL(v.VERSION_STATUS,'-1') versionStatus,
	v.VERSION_ORDER versionOrder,
	IFNULL(DATE_FORMAT(c.SYS_CREATE_TIME,'%Y-%m-%d'),'') sysCreateTime,
	IFNULL(c.PRO_MANAGER_BONUS,0.0) proManagerBonus,IFNULL(c.PRO_VALIDOR_BONUS,0.0) proValidorBonus,
	IFNULL(c.PARTNER_BONUS,0.0) partnerBonus,IFNULL(c.DECISION_MARKER_BONUS,0.0) decisionMarkerBonus,
	(select count(*) from pm_pb_phase where PRO_NO=a.PRO_NO) isHave,
	IFNULL(c.BUDGETESTIMATE_CODE,'') budgetestimateCode,
  	IFNULL(v.VERSION_CODE,'') versionCode,
  	IFNULL(v.DEPUTY_MANAGER,'') deputyManager,
	IFNULL(v.DEPUTY_MANAGER_TIME,'') deputyManagerTime,
	IFNULL(v.DEPUTY_OPTION,'') deputyOption,
 	IFNULL(v.DEPT_AUDITOR,'') deptAuditor,
 	IFNULL(v.DEPT_AUDIT_TIME,'') deptAuditorTime,
 	IFNULL(v.DEPT_OPTION,'') deptOption,
  	IFNULL(v.FINANCE_AUDITOR,'') financeAuditor,
 	IFNULL(v.FINANCE_AUDIT_TIME,'') financeAuditorTime,
 	IFNULL(v.FINANCE_OPTION,'') financeOption,
	IFNULL(v.GENERAL_MANAGER,'') generalManager,
 	IFNULL(v.GENERAL_MANAGER_TIME,'') generalManagerTime,
 	IFNULL(v.GENERAL_OPTION,'') generalOption,
 	ifnull(case when v.CONTRACT_VALUE &lt;5000000 then 1
	when v.CONTRACT_VALUE>=5000000 then 2 end,0)  plevel,
	ifnull(a.PROVINCE,'') province,ifnull(a.CITY,'') city,ifnull(a.DISTRICT,'') district,ifnull(u.UNIT_NAME,'') unitName
	FROM pm_base a
	JOIN pm_category b ON a.category_code=b.category_code
	LEFT JOIN PM_PB_BUDGETESTIMATE c ON a.COMPANY_CODE=c.COMPANY_CODE AND a.PRO_NO=c.PRO_No
	left join md_org_unit u on u.UNIT_CODE=a.MANAGE_DEPT
	LEFT JOIN (select a.* from PM_PB_BUDGETESTIMATE_VERSION a
	JOIN (select COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,MAX(VERSION_ORDER) VERSION_ORDER 
	from PM_PB_BUDGETESTIMATE_VERSION GROUP BY COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE) b
	on a.COMPANY_CODE=b.COMPANY_CODE and a.PRO_NO=b.PRO_NO 
	and a.BUDGETESTIMATE_CODE=b.BUDGETESTIMATE_CODE and a.VERSION_ORDER=b.VERSION_ORDER) v 
	on v.BUDGETESTIMATE_CODE=c.BUDGETESTIMATE_CODE and v.PRO_NO=c.PRO_NO and c.COMPANY_CODE=v.COMPANY_CODE
	
	WHERE a.SYS_PROCESS_FLAG='1' and a.COMPANY_CODE=#{companyCode}
	<if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
     <if test="deptCode != null and deptCode != ''">
    	AND FIND_IN_SET(a.MANAGE_DEPT,#{deptCode})
    </if>
    <if test="districtManager != null and districtManager != ''">
		and a.DISTRICT_MANAGER=#{districtManager}
	</if>
	<if test="proManager != null and proManager != ''">
		and a.EMPLOYEECODE=#{proManager}
	</if>
	
	<if test="districtManager != null and districtManager != ''">
		and a.DISTRICT_MANAGER=#{districtManager}
	</if>
	<if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="deputyManager!=null and deputyManager!=''">
    	and  v.DEPUTY_MANAGER =#{deputyManager} and (v.VERSION_STATUS='2' or v.VERSION_STATUS='11')
    </if>
    <if test="deptAuditor!=null and deptAuditor!=''">
    	and  v.DEPT_AUDITOR =#{deptAuditor} and (v.VERSION_STATUS='3' or v.VERSION_STATUS='11')
    </if>
    
    <if test="financeAuditor!=null and financeAuditor!=''">
    	and  v.FINANCE_AUDITOR =#{financeAuditor} and  v.VERSION_STATUS='5'
    </if>
    <if test="generalManager!=null and generalManager!=''">
    	and  v.GENERAL_MANAGER =#{generalManager} and v.VERSION_STATUS='7'  
    </if>
   <if test="searchName!=null and searchName!=''">
   	and (a.pro_no like concat('%',#{searchName},'%') or a.pro_name like concat('%',#{searchName},'%') or a.PRO_MANAGER like concat('%',#{searchName},'%')  or a.DISTRICT_MANAGER=#{searchName})
   </if>
   <if test="phaseCode!=null and phaseCode!=''">
   	and a.PRO_PHASE=#{phaseCode}
   </if>
   ORDER BY c.SYS_CREATE_TIME desc
  </select>
  
  <select id="getDistrictManager" parameterType="map" resultType="map">
  	select t.*,m.EMPLOYEENAME from(select PRO_NO,PRO_NAME,DISTRICT_MANAGER 
  	from  pm_base where SYS_PROCESS_FLAG='1' and COMPANY_CODE=#{companyCode} AND PRO_PHASE not in('6','7') and DISTRICT_MANAGER is not null
	GROUP BY DISTRICT_MANAGER) t
	left join md_employee m on m.EMPLOYEECODE=t.DISTRICT_MANAGER
  </select>
  
  <select id="selectProBudgetEstimate" parameterType="map" resultType="map">
  	<!-- SELECT a.PRO_NO proNo, a.PRO_NAME proName,IFNULL(b.BUDGETESTIMATE_TITLE,'') budgetEstimateTitle,a.pro_code proCode,
  	IFNULL(DATE_FORMAT(b.BUDGETESTIMATE_TIME,'%Y-%m-%d'),'') budgetEstimateTime,
  	IFNULL(b.PK_PRO_DESC,'') pkProDesc,IFNULL(b.PUBLISH_STATUS,0) publishStatus,IFNULL(b.remarks,'') remarks,
  	IFNULL(b.PRO_MANAGER_BONUS,0.0) proManagerBonus,IFNULL(b.PRO_VALIDOR_BONUS,0.0) proValidorBonus,
	IFNULL(b.PARTNER_BONUS,0.0) partnerBonus,IFNULL(b.DECISION_MARKER_BONUS,0.0) decisionMarkerBonus,
	IFNULL(b.CONTRACT_VALUE,0.0) contractValue,a.PRO_MANAGER proManager,a.PRO_STATUS proStatus,
	IFNULL(b.NOS,'') nos,IFNULL(b.PROLEVEL,'') proLevel,IFNULL(b.BUDGETESTIMATE_TITLE,'') budgetEstimateTitle,
	a.CITY city,a.DISTRICT district,a.PROVINCE province,u.UNIT_NAME unitName,a.T_PRICE tprice
  	FROM pm_base a 
  	LEFT JOIN PM_PB_BUDGETESTIMATE b ON a.company_code=b.company_code AND a.pro_no=b.pro_no 
  	left join md_org_unit u on u.UNIT_CODE=a.MANAGE_DEPT
  	WHERE a.COMPANY_CODE=#{companyCode} and a.PRO_NO=#{proNo} -->
  	
  	
  	SELECT a.PRO_NO proNo, a.PRO_NAME proName,IFNULL(b.BUDGETESTIMATE_TITLE,'') budgetEstimateTitle,a.pro_code proCode,
  	IFNULL(DATE_FORMAT(b.BUDGETESTIMATE_TIME,'%Y-%m-%d'),'') budgetEstimateTime,
  	IFNULL(v.PK_PRO_DESC,'') pkProDesc,IFNULL(v.VERSION_STATUS,'-1') versionStatus,IFNULL(b.remarks,'') remarks,
		IFNULL(v.CONTRACT_VALUE,0.0) contractValue,a.PRO_MANAGER proManager,a.PRO_STATUS proStatus,
		IFNULL(v.NOS,'') nos,IFNULL(v.PROLEVEL,'') proLevel,
		a.CITY city,a.DISTRICT district,a.PROVINCE province,u.UNIT_NAME unitName,a.T_PRICE tprice,ifnull(v.MANAGE_FEE_RATE,0) managerVal
  	FROM pm_base a 
  	LEFT JOIN PM_PB_BUDGETESTIMATE b ON a.company_code=b.company_code AND a.pro_no=b.pro_no 
  	left join md_org_unit u on u.UNIT_CODE=a.MANAGE_DEPT
		join PM_PB_BUDGETESTIMATE_VERSION v on v.BUDGETESTIMATE_CODE=b.BUDGETESTIMATE_CODE
  	WHERE a.COMPANY_CODE=#{companyCode} and a.PRO_NO=#{proNo}
    and v.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and v.VERSION_CODE=#{versionCode}
  	
  </select>
  
  <select id="selectProLabourCostList" parameterType="map" resultType="map">
  	SELECT t.*,p.CONTRACT_PROPERTY_NAME propertyName,m.JOB_NAME jobName from(SELECT a.CONTRACT_PROPERTY_CODE,a.JOB_CODE,a.ROW_ID rowid,a.PHASE_CODE phaseCode,b.EMPLOYEENAME employeeName,b.EMPLOYEECODE employeeCode,a.UNIVALENT univalent,a.WORK_TIME workTime,a.LABOUR_COST labourCost,
  	IFNULL(a.UNIT_CODE,'') unitCode,IFNULL(a.SALARY_GRADE,'') salaryGrade,IFNULL(a.SALARY_LEVEL,'') salaryLevel,h.SALARY_GRADE_NAME_PREFIX gradeFix,u.unit_name unitName
	FROM PM_PB_LABOURCOST a 
	left JOIN md_employee b ON a.employeecode=b.employeecode
  left join HRM_SALARY_FRAMEWORK h on h.UNIT_CODE=a.UNIT_CODE and h.STATUS=2
	JOIN PM_PB_PHASE c ON a.phase_code=c.phase_code
	left join md_org_unit u on u.UNIT_CODE=a.unit_code
	WHERE a.SYS_PROCESS_FLAG='1' AND a.pro_no=#{proNo} and a.COMPANY_CODE=#{companyCode} and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode} ) t
 left join md_employee_contract_property p on p.CONTRACT_PROPERTY_CODE=t.CONTRACT_PROPERTY_CODE
 left join md_employee_job m on m.JOB_CODE=t.JOB_CODE 
  </select>
  
  <select id="selectProItemCostList" parameterType="map" resultType="map">
  	SELECT a.PHASE_CODE phaseCode,b.ITEM_NAME itemName,b.CHECK_CONTENT checkContent,IFNULL(a.cost,'') cost,a.remarks 
	FROM PM_PB_ITEM_COST a
	JOIN PM_PB_ITEM b ON a.ITEM_CODE=b.ITEM_CODE AND a.COMPANY_CODE=b.COMPANY_CODE 
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo} and b.ITEM_TYPE=1
	ORDER BY b.ITEM_ORDER
  </select>
 
 <select id="selectProReleventFundList" parameterType="map" resultType="map">
 	SELECT a.PHASE_CODE phaseCode,ifnull(a.ACCUMULATE_RECEIPT, 0.0) accumulateReceipt,
 	ifnull(a.INCENTIVE_BONUS, 0.0) incentiveBonus,ifnull(a.PRO_MANAGER_BONUS, 0.0) proManagerBonus,ifnull(a.PRO_VALIDOR_BONUS, 0.0) proValidorBonus,
 	ifnull(a.PARTNER_BONUS, 0.0) partnerBonus,ifnull(a.DECISION_MARKER_BONUS, 0.0) decisionMarkerBonus
	FROM PM_PB_RELEVENTFUND a
	JOIN PM_PB_PHASE c ON a.phase_code=c.phase_code
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo} and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode} order by c.phase_order
 </select>
 
 <select id="getBounsSum" parameterType="map" resultType="map">
 select IFNULL(sum(ACCUMULATE_RECEIPT),0) accumulateReceipt,IFNULL(sum(INCENTIVE_BONUS),0) incentiveBonus,IFNULL(sum(PRO_MANAGER_BONUS),0) proManagerBonus,
 IFNULL(sum(PRO_VALIDOR_BONUS),0) proValidorBonus,IFNULL(sum(PARTNER_BONUS),0) partnerBonus,IFNULL(SUM(DECISION_MARKER_BONUS),0) decisionMarkerBonus
 from PM_PB_RELEVENTFUND WHERE COMPANY_CODE=#{companyCode} AND PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}

 
 </select>
 
 <select id="selectProLabourCost" parameterType="map" resultType="map">
 	SELECT a.PHASE_CODE phaseCode,SUM(a.UNIVALENT) univalent,SUM(a.WORK_TIME) workTime,ifnull(SUM(a.LABOUR_COST),0.0) cost
	FROM PM_PB_LABOURCOST a
	JOIN PM_PB_PHASE c ON a.phase_code=c.phase_code
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo} and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode}
	GROUP BY a.PHASE_CODE
	ORDER BY c.phase_order
 </select>
 
 <select id="selectProItemCostByCode" parameterType="map" resultType="map">
 	SELECT a.PHASE_CODE phaseCode,IFNULL(SUM(a.cost),0.0) cost
	FROM PM_PB_ITEM_COST a
	JOIN PM_PB_PHASE c ON a.phase_code=c.phase_code
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo}  and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode}
	AND FIND_IN_SET(a.ITEM_CODE,#{itemCode})
	GROUP BY a.phase_code
	order by c.phase_order
 </select>
 
 <select id="selectProPhaseSubTot" parameterType="map" resultType="map">
 	SELECT a.PHASE_CODE phaseCode,IFNULL(SUM(a.cost),0.0) cost
	FROM PM_PB_ITEM_COST a
	JOIN PM_PB_PHASE c ON a.phase_code=c.phase_code
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo} and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode}
	GROUP BY a.phase_code
	order by c.phase_order
 </select>
 
 <select id="selectProTotCost" parameterType="map" resultType="map">
 	SELECT IFNULL(SUM(a.cost),0.0) cost
	FROM PM_PB_ITEM_COST a
	WHERE a.COMPANY_CODE=#{companyCode} AND a.PRO_NO=#{proNo} and a.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and a.VERSION_CODE=#{versionCode}
	<if test="itemCode != null and itemCode != ''">
	and FIND_IN_SET(a.ITEM_CODE,#{itemCode})
	</if>
 </select>
 
 <select id="selectItemList" parameterType="map" resultType="map">
 	SELECT ITEM_CODE itemCode,ITEM_NAME itemName,CHECK_CONTENT checkContent
  	FROM PM_PB_ITEM
  	WHERE company_code=#{companyCode} and ITEM_TYPE=1
  	ORDER BY item_order
 </select>
 
 <select id="selectProItemCostDetail" parameterType="map" resultType="map">
 	SELECT t.*,IFNULL(e.ITEM_DESC,'') itemDesc FROM (
 	SELECT a.item_name itemName,a.check_content checkContent,a.ITEM_CODE itemCode,
	${sqlSeq}
	IFNULL(SUM(b.COST),0) total,a.ITEM_ORDER
	FROM PM_PB_ITEM a
	LEFT JOIN PM_PB_ITEM_COST b ON a.company_code=b.company_code 
	AND a.item_code=b.item_code AND b.pro_no=#{proNo} and b.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and b.VERSION_CODE=#{versionCode}
	
	WHERE a.company_code=#{companyCode} and a.ITEM_TYPE=1 
	GROUP BY a.item_code
	UNION
	SELECT '其他小计' itemName,'除人力、设备、外包、咨询、业务招待等费用' checkContent, '' itemCode,
	${sqlSeq}
	IFNULL(SUM(b.COST),0) total,999 ITEM_ORDER
	FROM PM_PB_ITEM a
	LEFT JOIN PM_PB_ITEM_COST b ON a.company_code=b.company_code 
	AND a.item_code=b.item_code AND b.pro_no=#{proNo}   and b.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and b.VERSION_CODE=#{versionCode}
	WHERE a.company_code=#{companyCode} AND FIND_IN_SET(a.item_code,#{itemCode})
	UNION
	SELECT '总计' itemName,'所有费用' checkContent, '' itemCode,
	${sqlSeq}
	IFNULL(SUM(b.COST),0) total,1000 ITEM_ORDER
	FROM PM_PB_ITEM a
	LEFT JOIN PM_PB_ITEM_COST b ON a.company_code=b.company_code 
	AND a.item_code=b.item_code AND b.pro_no=#{proNo}  and b.BUDGETESTIMATE_CODE=#{budgetEstimateCode} and b.VERSION_CODE=#{versionCode}
	WHERE a.company_code=#{companyCode} and a.ITEM_TYPE=1 ) t
	LEFT JOIN (SELECT * FROM PM_PB_ITEM_COST_DESC WHERE COMPANY_CODE=#{companyCode} AND pro_no=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}) e ON t.itemCode=e.ITEM_CODE
	ORDER BY t.ITEM_ORDER
 </select>
 
 <insert id="insertProBudgetEstimate" parameterType="map">
 	insert into PM_PB_BUDGETESTIMATE(COMPANY_CODE,PRO_NO,PRO_NAME,BUDGETESTIMATE_TIME,PK_PRO_DESC,
 	PUBLISH_STATUS,PRO_MANAGER_BONUS,PRO_VALIDOR_BONUS,PARTNER_BONUS,DECISION_MARKER_BONUS,
 	SYS_CREATE_TIME,SYS_PROCESS_FLAG,CONTRACT_VALUE,NOS,PROLEVEL,BUDGETESTIMATE_TITLE)
 	values(#{companyCode},#{proNo},#{proName},now(),#{pkProDesc},1,#{proManagerBonus},
 	#{proValidorBonus},#{partnerBonus},#{dicisionMarkerBonus},now(),'1',#{contractValue},#{nos},#{proLevel},#{budgetEstimateTitle})
 </insert>
 
 <update id="updateProBudgetEstimate" parameterType="map">
 	update PM_PB_BUDGETESTIMATE
 	<set>
 		<if test="pkProDesc != null and pkProDesc != ''">
 			PK_PRO_DESC=#{pkProDesc},
 		</if>
 		<if test="proManagerBonus != null">
 			PRO_MANAGER_BONUS=#{proManagerBonus},
 		</if>
 		<if test="proValidorBonus != null">
 			PRO_VALIDOR_BONUS=#{proValidorBonus},
 		</if>
 		<if test="partnerBonus != null">
 			PARTNER_BONUS=#{partnerBonus},
 		</if>
 		<if test="dicisionMarkerBonus != null">
 			DECISION_MARKER_BONUS=#{dicisionMarkerBonus},
 		</if>
 		<if test="contractValue != null">
 			CONTRACT_VALUE=#{contractValue},
 		</if>
 		<if test="nos != null">
 			NOS=#{nos},
 		</if>
 		<if test="proLevel != null">
 			PROLEVEL=#{proLevel},
 		</if>
 		<if test="budgetEstimateTitle != null">
 			BUDGETESTIMATE_TITLE=#{budgetEstimateTitle},
 		</if>
 		
 		SYS_UPDATE_TIME=now(),BUDGETESTIMATE_TIME=now()
 	</set>
 	where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode}
 </update>
 
 
 <update id="updateProBudgetEstimateVersion" parameterType="map">
 	update PM_PB_BUDGETESTIMATE_VERSION
 	<set>
 		<if test="pkProDesc != null and pkProDesc != ''">
 			PK_PRO_DESC=#{pkProDesc},
 		</if>
 		
 		<if test="contractValue != null">
 			CONTRACT_VALUE=#{contractValue},
 		</if>
 		<if test="managerVal!=null and managerVal!=''">
 			MANAGE_FEE_RATE=#{managerVal},
 		</if>
 		<if test="nos != null">
 			NOS=#{nos},
 		</if>
 		<if test="proLevel != null">
 			PROLEVEL=#{proLevel},
 		</if>
 		<if test="budgetEstimateTitle != null">
 			BUDGETESTIMATE_TITLE=#{budgetEstimateTitle},
 		</if>
 		
 		SYS_UPDATE_TIME=now()
 	</set>
 	where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode}  and VERSION_CODE=#{versionCode}
 </update>
 
 <delete id="deleteProBudgetEstimate" parameterType="map">
 	delete from PM_PB_BUDGETESTIMATE where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo}
 </delete>
 
 <delete id="deleteLabourCost" parameterType="map">
 	delete from PM_PB_LABOURCOST where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo}
 </delete>
 
 <delete id="deleteProReleventFund" parameterType="map">
 	delete from PM_PB_RELEVENTFUND where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </delete>
 
 <delete id="deleteProCost" parameterType="map">
 	delete from PM_PB_ITEM_COST where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo}
 	and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </delete>
 
 <update id="publishProBudgetEstimate" parameterType="map">
 	update pm_pb_budgetestimate_version set VERSION_STATUS=#{versionStatus}
 	<if test="deputyOption!=null and deputyOption!='' ">
 		 ,DEPUTY_OPTION=#{deputyOption},DEPUTY_MANAGER_TIME=now()
 	</if>
 	<if test="deputyManager!=null and deputyManager!=''">
 		,DEPUTY_MANAGER=#{deputyManager}
 	</if>
 	<if test="deptOption!=null and deptOption!='' ">
 		 ,DEPT_OPTION=#{deptOption},DEPT_AUDIT_TIME=now()
 	</if>
 	<if test="deptmgr!=null and deptmgr!='' ">
 		,DEPT_AUDITOR=#{deptmgr}
 	</if>
 	<if test="financeOption!=null and financeOption!='' ">
 		 ,FINANCE_OPTION=#{financeOption},FINANCE_AUDIT_TIME=now()
 	</if>
 	<if test="financeMgr!=null and financeMgr!='' ">
 		,FINANCE_AUDITOR=#{financeMgr}
 	</if>
 	<if test="generalOption!=null and generalOption!='' ">
 		 ,GENERAL_OPTION=#{generalOption},GENERAL_MANAGER_TIME=now()
 	</if>
 	<if test="generalManager!=null and generalManager!=''">
 		,GENERAL_MANAGER=#{generalManager}
 	</if>
 	<if test="checkOption!=null and checkOption!=''">
 		,CHECK_OPTION=#{checkOption}
 	</if>
	WHERE PRO_NO=#{proNo}  AND BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode} AND COMPANY_CODE=#{companyCode}
 </update>
 
 <select id="getDuptManager" parameterType="map" resultType="map">
 	SELECT b.employeecode,b.employeename
	from pm_base a
	join md_employee b on a.MANAGE_DEPT=b.UNIT_CODE
	where a.PRO_NO=#{proNo} and b.JOB_CODE='25'
 </select>
 
 <select id="getDeptManager" parameterType="map" resultType="map">
 	SELECT b.employeecode,b.employeename
	from pm_base a
	join md_employee b on a.MANAGE_DEPT=b.UNIT_CODE
	where a.PRO_NO=#{proNo} and b.JOB_CODE='10'
 </select>
 
  <select id="getFinance" parameterType="map" resultType="map">
  
 	select employeecode,employeename
	from md_employee
	where JOB_PROPERTY_CODE='6'
	
 </select>
 
 <select id="getgeneral" parameterType="map" resultType="map">
 	select employeecode,employeename
	from md_employee
	where JOB_CODE='30'
 </select>
 
 <select id="getjianguan" parameterType="map" resultType="map">
 	select u.EMPLOYEECODE employeecode from pm_base p
	join md_org_unit u on p.MANAGE_DEPT=u.UNIT_CODE
	where p.PRO_NO=#{proNo}
 	
 </select>
 
 <insert id="insertProPhaseReleventFund" parameterType="java.util.List">
 
 	insert into PM_PB_RELEVENTFUND(COMPANY_CODE,PRO_NO,PHASE_CODE,ACCUMULATE_RECEIPT,INCENTIVE_BONUS,PRO_MANAGER_BONUS,PRO_VALIDOR_BONUS,PARTNER_BONUS,DECISION_MARKER_BONUS,SYS_CREATE_TIME,SYS_PROCESS_FLAG,BUDGETESTIMATE_CODE,VERSION_CODE)
 	values
 	<foreach collection="list" item="p" index="i" separator=",">
 	(#{p.companyCode},#{p.proNo},#{p.phaseCode},#{p.accumulateReceipt},#{p.incentiveBonus},#{p.proManagerBonus},#{p.proValidorBonus},#{p.partnerBonus},#{p.decisionMarkerBonus},now(),'1',#{p.budgetEstimateCode},#{p.versionCode})
 	</foreach>
 	
 </insert>
 
 <insert id="insertProPhaseLabourCost" parameterType="map">
 	insert into PM_PB_LABOURCOST(COMPANY_CODE,PRO_NO,PHASE_CODE,EMPLOYEECODE,UNIVALENT,WORK_TIME,LABOUR_COST,
 	SYS_CREATE_TIME,SYS_PROCESS_FLAG,UNIT_CODE,SALARY_GRADE,SALARY_LEVEL,CONTRACT_PROPERTY_CODE,JOB_CODE,BUDGETESTIMATE_CODE,VERSION_CODE)
 	values(#{companyCode},#{proNo},#{phaseCode},#{employeeCode},#{univalent},
 	#{workTime},#{labourCost},now(),'1',#{unitCode},#{salaryGrade},#{salaryLevel},#{contractPropertyCode},#{jobCode},#{budgetEstimateCode},#{versionCode})
 </insert>
 
 <delete id="deleteProPhaseLabourCost" parameterType="map">
 	delete from PM_PB_LABOURCOST 
 	where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and PHASE_CODE=#{phaseCode} 
 	and ROW_ID=#{rowid} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </delete>
 
 
 <update id="updateProPhaseLabourCost" parameterType="map">
 	update  PM_PB_LABOURCOST 
 	set labour_cost=#{labourCost},work_time=#{workTime}
 	where ROW_ID=#{rowid} and company_code=#{companyCode} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </update>
 
 
 
 <insert id="insertProPhaseCost" parameterType="java.util.List">
 	insert into PM_PB_ITEM_COST(COMPANY_CODE,PRO_NO,PHASE_CODE,ITEM_CODE,COST,SYS_CREATE_TIME,SYS_PROCESS_FLAG,BUDGETESTIMATE_CODE,VERSION_CODE)
 	values
 	<foreach collection="list" index="i" item="p" separator=",">
 	(#{p.companyCode},#{p.proNo},#{p.phaseCode},#{p.itemCode},#{p.cost},now(),'1',#{p.budgetEstimateCode},#{p.versionCode})
 	</foreach>
 </insert>
 
 <insert id="insertProCostDesc" parameterType="java.util.List">
 	insert into PM_PB_ITEM_COST_DESC(COMPANY_CODE,PRO_NO,ITEM_CODE,ITEM_DESC,SYS_CREATE_TIME,SYS_PROCESS_FLAG,BUDGETESTIMATE_CODE,VERSION_CODE)
 	values
 	<foreach collection="list" index="i" item="p" separator=",">
 	(#{p.companyCode},#{p.proNo},#{p.itemCode},#{p.itemDesc},now(),'1',#{p.budgetEstimateCode},#{p.versionCode})
 	</foreach>
 </insert>
 
 <delete id="deleteProCostDesc" parameterType="map">
 	delete from PM_PB_ITEM_COST_DESC where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </delete>
 
 <select id="selectProPhaseEmployeeLabourCost" parameterType="map" resultType="map">
 	select IFNULL(SUM(LABOUR_COST),0) labourCost from PM_PB_LABOURCOST 
 	where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and PHASE_CODE=#{phaseCode} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </select>
 
 <insert id="insertProPhaseItemLabourCost" parameterType="map">
 	insert into PM_PB_ITEM_COST(COMPANY_CODE,PRO_NO,PHASE_CODE,ITEM_CODE,COST,SYS_CREATE_TIME,SYS_PROCESS_FLAG,BUDGETESTIMATE_CODE,VERSION_CODE)
 	values(#{companyCode},#{proNo},#{phaseCode},'I001',#{labourCost},now(),'1',#{budgetEstimateCode},#{versionCode})
 </insert>
 
 <update id="updatePlusProPhaseItemLabourCost" parameterType="map">
 	update PM_PB_ITEM_COST set COST=#{labourCost},SYS_UPDATE_TIME=now() where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} 
 	and PHASE_CODE=#{phaseCode} and ITEM_CODE='I001' and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </update>
 
 <update id="updateReduceProPhaseItemLabourCost" parameterType="map">
 	update PM_PB_ITEM_COST set COST=#{labourCost} where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} 
 	and PHASE_CODE=#{phaseCode} and ITEM_CODE='I001' 
 </update>
 
 <select id="selectProPhaseLabourCostCountInItem" parameterType="map" resultType="map">
 	select item_code,cost from PM_PB_ITEM_COST where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} 
 	and PHASE_CODE=#{phaseCode} and ITEM_CODE='I001' and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
 </select>
 
 <select id="selectProBudgetEstimateCount" parameterType="map" resultType="int">
 	select count(*) from PM_PB_BUDGETESTIMATE where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} 
 </select>
 
 <select id="getContractProperty" parameterType="map" resultType="map">
 	select  contract_property_code propertyCode,contract_property_name propertyName from  md_employee_contract_property
 </select>
 
  <select id="getJobs" parameterType="map" resultType="map">
 	select JOB_CODE jobCode,JOB_NAME jobName from  md_employee_job
	where SYS_PROCESS_FLAG='1'
 </select>
 
 <select id="getContractCost" parameterType="map" resultType="map">
 	select IFNULL(SUM(CASE WHEN CONTRACT_PROPERTY_CODE =2 OR CONTRACT_PROPERTY_CODE=4 THEN LABOUR_COST ELSE 0 END)*1.2,0) temp1,
IFNULL(SUM(CASE WHEN CONTRACT_PROPERTY_CODE =1 OR CONTRACT_PROPERTY_CODE=3 THEN LABOUR_COST ELSE 0 END)*1.4,0) temp2 from  PM_PB_LABOURCOST  
	WHERE PRO_NO=#{proNo} and COMPANY_CODE=#{companyCode}
 </select>
 
 <select id="queryForCount" parameterType="java.util.HashMap" resultType="int">
 	select count(*) from(select p.PRO_NAME,p.PRO_NO proNo,c.CATEGORY_NAME,p.COMPANY_CODE companyCode,p.PRO_CODE proCode,v.BUDGETESTIMATE_CODE budgetEstimateCode,v.VERSION_CODE versionCode
  	from pm_base p
	left join pm_category c on c.CATEGORY_CODE=p.CATEGORY_CODE 
	JOIN PM_PB_BUDGETESTIMATE m ON p.COMPANY_CODE=m.COMPANY_CODE AND p.PRO_NO=m.PRO_No

	JOIN (select a.* from PM_PB_BUDGETESTIMATE_VERSION a
	JOIN (select COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,MAX(VERSION_ORDER) VERSION_ORDER 
	from PM_PB_BUDGETESTIMATE_VERSION GROUP BY COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE) b
	on a.COMPANY_CODE=b.COMPANY_CODE and a.PRO_NO=b.PRO_NO 
	and a.BUDGETESTIMATE_CODE=b.BUDGETESTIMATE_CODE and a.VERSION_ORDER=b.VERSION_ORDER) v 
	on v.BUDGETESTIMATE_CODE=m.BUDGETESTIMATE_CODE and v.PRO_NO=m.PRO_NO and m.COMPANY_CODE=v.COMPANY_CODE

	where 1=1
	<if test="proNo!=null and proNo!=''">
		and p.PRO_NO=#{proNo}
	</if>
	<if test="categoryCode!=null and categoryCode!='' ">
		and p.CATEGORY_CODE=#{categoryCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
    AND FIND_IN_SET(p.MANAGE_DEPT,#{deptCode})
    </if>
    <if test="districtManager != null and districtManager != ''">
	and p.DISTRICT_MANAGER=#{districtManager}
	</if>
	<if test="proManager != null and proManager != ''">
	and p.EMPLOYEECODE=#{proManager}
	</if>
	<if test="areaName!=null and areaName!=''">
		and (p.CITY=#{areaName} or p.PROVINCE=#{areaName} or p.DISTRICT=#{areaName})
	</if>
	<if test="searchName!=null and searchName!=''">
		and (p.PRO_NO like concat('%',#{searchName},'%') or p.PRO_NAME like concat('%',#{searchName},'%') or p.PRO_MANAGER like concat('%',#{searchName},'%'))
	</if>
	) t
 </select>
  <select id="queryForPage" parameterType="java.util.HashMap" resultType="map">
  	<!-- select p.PRO_NAME,p.PRO_NO proNo,c.CATEGORY_NAME,p.COMPANY_CODE companyCode,p.PRO_CODE proCode 
  	from pm_base p
	left join pm_category c on c.CATEGORY_CODE=p.CATEGORY_CODE
	where 1=1 -->
	
	select p.PRO_NAME,p.PRO_NO proNo,c.CATEGORY_NAME,p.COMPANY_CODE companyCode,p.PRO_CODE proCode,v.BUDGETESTIMATE_CODE budgetEstimateCode,v.VERSION_CODE versionCode
  	from pm_base p
	left join pm_category c on c.CATEGORY_CODE=p.CATEGORY_CODE 
	JOIN PM_PB_BUDGETESTIMATE m ON p.COMPANY_CODE=m.COMPANY_CODE AND p.PRO_NO=m.PRO_No

	JOIN (select a.* from PM_PB_BUDGETESTIMATE_VERSION a
	JOIN (select COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,MAX(VERSION_ORDER) VERSION_ORDER 
	from PM_PB_BUDGETESTIMATE_VERSION GROUP BY COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE) b
	on a.COMPANY_CODE=b.COMPANY_CODE and a.PRO_NO=b.PRO_NO 
	and a.BUDGETESTIMATE_CODE=b.BUDGETESTIMATE_CODE and a.VERSION_ORDER=b.VERSION_ORDER) v 
	on v.BUDGETESTIMATE_CODE=m.BUDGETESTIMATE_CODE and v.PRO_NO=m.PRO_NO and m.COMPANY_CODE=v.COMPANY_CODE

	where 1=1
	<if test="proNo!=null and proNo!=''">
		and p.PRO_NO=#{proNo}
	</if>
	<if test="categoryCode!=null and categoryCode!='' ">
		and p.CATEGORY_CODE=#{categoryCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
    AND FIND_IN_SET(p.MANAGE_DEPT,#{deptCode})
    </if>
    <if test="districtManager != null and districtManager != ''">
	and p.DISTRICT_MANAGER=#{districtManager}
	</if>
	<if test="proManager != null and proManager != ''">
	and p.EMPLOYEECODE=#{proManager}
	</if>
	<if test="areaName!=null and areaName!=''">
		and (p.CITY=#{areaName} or p.PROVINCE=#{areaName} or p.DISTRICT=#{areaName})
	</if>
	<if test="searchName!=null and searchName!=''">
		and (p.PRO_NO like concat('%',#{searchName},'%') or p.PRO_NAME like concat('%',#{searchName},'%') or p.PRO_MANAGER like concat('%',#{searchName},'%'))
	</if>
    limit #{firstResult},#{maxResult}
  </select>
    <select id="queryForAllList" parameterType="java.util.HashMap" resultType="map">
  	select p.PRO_NAME,p.PRO_NO proNo,c.CATEGORY_NAME,p.COMPANY_CODE companyCode,p.PRO_CODE proCode,v.BUDGETESTIMATE_CODE budgetEstimateCode,v.VERSION_CODE versionCode
  	from pm_base p
	left join pm_category c on c.CATEGORY_CODE=p.CATEGORY_CODE 
	JOIN PM_PB_BUDGETESTIMATE m ON p.COMPANY_CODE=m.COMPANY_CODE AND p.PRO_NO=m.PRO_No

	JOIN (select a.* from PM_PB_BUDGETESTIMATE_VERSION a
	JOIN (select COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,MAX(VERSION_ORDER) VERSION_ORDER 
	from PM_PB_BUDGETESTIMATE_VERSION GROUP BY COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE) b
	on a.COMPANY_CODE=b.COMPANY_CODE and a.PRO_NO=b.PRO_NO 
	and a.BUDGETESTIMATE_CODE=b.BUDGETESTIMATE_CODE and a.VERSION_ORDER=b.VERSION_ORDER) v 
	on v.BUDGETESTIMATE_CODE=m.BUDGETESTIMATE_CODE and v.PRO_NO=m.PRO_NO and m.COMPANY_CODE=v.COMPANY_CODE

	where 1=1
	<if test="proNo!=null and proNo!=''">
		and p.PRO_NO=#{proNo}
	</if>
	<if test="categoryCode!=null and categoryCode!='' ">
		and p.CATEGORY_CODE=#{categoryCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
    AND FIND_IN_SET(p.MANAGE_DEPT,#{deptCode})
    </if>
    <if test="districtManager != null and districtManager != ''">
	and p.DISTRICT_MANAGER=#{districtManager}
	</if>
	<if test="proManager != null and proManager != ''">
	and p.EMPLOYEECODE=#{proManager}
	</if>
	<if test="areaName!=null and areaName!=''">
		and (p.CITY=#{areaName} or p.PROVINCE=#{areaName} or p.DISTRICT=#{areaName})
	</if>
	
	
    
  </select>
  <select id="selectProEstimateLabour" parameterType="map" resultType="map">
  	
	SELECT DISTINCT a.CONTRACT_PROPERTY_CODE contractPropertyCode,a.JOB_CODE jobCode,a.COMPANY_CODE companyCode,
	a.PRO_NO proNo,IFNULL(a.EMPLOYEECODE,'') employeeCode,a.UNIVALENT univalent,a.UNIT_CODE unitCode,a.SALARY_GRADE salaryGrade,
	a.SALARY_LEVEL salaryLevel,IFNULL(b.EMPLOYEENAME,'人员') employeeName,IFNULL(c.JOB_NAME,'') jobName,
	IFNULL(d.CONTRACT_PROPERTY_NAME,'') propertyName,e.UNIT_NAME unitName,0 workTime,0.0 labourCost,
	IFNULL(f.SALARY_GRADE_NAME_PREFIX,'') gradeFix,#{sectionCode} sectionCode
	FROM PM_PB_LABOURCOST a
	LEFT JOIN MD_EMPLOYEE b ON a.employeecode=b.employeecode
	JOIN MD_EMPLOYEE_JOB c ON a.JOB_CODE=c.JOB_CODE
	JOIN MD_EMPLOYEE_CONTRACT_PROPERTY d ON a.CONTRACT_PROPERTY_CODE=d.CONTRACT_PROPERTY_CODE
	JOIN MD_ORG_UNIT e ON a.unit_code=e.unit_code
	JOIN HRM_SALARY_FRAMEWORK f ON e.unit_code=f.unit_code
	WHERE a.pro_no=#{proNo} and a.COMPANY_CODE=#{companyCode}
  </select>
  
  
  <select id="queryFeeItemsCostList" parameterType="map" resultType="map">
	SELECT
		k.ITEM_NAME,
		sum(k.COST) COST
	FROM
		(
			SELECT
				d.PRO_NO,
				d.VERSION_CODE,
				d.SECTION_CODE,
				e.ITEM_CODE,
				f.ITEM_NAME,
				e.COST
			FROM
				(
					SELECT
						b.PRO_NO,
						c.VERSION_CODE,
						c.SECTION_CODE
					FROM
						PM_PB_ROLLING_BUDGET_VERSION b
					JOIN PM_PB_BUDGET_SECTION c ON b.PRO_NO = c.PRO_NO
					WHERE
						b.SYS_PROCESS_FLAG = '1'
					AND c.SYS_PROCESS_FLAG = '1'
					AND b.PRO_NO = #{proNo}
					AND c.SECTION_END_TIME &lt;= #{queryDate}
				) d
			JOIN PM_PB_SECTION_ITEM_COST e ON d.PRO_NO = e.PRO_NO
			AND d.VERSION_CODE = e.VERSION_CODE
			AND d.SECTION_CODE = e.SECTION_CODE
			JOIN pm_pb_item f ON e.ITEM_CODE = f.ITEM_CODE
			WHERE
				e.SYS_PROCESS_FLAG = '1'
		) k
	GROUP BY
		k.ITEM_NAME
	  
  </select>
  
  <select id="queryBudgetCost" parameterType="map" resultType="map">
SELECT
	sum(k.COST) COST
FROM
	(
		SELECT
			d.PRO_NO,
			d.VERSION_CODE,
			d.SECTION_CODE,
			e.ITEM_CODE,
			f.ITEM_NAME,
			e.COST
		FROM
			(
				SELECT
					b.PRO_NO,
					c.VERSION_CODE,
					c.SECTION_CODE
				FROM
					PM_PB_ROLLING_BUDGET_VERSION b
				JOIN PM_PB_BUDGET_SECTION c ON b.PRO_NO = c.PRO_NO
				WHERE
					b.SYS_PROCESS_FLAG = '1'
				AND c.SYS_PROCESS_FLAG = '1'
				AND b.PRO_NO = #{proNo}
				AND c.SECTION_END_TIME &lt;= #{endtime}
				AND c.SECTION_START_TIME >= #{starttime}
			) d
		JOIN PM_PB_SECTION_ITEM_COST e ON d.PRO_NO = e.PRO_NO
		AND d.VERSION_CODE = e.VERSION_CODE
		AND d.SECTION_CODE = e.SECTION_CODE
		JOIN pm_pb_item f ON e.ITEM_CODE = f.ITEM_CODE
		WHERE
			e.SYS_PROCESS_FLAG = '1'
	) k  
  </select>
  
  <select id="selectProMemberLabour" parameterType="map" resultType="map">
  	SELECT DISTINCT a.COMPANY_CODE companyCode,a.PRO_NO proNo,a.EMPLOYEECODE employeeCode,b.UNIT_CODE unitCode,
	IFNULL(b.EMPLOYEENAME,'人员') employeeName,IFNULL(c.JOB_NAME,'') jobName, IFNULL(d.CONTRACT_PROPERTY_NAME,'') propertyName,
	b.CONTRACT_PROPERTY_CODE contractPropertyCode,b.JOB_CODE jobCode,b.SALARY_GRADE salaryGrade, b.SALARY_LEVEL salaryLevel,
	b.SALARY_GRADE salaryGrade,0 workTime,0.0 labourCost, IFNULL(f.SALARY_GRADE_NAME_PREFIX,'') gradeFix,#{phaseCode} phaseCode 
	FROM PM_MEMBER a 
	JOIN MD_EMPLOYEE b ON a.employeecode=b.employeecode 
	JOIN MD_EMPLOYEE_JOB c ON b.JOB_CODE=c.JOB_CODE 
	JOIN MD_EMPLOYEE_CONTRACT_PROPERTY d ON b.CONTRACT_PROPERTY_CODE=d.CONTRACT_PROPERTY_CODE 
	JOIN MD_ORG_UNIT e ON b.unit_code=e.unit_code 
	JOIN HRM_SALARY_FRAMEWORK f ON e.unit_code=f.unit_code 
	WHERE a.pro_no=#{proNo} AND a.COMPANY_CODE=#{companyCode} AND a.WORK_STATUE=1
  </select>
  
  
  
  
  <insert id="createProBudgetEstimate" parameterType="map">
 	INSERT INTO PM_PB_BUDGETESTIMATE(COMPANY_CODE,PRO_NO,PRO_NAME,BUDGETESTIMATE_CODE,BUDGETESTIMATE_TIME,SYS_CREATE_TIME,SYS_PROCESS_FLAG)
	VALUES(#{companyCode},#{proNo},#{proName},#{budgetEstimateCode},now(),now(),'1')
 </insert>
  <insert id="createProBudgetEstimateVersion" parameterType="map">
	  INSERT INTO PM_PB_BUDGETESTIMATE_VERSION(COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,VERSION_CODE,VERSION_NO,VERSION_ORDER,VERSION_STATUS,SYS_CREATE_TIME,SYS_PROCESS_FLAG,NOS)
	  VALUES(#{companyCode},#{proNo},#{budgetEstimateCode},#{versionCode},#{versionNo},#{versionOrder},#{versionStatus},now(),'1',#{nos})
  </insert>
  
  <update id="updateVersionStatus" parameterType="map">
  		update pm_pb_budgetestimate_version set VERSION_STATUS=#{versionStatus}  where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  </update>
  
  <select id="getVersions" parameterType="map" resultType="map">
  	select * from pm_pb_budgetestimate_version where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  	
  </select>
  
  <insert id="insertFmProCost" parameterType="map">
  		insert into FM_PRO_COST(COST_YEAR,COST_MONTH,PRO_NO,PRO_NAME,ITEM_CODE,COST_VALUE,COST_DATE,IMPORT_TIME,SYS_CREATE_TIME,SYS_PROCESS_FLAG)
  		values(#{costYear},#{costMonth},#{proNo},#{proName},#{itemCode},#{costValue},#{costDate},now(),now(),'1')
  </insert>
  <delete id="deleteFmProCost" parameterType="map">
  	delete from FM_PRO_COST where PRO_NO=#{proNo} and COST_YEAR=#{costYear} AND COST_MONTH=#{costMonth}
  </delete>
  
  <select id="getPmPbItemCostDesc" parameterType="map" resultType="map">
  	select COMPANY_CODE companyCode,BUDGETESTIMATE_CODE budgetEstimateCode,PRO_NO proNo,VERSION_CODE versionCode,ITEM_CODE itemCode,ITEM_DESC itemDesc from PM_PB_ITEM_COST_DESC 
	where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  </select>
  
  <select id="getProPhase" parameterType="map" resultType="map">
   	select COMPANY_CODE companyCode,PRO_NO proNo,PRO_NAME proName,PHASE_CODE phaseCode,PHASE_NAME phaseName,PHASE_START_DATE phaseStartDate,
	PHASE_END_DATE phaseEndDate,PHASE_ORDER phaseOrder
	from PM_PB_PHASE 
	where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  </select>
  
  <select id="getLabours" parameterType="map" resultType="map">
  	select COMPANY_CODE companyCode,PRO_NO proNo,IFNULL(EMPLOYEECODE,'') employeeCode,UNIVALENT univalent,WORK_TIME workTime,LABOUR_COST labourCost,UNIT_CODE unitCode,SALARY_GRADE salaryGrade,
	SALARY_LEVEL salaryLevel,CONTRACT_PROPERTY_CODE contractPropertyCode,JOB_CODE jobCode
	from PM_PB_LABOURCOST 
	where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode} and PHASE_CODE=#{phaseCode}
  </select>
  	
  	
   <insert id="copyProPhaseLabourCost" parameterType="java.util.List">
	 	insert into PM_PB_LABOURCOST(COMPANY_CODE,PRO_NO,PHASE_CODE,EMPLOYEECODE,UNIVALENT,WORK_TIME,LABOUR_COST,
	 	SYS_CREATE_TIME,SYS_PROCESS_FLAG,UNIT_CODE,SALARY_GRADE,SALARY_LEVEL,CONTRACT_PROPERTY_CODE,JOB_CODE,BUDGETESTIMATE_CODE,VERSION_CODE)
	 	values
	 	<foreach collection="list" item="p" index="i" separator=",">
	 	(#{p.companyCode},#{p.proNo},#{p.phaseCode},#{p.employeeCode},#{p.univalent},#{p.workTime},#{p.labourCost},now(),'1',#{p.unitCode},#{p.salaryGrade},#{p.salaryLevel},#{p.contractPropertyCode},#{p.jobCode},#{p.budgetEstimateCode},#{p.versionCode})
	 	</foreach>
  </insert>
  
  <select id="getPmPbReleventfund" parameterType="map" resultType="map">
  	select COMPANY_CODE companyCode,PRO_NO proNo,IFNULL(ACCUMULATE_RECEIPT,0) accumulateReceipt,
	IFNULL(INCENTIVE_BONUS,0) incentiveBonus,IFNULL(PRO_MANAGER_BONUS,0) proManagerBonus,IFNULL(PRO_VALIDOR_BONUS,0) proValidorBonus,
	IFNULL(PARTNER_BONUS,0) partnerBonus,IFNULL(DECISION_MARKER_BONUS,0) decisionMarkerBonus
	from PM_PB_RELEVENTFUND 
	where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode} and PHASE_CODE=#{phaseCode}
  </select>
  
   <select id="getPmPbItemCost" parameterType="map" resultType="map">
   		select COMPANY_CODE companyCode,PRO_NO proNo,ITEM_CODE itemCode,COST cost,PHASE_CODE from PM_PB_ITEM_COST 
   		where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode} and PHASE_CODE=#{phaseCode}
   </select>
 	
   <select id="getBUdgetByProNo" parameterType="map" resultType="map">
   			select BUDGETESTIMATE_CODE,VERSION_CODE,CONTRACT_VALUE from pm_pb_budgetestimate_version
			where PRO_NO=#{proNo} ORDER BY VERSION_ORDER desc
			limit 0,1
   </select>
 	
 	<select id="getProCost" parameterType="map" resultType="map">
		
		
		SELECT
		p.ITEM_CODE,
		p.ITEM_NAME,
		sum(ifnull(f.COST_VALUE,0)) COST_VALUE
		FROM pm_pb_item p
		LEFT JOIN FM_PRO_COST f ON f.ITEM_CODE = p.ITEM_CODE AND cost_Date >=#{starttime}
		AND COST_DATE &lt;=#{endtime} and  PRO_NO =#{proNo} where p.ITEM_TYPE=3 GROUP BY p.ITEM_CODE
 	</select>
 	<select id="getProTotalCost" parameterType="map" resultType="map">
 	
		
		SELECT
		p.ITEM_CODE,
		p.ITEM_NAME,
		sum(ifnull(f.COST_VALUE,0)) COST_VALUE
		FROM pm_pb_item p
		LEFT JOIN FM_PRO_COST f ON f.ITEM_CODE = p.ITEM_CODE
		AND COST_DATE &lt;=#{endtime} and  PRO_NO =#{proNo} where p.ITEM_TYPE=3 GROUP BY p.ITEM_CODE
 	</select>
 	
 	<select id="getProPhasesCost" parameterType="map" resultType="map">
 	
		select p.PRO_NO,p.PRO_NAME,p.PHASE_CODE,p.PHASE_NAME,p.PHASE_START_DATE,p.PHASE_END_DATE ,t.cost
		from pm_pb_phase p 
		join(
			select PHASE_CODE,sum(cost) cost from pm_pb_item_cost  
			where PRO_NO=#{proNo}
			and BUDGETESTIMATE_CODE=#{budgetEstimateCode} 
			and VERSION_CODE=#{versionCode}
			<if test="itemCode!=null and itemCode!=''">
				AND FIND_IN_SET(ITEM_CODE,#{itemCode})
			</if>
			GROUP BY PHASE_CODE
		)t on p.PHASE_CODE=t.PHASE_CODE
		where p.PRO_NO=#{proNo}
		and p.BUDGETESTIMATE_CODE=#{budgetEstimateCode} 
		and p.VERSION_CODE=#{versionCode}
		ORDER BY p.phase_order 
 	</select>
 	
 	<select id="getprodetail" parameterType="map" resultType="map">
 		select PRO_NAME,PRO_NO,IFNULL(EMPLOYEECODE,'') EMPLOYEECODE,IFNULL(DISTRICT_MANAGER,'') DISTRICT_MANAGER from pm_base where PRO_NO=#{proNo}
 	</select>
 	
 	<select id="getPhaseListByPro" parameterType="map" resultType="map">
			select t1.*,ifnull(sum(p.COST),0)+ifnull(b.PRO_MANAGER_BONUS,0)+ifnull(b.PRO_VALIDOR_BONUS,0)+ifnull(b.PARTNER_BONUS,0)+ifnull(b.DECISION_MARKER_BONUS,0)+ifnull(b.INCENTIVE_BONUS,0) cost from(
			SELECT b.PHASE_CODE phaseCode,b.PHASE_NAME phaseName,b.MILESTONE milestone,b.PHASE_ORDER phaseOrder,
			DATE_FORMAT(b.PHASE_START_DATE,'%Y-%m-%d') PHASE_START_DATE,DATE_FORMAT(b.PHASE_END_DATE,'%Y-%m-%d') PHASE_END_DATE,
			b.BUDGETESTIMATE_CODE,b.VERSION_CODE
			FROM PM_PB_PHASE  b
			JOIN PM_PB_BUDGETESTIMATE c ON b.COMPANY_CODE=c.COMPANY_CODE AND b.PRO_NO=c.PRO_NO
		    JOIN (SELECT * FROM  PM_PB_BUDGETESTIMATE_VERSION where PRO_NO=#{proNo} ORDER BY VERSION_ORDER DESC limit 0,1) v 
		    on v.BUDGETESTIMATE_CODE=c.BUDGETESTIMATE_CODE and v.PRO_NO=c.PRO_NO 
			and c.COMPANY_CODE=v.COMPANY_CODE and b.VERSION_CODE=v.VERSION_CODE
		    WHERE b.COMPANY_CODE=#{companyCode} AND b.PRO_NO=#{proNo} ORDER BY b.PHASE_ORDER) t1
			left join pm_pb_item_cost p on t1.phaseCode=p.PHASE_CODE
			left join pm_pb_releventfund b on b.PHASE_CODE=t1.phaseCode
			GROUP BY t1.phaseCode order by t1.phaseOrder
 	</select>
 	
 	<select id="getProNo" parameterType="map" resultType="map">
 		select PRO_NAME,PRO_NO from pm_base where PRO_CODE=#{proCode}
 	</select>
 	
 	<select id="getProPlanBooks" parameterType="map" resultType="map">
 		select b.*,m.EMPLOYEENAME,p.PRO_NAME,p.PRO_CODE from pm_document_lib b
		join pm_base p on b.PRO_NO=p.PRO_NO
		join md_employee m on m.EMPLOYEECODE=p.EMPLOYEECODE
		
		 where b.DOC_TYPELIB_CODE='21' and b.PRO_NO=#{proNo}
 	</select>
 	
 	<select id="getProContract" parameterType="map" resultType="map">
 		select b.PROVINCE,b.city,b.DISTRICT,b.CONTRACT_NO,b.CONTRACT_DATE,b.CONTRACT_NAME,b.FP_UNIT,b.SP_UNIT,b.BILLING_STATUS,b.INVOICE_AMOUNT,b.NON_INVOICE_AMOUT,b.PAYMENT_STATUS,b.AMOUNT,a.PRICE FROM fm_contract_base b
		join fm_contract_proj_link a on b.CONTRACT_NO=a.CONTRACT_NO

		where a.PROJ_NO=#{proNo}
 	</select>
 	
 	<insert id="addPmpbLog" parameterType="map" >
 		insert into PM_PB_BUDGETESTIMATE_LOG (OPERATOR,OPERAT_TIME,OPERATE_PRONO,OPERATE_CONTENT,PRO_BUDGET,BUDGET_VERSION,OPERATE_DESC)

		VALUES(#{operator},now(),#{operateProNo},#{operateContent},#{budgetEstimateCode},#{versionCode},#{operateDesc})
 	</insert>
  
  	<select id="getPmPblogs" parameterType="map" resultType="map">
  			select p.OPERAT_TIME,b.PRO_NAME,b.PRO_NO,b.PRO_CODE,p.OPERATE_CONTENT,p.PRO_BUDGET,p.OPERATE_DESC,v.VERSION_NO,m.EMPLOYEENAME from PM_PB_BUDGETESTIMATE_LOG  p
			join md_employee m on m.EMPLOYEECODE=p.OPERATOR
			join pm_base b on b.PRO_NO=p.OPERATE_PRONO
			join pm_pb_budgetestimate_version v on v.BUDGETESTIMATE_CODE=p.PRO_BUDGET and p.BUDGET_VERSION=v.VERSION_CODE
			
			where p.PRO_BUDGET=#{budgetEstimateCode}
			ORDER BY p.OPERAT_TIME desc
  	</select>
  	
  	
  	<select id="getPmVersion" parameterType="map" resultType="map">
  		
  		select COMPANY_CODE,PRO_NO,BUDGETESTIMATE_CODE,VERSION_CODE,VERSION_NO from pm_pb_budgetestimate_version 

		where PRO_NO=#{proNo} ORDER BY VERSION_ORDER
  	
  	</select>
  	
  	
</mapper>