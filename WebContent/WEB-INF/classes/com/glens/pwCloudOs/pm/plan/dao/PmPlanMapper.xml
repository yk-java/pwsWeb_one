<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.pm.plan.dao.PmPlanMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.pm.plan.vo.PmPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="rowid" property="rowid" jdbcType="BIGINT" />
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="PRO_NO" property="proNo" jdbcType="VARCHAR" />
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="PLAN_TYPE" property="planType" jdbcType="INTEGER" />
    <result column="PLAN_NO" property="planNo" jdbcType="VARCHAR" />
    <result column="S_DATE" property="sdate" jdbcType="DATE" />
    <result column="E_DATE" property="edate" jdbcType="DATE" />
    <result column="PLAN_DESC" property="planDesc" jdbcType="VARCHAR" />
    <result column="PLAN_DATE" property="planDate" jdbcType="DATE" />
    <result column="FEEDBACK" property="feedback" jdbcType="VARCHAR" />
    <result column="FEEDBACK_EVAL" property="feedbackEval" jdbcType="VARCHAR" />
    <result column="EVALUATE" property="evaluate" jdbcType="VARCHAR" />
    <result column="SYS_CREATE_TIME" property="sysCreateTime" jdbcType="TIMESTAMP" />
    <result column="SYS_UPDATE_TIME" property="sysUpdateTime" jdbcType="TIMESTAMP" />
    <result column="SYS_DELETE_TIME" property="sysDeleteTime" jdbcType="TIMESTAMP" />
    <result column="SYS_PROCESS_FLAG" property="sysProcessFlag" jdbcType="CHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="KPI_PLAN_DESC" property="kpiPlanDesc" jdbcType="VARCHAR" />
    <result column="PLAN_CHECK_SCORE" property="planCheckScore" />
    <result column="FEEDBACK_CHECK_SCORE" property="feedbackCheckScore" />
    <result column="PLAN_WORDLOAD" property="planWordload" jdbcType="REAL"/>
    <result column="ALL_PLAN_WORDLOAD" property="allPlanWordload" jdbcType="REAL"/>
    <result column="proTotalWordload" property="proTotalWordload" jdbcType="REAL"/>
    <result column="PRO_MANAGER" property="proManager" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    rowid, COMPANY_CODE, PRO_NO, PRO_NAME, PLAN_TYPE, PLAN_NO, S_DATE, E_DATE, PLAN_DESC, 
    PLAN_DATE, FEEDBACK, EVALUATE, FEEDBACK_EVAL, SYS_CREATE_TIME, SYS_UPDATE_TIME, SYS_DELETE_TIME, 
    SYS_PROCESS_FLAG, REMARKS,FEEDBACK_CHECK_SCORE,PLAN_CHECK_SCORE, PLAN_WORDLOAD, ALL_PLAN_WORDLOAD
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pm_plan
    where rowid = #{rowid,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pm_plan
    where rowid = #{rowid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.glens.pwCloudOs.pm.plan.vo.PmPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pm_plan (COMPANY_CODE, PRO_NO, 
      PRO_NAME, PLAN_TYPE, PLAN_NO, 
      S_DATE, E_DATE, PLAN_DESC, PLAN_DATE, 
      FEEDBACK, EVALUATE, SYS_CREATE_TIME, 
      SYS_UPDATE_TIME, SYS_DELETE_TIME, SYS_PROCESS_FLAG, 
      REMARKS,PLAN_CHECK_SCORE,FEEDBACK_CHECK_SCORE, PLAN_WORDLOAD, ALL_PLAN_WORDLOAD)
    values (#{companyCode,jdbcType=VARCHAR}, #{proNo,jdbcType=VARCHAR}, 
      #{proName,jdbcType=VARCHAR}, #{planType,jdbcType=INTEGER}, #{planNo,jdbcType=VARCHAR}, 
      #{sdate,jdbcType=DATE}, #{edate,jdbcType=DATE}, #{planDesc,jdbcType=VARCHAR}, now(), 
      #{feedback,jdbcType=VARCHAR}, #{evaluate,jdbcType=VARCHAR}, now(), 
      null, null, 1, 
      #{remarks,jdbcType=VARCHAR},#{planCheckScore},#{feedbackCheckScore},#{planWordload},#{allPlanWordload})
  </insert>
  <insert id="insertSelective" parameterType="com.glens.pwCloudOs.pm.plan.vo.PmPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pm_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rowid != null" >
        rowid,
      </if>
      <if test="companyCode != null" >
        COMPANY_CODE,
      </if>
      <if test="proNo != null" >
        PRO_NO,
      </if>
      <if test="proName != null" >
        PRO_NAME,
      </if>
      <if test="planType != null" >
        PLAN_TYPE,
      </if>
      <if test="planNo != null" >
        PLAN_NO,
      </if>
      <if test="sdate != null" >
        S_DATE,
      </if>
      <if test="edate != null" >
        E_DATE,
      </if>
      <if test="planDesc != null" >
        PLAN_DESC,
      </if>
      <if test="planDate != null" >
        PLAN_DATE,
      </if>
      <if test="feedback != null" >
        FEEDBACK,
      </if>
      <if test="evaluate != null" >
        EVALUATE,
      </if>
      <if test="sysCreateTime != null" >
        SYS_CREATE_TIME,
      </if>
      <if test="sysUpdateTime != null" >
        SYS_UPDATE_TIME,
      </if>
      <if test="sysDeleteTime != null" >
        SYS_DELETE_TIME,
      </if>
      <if test="sysProcessFlag != null" >
        SYS_PROCESS_FLAG,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rowid != null" >
        #{rowid,jdbcType=BIGINT},
      </if>
      <if test="companyCode != null" >
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="proNo != null" >
        #{proNo,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="planType != null" >
        #{planType,jdbcType=INTEGER},
      </if>
      <if test="planNo != null" >
        #{planNo,jdbcType=VARCHAR},
      </if>
      <if test="sdate != null" >
        #{sdate,jdbcType=DATE},
      </if>
      <if test="edate != null" >
        #{edate,jdbcType=DATE},
      </if>
      <if test="planDesc != null" >
        #{planDesc,jdbcType=VARCHAR},
      </if>
      <if test="planDate != null" >
        #{planDate,jdbcType=DATE},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null" >
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="sysCreateTime != null" >
        #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null" >
        #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysDeleteTime != null" >
        #{sysDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysProcessFlag != null" >
        #{sysProcessFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.glens.pwCloudOs.pm.plan.vo.PmPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pm_plan
    <set >
      <if test="companyCode != null" >
        COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="proNo != null" >
        PRO_NO = #{proNo,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        PRO_NAME = #{proName,jdbcType=VARCHAR},
      </if>
      
      <if test="planNo != null" >
        PLAN_NO = #{planNo,jdbcType=VARCHAR},
      </if>
      <if test="sdate != null" >
        S_DATE = #{sdate,jdbcType=DATE},
      </if>
      <if test="edate != null" >
        E_DATE = #{edate,jdbcType=DATE},
      </if>
      <if test="planDesc != null" >
        PLAN_DESC = #{planDesc,jdbcType=VARCHAR},
      </if>
      <if test="planDate != null" >
        PLAN_DATE = #{planDate,jdbcType=DATE},
      </if>
      <if test="feedback != null" >
        FEEDBACK = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null" >
        EVALUATE = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="feedbackEval != null" >
        FEEDBACK_EVAL = #{feedbackEval,jdbcType=VARCHAR},
      </if>
      <if test="sysProcessFlag != null" >
        SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="planCheckScore != null" >
        PLAN_CHECK_SCORE = #{planCheckScore},
      </if>
      <if test="feedbackCheckScore != null" >
        FEEDBACK_CHECK_SCORE = #{feedbackCheckScore},
      </if>
      <if test="planWordload != null">
      	PLAN_WORDLOAD = #{planWordload},
      </if>
      <if test="allPlanWordload != null">
      	ALL_PLAN_WORDLOAD = #{allPlanWordload},
      </if>
      SYS_UPDATE_TIME=now()
    </set>
    where rowid = #{rowid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glens.pwCloudOs.pm.plan.vo.PmPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pm_plan
    set COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
      PRO_NO = #{proNo,jdbcType=VARCHAR},
      PRO_NAME = #{proName,jdbcType=VARCHAR},
      PLAN_TYPE = #{planType,jdbcType=INTEGER},
      PLAN_NO = #{planNo,jdbcType=VARCHAR},
      S_DATE = #{sdate,jdbcType=DATE},
      E_DATE = #{edate,jdbcType=DATE},
      PLAN_DESC = #{planDesc,jdbcType=VARCHAR},
      PLAN_DATE = #{planDate,jdbcType=DATE},
      FEEDBACK = #{feedback,jdbcType=VARCHAR},
      EVALUATE = #{evaluate,jdbcType=VARCHAR},
      PLAN_CHECK_SCORE = #{planCheckScore},
      FEEDBACK_CHECK_SCORE = #{feedbackCheckScore},
      SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
      SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=TIMESTAMP},
      SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
      SYS_PROCESS_FLAG = #{sysProcessFlag,jdbcType=CHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where rowid = #{rowid,jdbcType=BIGINT}
  </update>
  
  <select id="queryForList" resultMap="BaseResultMap" parameterType="map">
    select 
    	t1.*,
    	group_concat(t3.kpi_name, '(',t2.kpi_value,')') as kpi_plan_desc,
    	t4.total_workload as proTotalWordload,
    	t4.pro_code
    from pm_plan t1
	left join pm_plan_kpi t2 on t2.pro_no = t1.pro_no and t2.plan_no = t1.plan_no
	left join pm_pro_kpi t3 on t3.kpi_code = t2.kpi_code
	join pm_base t4 on t4.pro_no = t1.pro_no
	where 1=1
	<if test="accountCode != null and accountCode != ''">
	and t4.account_code=#{accountCode, jdbcType=VARCHAR}
	</if>
	<if test="proStatus != null and proStatus != ''">
	and t4.pro_status = #{proStatus}
	</if>
    <if test="proNo != null and proNo != ''">
    and t1.PRO_NO = #{proNo,jdbcType=VARCHAR}
    </if>
    <if test="planType != null and planType != ''">
    and t1.PLAN_TYPE = #{planType,jdbcType=INTEGER}
    </if>
    <if test="year != null and year != ''">
    and (date_format(t1.S_DATE, '%Y') = #{year,jdbcType=VARCHAR}
    	or date_format(t1.E_DATE, '%Y') = #{year,jdbcType=VARCHAR})
    </if>
    <if test="startTime != null and startTime != ''">
	   	and #{startTime, jdbcType=VARCHAR} &lt;= t1.S_DATE
    </if>
    <if test="endTime != null and endTime != ''">
    	and t1.E_DATE &lt;= #{endTime, jdbcType=VARCHAR}
    </if>
    <if test="isEval != null and isEval == 1">
    	and t1.EVALUATE is not null and t1.EVALUATE &lt;&gt; ''
    </if>
    <if test="isFeedback != null and isFeedback == 1">
    	and t1.FEEDBACK is not null and t1.FEEDBACK &lt;&gt; ''
    </if>
    <if test="isFeedbackEval != null and isFeedbackEval == 1">
    	and t1.FEEDBACK_EVAL is not null and t1.FEEDBACK_EVAL &lt;&gt; ''
    </if>
    <if test="districtManager != null and districtManager != ''">
		and t4.DISTRICT_MANAGER=#{districtManager}
		</if>
	<if test="deptCode != null and deptCode != ''">
		and t4.MANAGE_DEPT=#{deptCode}
    </if>	
   
	group by t1.pro_no, t1.plan_no
  </select>
  
  <select id="queryForCount" resultType="int" parameterType="map">
    select 
    	count(*)
    from (
	    select 
	    	t1.*
	    from pm_plan t1
		left join pm_plan_kpi t2 on t2.pro_no = t1.pro_no and t2.plan_no = t1.plan_no
		left join pm_pro_kpi t3 on t3.kpi_code = t2.kpi_code
		join pm_base t4 on t4.pro_no = t1.pro_no
		where 1=1
	    <if test="accountCode != null and accountCode != ''">
		and t4.account_code=#{accountCode, jdbcType=VARCHAR}
		</if>
		<if test="proStatus != null and proStatus != ''">
		and t4.pro_status = #{proStatus}
		</if>
	    <if test="proNo != null and proNo != ''">
	    and t1.PRO_NO = #{proNo,jdbcType=VARCHAR}
	    </if>
	    <if test="planType != null and planType != ''">
	    and t1.PLAN_TYPE = #{planType,jdbcType=INTEGER}
	    </if>
	    <if test="year != null and year != ''">
	    and (date_format(t1.S_DATE, '%Y') = #{year,jdbcType=VARCHAR}
	    	or date_format(t1.E_DATE, '%Y') = #{year,jdbcType=VARCHAR})
	    </if>
	    <if test="startTime != null and startTime != ''">
	    	and #{startTime, jdbcType=VARCHAR} &lt;= t1.S_DATE
	    </if>
	    <if test="endTime != null and endTime != ''">
	    	and t1.E_DATE &lt;= #{endTime, jdbcType=VARCHAR}
	    </if>
	    <if test="isEval != null and isEval == 1">
	    	and t1.EVALUATE is not null and t1.EVALUATE &lt;&gt; ''
	    </if>
	    <if test="isFeedback != null and isFeedback == 1">
	    	and t1.FEEDBACK is not null and t1.FEEDBACK &lt;&gt; ''
	    </if>
	    <if test="isFeedbackEval != null and isFeedbackEval == 1">
	    	and t1.FEEDBACK_EVAL is not null and t1.FEEDBACK_EVAL &lt;&gt; ''
	    </if>
	    <if test="districtManager != null and districtManager != ''">
		and t4.DISTRICT_MANAGER=#{districtManager}
		</if>
		<if test="deptCode != null and deptCode != ''">
		and t4.MANAGE_DEPT=#{deptCode}
    	</if>
    	 <if test="searchName!=null and searchName!=''">
			and (t4.PRO_NO like concat('%',#{searchName},'%') or t4.PRO_NAME like concat('%',#{searchName},'%') or t4.PRO_MANAGER like concat('%',#{searchName},'%'))
		</if>
		group by t1.pro_no, t1.plan_no
	) tmp
  </select>
  
  <select id="queryForPage" resultMap="BaseResultMap" parameterType="map">
    select 
    	t1.*,
    	group_concat(t3.kpi_name, '(',t2.kpi_value,')') as kpi_plan_desc,
    	t4.total_workload as proTotalWordload,t4.pro_manager
    from pm_plan t1
	left join pm_plan_kpi t2 on t2.pro_no = t1.pro_no and t2.plan_no = t1.plan_no
	left join pm_pro_kpi t3 on t3.kpi_code = t2.kpi_code
	join pm_base t4 on t4.pro_no = t1.pro_no
	where 1=1
	<if test="accountCode != null and accountCode != ''">
	and t4.account_code=#{accountCode, jdbcType=VARCHAR}
	</if>
	<if test="proStatus != null and proStatus != ''">
	and t4.pro_status = #{proStatus}
	</if>
    <if test="proNo != null and proNo != ''">
    and t1.PRO_NO = #{proNo,jdbcType=VARCHAR}
    </if>
    <if test="planType != null and planType != ''">
    and t1.PLAN_TYPE = #{planType,jdbcType=INTEGER}
    </if>
    <if test="year != null and year != ''">
    and (date_format(t1.S_DATE, '%Y') = #{year,jdbcType=VARCHAR}
    	or date_format(t1.E_DATE, '%Y') = #{year,jdbcType=VARCHAR})
    </if>
    <if test="startTime != null and startTime != ''">
	   	and #{startTime, jdbcType=VARCHAR} &lt;= t1.S_DATE
    </if>
    <if test="endTime != null and endTime != ''">
    	and t1.E_DATE &lt;= #{endTime, jdbcType=VARCHAR}
    </if>
    <if test="isEval != null and isEval == 1">
    	and t1.EVALUATE is not null and t1.EVALUATE &lt;&gt; ''
    </if>
    <if test="isFeedback != null and isFeedback == 1">
    	and t1.FEEDBACK is not null and t1.FEEDBACK &lt;&gt; ''
    </if>
    <if test="isFeedbackEval != null and isFeedbackEval == 1">
    	and t1.FEEDBACK_EVAL is not null and t1.FEEDBACK_EVAL &lt;&gt; ''
    </if>
    <if test="districtManager != null and districtManager != ''">
		and t4.DISTRICT_MANAGER=#{districtManager}
		</if>
	<if test="deptCode != null and deptCode != ''">
		and t4.MANAGE_DEPT=#{deptCode}
    </if>
     <if test="searchName!=null and searchName!=''">
		and (t4.PRO_NO like concat('%',#{searchName},'%') or t4.PRO_NAME like concat('%',#{searchName},'%') or t4.PRO_MANAGER like concat('%',#{searchName},'%'))
	</if>	
	group by t1.pro_no, t1.plan_no
	limit #{firstResult},#{maxResult} 
  </select>
  <select id="getAllPlanWordload" parameterType="map" resultType="float">
  	SELECT ROUND(SUM(plan_wordload),2) 
  	FROM pm_plan 
  	WHERE pro_no = #{proNo} AND e_date &lt; #{date}
  </select>
</mapper>