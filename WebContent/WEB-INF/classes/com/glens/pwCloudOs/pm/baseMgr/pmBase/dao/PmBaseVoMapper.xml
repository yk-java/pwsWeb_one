<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.pm.baseMgr.pmBase.dao.PmBaseVoMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.pm.baseMgr.pmBase.vo.PmBaseVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="PRO_NO" property="proNo" jdbcType="VARCHAR" />
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR" />
    <result column="MANAGE_DEPT" property="manageDept" jdbcType="VARCHAR" />
    <result column="MANAGE_DEPT_NAME" property="manageDeptName" jdbcType="VARCHAR" />
    <result column="DISTRICT_MANAGER" property="districtManager" jdbcType="VARCHAR" />
    <result column="DISTRICT_MANAGER_NAME" property="districtManagerName" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="PROVINCE" property="province" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="DISTRICT" property="district" jdbcType="VARCHAR" />
    <result column="PRO_YEAR" property="proYear" jdbcType="INTEGER" />
    <result column="CATEGORY_CODE" property="categoryCode" jdbcType="VARCHAR" />
    <result column="PRO_STATUS" property="proStatus" jdbcType="INTEGER" />
    <result column="PRO_PHASE" property="proPhase" jdbcType="INTEGER" />
    <result column="INIT_WORKLOAD" property="initWorkload" jdbcType="INTEGER" />
    <result column="TOTAL_WORKLOAD" property="totalWorkload" jdbcType="INTEGER" />
    <result column="UNIT_WORKLOAD" property="unitWorkload" jdbcType="VARCHAR" />
    <result column="IW_PROPORTION" property="iwProportion" jdbcType="REAL" />
    <result column="OW_PROPORTION" property="owProportion" jdbcType="REAL" />
    <result column="S_DATE" property="sdate" />
    <result column="E_DATE" property="edate" />
    <result column="PPM" property="ppm" jdbcType="REAL" />
    <result column="PPW" property="ppw" jdbcType="REAL" />
    <result column="DEMAND_STAFF" property="demandStaff" jdbcType="INTEGER" />
    <result column="QC_MIN" property="qcMin" jdbcType="REAL" />
    <result column="PRO_MANAGER" property="proManager" jdbcType="VARCHAR" />
    <result column="EMPLOYEECODE" property="employeecode" jdbcType="VARCHAR" />
    <result column="ACCOUNT_CODE" property="accountCode" jdbcType="VARCHAR" />
    <result column="T_PRICE" property="tprice" jdbcType="REAL" />
    <result column="U_PRICE" property="uprice" jdbcType="VARCHAR" />
    <result column="INCOME" property="income" jdbcType="REAL" />
    <result column="FACTOR" property="factor" jdbcType="REAL" />
    <result column="CLEARFORM" property="clearform" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="CONTRACT_DATE" property="contractDate" jdbcType="DATE" />
    <result column="CONTRACT_NO" property="contractNo" jdbcType="VARCHAR" />
    <result column="MEMBER_COUNT" property="memberCount" jdbcType="VARCHAR" />
    <result column="FORECAST_WORKLOAD" property="forecastWorkload"/>
    <result column="PROGRESS_MODE" property="progressMode" jdbcType="INTEGER" />
    <result column="PROGRESS_MODE_NAME" property="progressModeName" jdbcType="VARCHAR" />
    <result column="START_METTING" property="startMetting" jdbcType="CHAR" />
    <result column="TEST_RUN" property="testRun" jdbcType="CHAR" />
    <result column="CHANGE" property="change" jdbcType="CHAR" />
    <result column="APPLY_CONTENT" property="applyContent" jdbcType="VARCHAR" />
    <result column="SYS_CREATE_TIME" property="applyDate" jdbcType="VARCHAR" />
    <result column="APPLY_ID" property="applyId" jdbcType="INTEGER" />
    <result column="RANGE_DETAIL_BOOK" property="rangeDetailBook" jdbcType="VARCHAR" />
    <result column="RANGE_DETAIL_BOOK" property="rangeDetailBook" jdbcType="VARCHAR" />
    <result column="SAMPLE_CONFIRM_FILE" property="sampleConfirmFile" jdbcType="VARCHAR" />
    <result column="PLAN_BOOK" property="planBook" jdbcType="VARCHAR" />
    <result column="ESTIMATE" property="estimate" jdbcType="VARCHAR" />
    <result column="OVER_SPEND" property="overSpend" jdbcType="VARCHAR" />
    <result column="OVER_SPEND_MONEY" property="overSpendMoney" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    a.COMPANY_CODE, a.PRO_NO, a.PRO_CODE, a.MANAGE_DEPT, a.DISTRICT_MANAGER,
    a.PRO_NAME, a.PROVINCE, a.CITY, a.DISTRICT, a.PRO_YEAR, a.CATEGORY_CODE, a.PRO_STATUS, 
    a.PRO_PHASE, a.INIT_WORKLOAD, a.TOTAL_WORKLOAD, a.UNIT_WORKLOAD, a.IW_PROPORTION, a.OW_PROPORTION, 
    DATE_FORMAT(a.S_DATE,'%Y-%m-%d') S_DATE, DATE_FORMAT(a.E_DATE,'%Y-%m-%d') E_DATE, a.PPM, a.PPW, 
    a.DEMAND_STAFF, a.QC_MIN, a.PRO_MANAGER, a.EMPLOYEECODE, a.ACCOUNT_CODE, 
    a.T_PRICE, a.U_PRICE, a.INCOME, a.FACTOR, a.CLEARFORM, a.REMARKS,b.CATEGORY_NAME,a.CONTRACT_DATE,a.CHANGE,
    a.CONTRACT_NO,a.PROGRESS_MODE,(case a.PROGRESS_MODE when 1 then '按时间' when 2 then '按工作量' else '' end) as PROGRESS_MODE_NAME
  </sql>
  
  <select id="queryList" resultType="map">
	SELECT
		PRO_CODE proCode,
		PRO_NO proNo,
		PRO_NAME proName
	FROM
		pm_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
  </select>
  
  <select id="getpro" parameterType="long"  resultType="map">
  	select a.PRO_CODE, a.PRO_NO, a.PRO_NAME
  	from pm_base a
  	where a.PRO_NO in (
  		select pro_no from fm_money_return where rowid=#{rowid}
  	)
  </select>
  
  <select id="queryProBaseList" parameterType="map" resultType="map">
		SELECT
			b.PROVINCE,
			b.CITY,
			b.DISTRICT,
			d.CATEGORY_NAME,
			b.PRO_NAME,
			b.PRO_NO,
			b.PRO_CODE,
			b.TOTAL_WORKLOAD,
			b.UNIT_WORKLOAD,
			DATE_FORMAT(b.S_DATE,'%Y-%m-%d') S_DATE,
			DATE_FORMAT(b.E_DATE,'%Y-%m-%d') E_DATE,
			round(
				datediff(NOW(), b.S_DATE) / datediff(E_DATE, b.S_DATE),
				2
			) * 100 TIMEPROGRESS,
			b.PRO_MANAGER,
			(
				SELECT
					count(1)
				FROM
					pm_member c
				WHERE
					c.PRO_NO = b.PRO_NO
				AND c.WORK_STATUE = '1'
			) MEMBER_CNT
		FROM
			pm_base b
		LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
		WHERE
			b.SYS_PROCESS_FLAG = '1'  	
		and b.PRO_STATUS=2
		<if test="proNo!=null and proNo!=''">
			and b.PRO_NO=#{proNo}
		</if>
		<if test="searchName!=null and searchName!=''">
			and  (b.PRO_MANAGER like concat('%',#{searchName},'%')  or  b.PRO_NAME like concat('%',#{searchName},'%'))
		</if>
		<if test="deptCode != null and deptCode != ''">
		and b.MANAGE_DEPT=#{deptCode}
   		 </if>
   		 <if test="districtManager!=null and districtManager!=''">
	    	and b.DISTRICT_MANAGER=#{districtManager}
	    </if>
		order by b.PROVINCE,
			b.CITY,
			b.DISTRICT
  </select>
  
  <select id="queryProCostCount" parameterType="java.util.HashMap" resultType="int">
	SELECT
		count(1)
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN pm_annual_output sb  on b.PRO_NO=sb.PRO_NO  and sb.YEARS=YEAR(now())
	LEFT JOIN MD_ORG_UNIT k on b.MANAGE_DEPT=k.UNIT_CODE
	LEFT JOIN (
	SELECT
		g.PRO_NO,
		CONCAT(
			round(g.COMPLETION_STAGE * 100, 2),
			'%'
		) COMPLETION
	FROM
		pm_week_workload g
	WHERE
		g.ROW_ID IN (
			SELECT
				max(f.ROW_ID) rowid
			FROM
				pm_week_workload f
			WHERE
				1 = 1
				<if test="queryDate!=null and queryDate!=''">
					AND (#{queryDate} >= f.START_DATE  AND #{queryDate} &lt;= f.END_DATE)
				</if>
			GROUP BY
				f.PRO_NO
		)
	) e ON b.PRO_NO = e.PRO_NO
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if> 
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
  </select>
   <select id="queryProCostForPage1" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		b.ROWID,
		b.PRO_YEAR,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		b.PROVINCE,
		b.CITY,
		b.DISTRICT,
		b.MANAGE_DEPT,
		k.UNIT_NAME,		
		b.PRO_STATUS,
		DATE_FORMAT(b.S_DATE, '%Y-%m-%d') S_DATE,
		DATE_FORMAT(b.E_DATE, '%Y-%m-%d') E_DATE,
		b.PPM,
		b.PPW,
		b.UNIT_WORKLOAD,
		b.TOTAL_WORKLOAD,
		b.PRO_MANAGER,
		(
			SELECT
				count(1)
			FROM
				pm_member c
			WHERE
				c.PRO_NO = b.PRO_NO
			AND c.WORK_STATUE = '1'
		) MEMBER_CNT,
		IFNULL(b.T_PRICE, 0) T_PRICE,
		sb.ESTIMATED_PRICE ESTIMATE_PRICE
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN pm_annual_output sb  on b.PRO_NO=sb.PRO_NO  and sb.YEARS=YEAR(now())
	LEFT JOIN MD_ORG_UNIT k on b.MANAGE_DEPT=k.UNIT_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
	
	
  </select>
  <select id="queryProCostForPage" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		b.ROWID,
		b.PRO_YEAR,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		b.PROVINCE,
		b.CITY,
		b.DISTRICT,
		b.MANAGE_DEPT,
		k.UNIT_NAME,		
		b.PRO_STATUS,
		DATE_FORMAT(b.S_DATE, '%Y-%m-%d') S_DATE,
		DATE_FORMAT(b.E_DATE, '%Y-%m-%d') E_DATE,
		b.PPM,
		b.PPW,
		b.UNIT_WORKLOAD,
		b.TOTAL_WORKLOAD,
		b.PRO_MANAGER,
		(
			SELECT
				count(1)
			FROM
				pm_member c
			WHERE
				c.PRO_NO = b.PRO_NO
			AND c.WORK_STATUE = '1'
		) MEMBER_CNT,
		IFNULL(b.T_PRICE, 0) T_PRICE,
		sb.ESTIMATED_PRICE ESTIMATE_PRICE
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN pm_annual_output sb  on b.PRO_NO=sb.PRO_NO  and sb.YEARS=YEAR(now())
	LEFT JOIN MD_ORG_UNIT k on b.MANAGE_DEPT=k.UNIT_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
	
	limit #{firstResult},#{maxResult}
  </select>
  
  
   <select id="queryProPeopleCostCount" parameterType="java.util.HashMap" resultType="int">
		SELECT
			count(1)
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN MD_ORG_UNIT k ON b.MANAGE_DEPT = k.UNIT_CODE
	LEFT JOIN pm_member m ON b.PRO_NO = m.PRO_NO
	JOIN md_employee n ON m.EMPLOYEECODE = n.EMPLOYEECODE
	AND n.WORK_STATUS = 1
	LEFT JOIN md_employee_contract_property o ON n.CONTRACT_PROPERTY_CODE = o.CONTRACT_PROPERTY_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'	
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
  </select>
  
  <select id="queryProPeopleCostForPage" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
		b.ROWID,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		b.PROVINCE,
		b.CITY,
		b.DISTRICT,
		b.MANAGE_DEPT,
		k.UNIT_NAME,
		n.EMPLOYEECODE,
		n.EMPLOYEENAME,
		n.JOB_NO,
		o.CONTRACT_PROPERTY_NAME
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN MD_ORG_UNIT k ON b.MANAGE_DEPT = k.UNIT_CODE
	LEFT JOIN pm_member m ON b.PRO_NO = m.PRO_NO
	JOIN md_employee n ON m.EMPLOYEECODE = n.EMPLOYEECODE
	AND n.WORK_STATUS = 1
	LEFT JOIN md_employee_contract_property o ON n.CONTRACT_PROPERTY_CODE = o.CONTRACT_PROPERTY_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'	
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
	
	limit #{firstResult},#{maxResult}
  </select>
  
  
  <select id="queryProPeopleCostForList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
		b.ROWID,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		b.PROVINCE,
		b.CITY,
		b.DISTRICT,
		b.MANAGE_DEPT,
		k.UNIT_NAME,
		n.EMPLOYEECODE,
		n.EMPLOYEENAME,
		n.JOB_NO,
		o.CONTRACT_PROPERTY_NAME
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN MD_ORG_UNIT k ON b.MANAGE_DEPT = k.UNIT_CODE
	LEFT JOIN pm_member m ON b.PRO_NO = m.PRO_NO
	JOIN md_employee n ON m.EMPLOYEECODE = n.EMPLOYEECODE
	AND n.WORK_STATUS = 1
	LEFT JOIN md_employee_contract_property o ON n.CONTRACT_PROPERTY_CODE = o.CONTRACT_PROPERTY_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'	
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
	
  </select>
  
  
  <select id="queryProCostForList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		b.ROWID,
		b.PRO_YEAR,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		b.PROVINCE,
		b.CITY,
		b.DISTRICT,
		b.MANAGE_DEPT,
		k.UNIT_NAME,		
		b.PRO_STATUS,
		DATE_FORMAT(b.S_DATE, '%Y-%m-%d') S_DATE,
		DATE_FORMAT(b.E_DATE, '%Y-%m-%d') E_DATE,
		b.PPM,
		b.PPW,
		b.UNIT_WORKLOAD,
		b.TOTAL_WORKLOAD,
		b.PRO_MANAGER,
		(
			SELECT
				count(1)
			FROM
				pm_member c
			WHERE
				c.PRO_NO = b.PRO_NO
			AND c.WORK_STATUE = '1'
		) MEMBER_CNT,
		IFNULL(b.T_PRICE, 0) T_PRICE,
		sb.ESTIMATED_PRICE ESTIMATE_PRICE,
		IFNULL(e.`COMPLETION`, 0) COMPLETION
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN pm_annual_output sb  on b.PRO_NO=sb.PRO_NO  and sb.YEARS=YEAR(now())
	LEFT JOIN MD_ORG_UNIT k on b.MANAGE_DEPT=k.UNIT_CODE
	LEFT JOIN (
	SELECT
		g.PRO_NO,
		CONCAT(
			round(g.COMPLETION_STAGE * 100, 2),
			'%'
		) COMPLETION
	FROM
		pm_week_workload g
	WHERE
		g.ROW_ID IN (
			SELECT
				max(f.ROW_ID) rowid
			FROM
				pm_week_workload f
			WHERE
				1 = 1
				<if test="queryDate!=null and queryDate!=''">
					AND (#{queryDate} >= f.START_DATE  AND #{queryDate} &lt;= f.END_DATE)
				</if>
			GROUP BY
				f.PRO_NO
		)
	) e ON b.PRO_NO = e.PRO_NO
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	<if test="proNosList!=null and proNosList.size>0">
		and b.PRO_NO in (
			<foreach collection="proNosList" item="item" separator=",">
			#{item}
			</foreach>
		)
	</if>
	<if test="year!=null and year!=''">
		 and b.PRO_YEAR=#{year}
	</if> 
	<if test="address!=null and address!=''">
		and (b.PROVINCE=#{address} or b.CITY=#{address} or b.DISTRICT=#{address}) 
	</if>
	<if test="unitCode!=null and unitCode!=''">
		and b.MANAGE_DEPT=#{unitCode}
	</if>
	<if test="categoryCode!=null and categoryCode!=''">
		and b.CATEGORY_CODE=#{categoryCode}
	</if>
	
  </select>
  
  
  <select id="queryAllFeeItem" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		b.ITEM_CODE FEE_CODE,
		b.ITEM_NAME FEE_NAME
	FROM
		pm_pb_item b
	WHERE
		b.ITEM_TYPE = 2
	AND b.SYS_PROCESS_FLAG = '1'
	ORDER BY
		b.ITEM_ORDER  
  </select>
  
  <select id="getProCost" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		b.ROWID,
		b.PRO_YEAR,
		d.CATEGORY_NAME,
		b.PRO_NAME,
		b.PRO_NO,
		b.PRO_CODE,
		DATE_FORMAT(b.S_DATE, '%Y-%m-%d') S_DATE,
		DATE_FORMAT(b.E_DATE, '%Y-%m-%d') E_DATE,
		b.PPM,
		b.PPW,
		b.UNIT_WORKLOAD,
		b.PRO_MANAGER,
		(
			SELECT
				count(1)
			FROM
				pm_member c
			WHERE
				c.PRO_NO = b.PRO_NO
			AND c.WORK_STATUE = '1'
		) MEMBER_CNT,
		IFNULL(b.T_PRICE, 0) T_PRICE,
		IFNULL(e.`COMPLETION`, 0) COMPLETION
	FROM
		pm_base b
	LEFT JOIN pm_category d ON b.CATEGORY_CODE = d.CATEGORY_CODE
	LEFT JOIN (
	SELECT
		g.PRO_NO,
		CONCAT(
			round(g.COMPLETION_STAGE * 100, 2),
			'%'
		) COMPLETION
	FROM
		pm_week_workload g
	WHERE
		g.ROW_ID IN (
			SELECT
				max(f.ROW_ID) rowid
			FROM
				pm_week_workload f
			WHERE
				1 = 1
				<if test="starttime!=null and starttime!=''">
					AND #{starttime} &lt;= f.START_DATE
				</if>
				<if test="endtime!=null and endtime!=''">
					AND #{endtime} >= f.END_DATE
				</if>
			GROUP BY
				f.PRO_NO
		)
	) e ON b.PRO_NO = e.PRO_NO
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_NO=#{proNo}
  </select>
  
  <select id="queryFeeTypeCostList" parameterType="map" resultType="map">
	SELECT
		b.PRO_NO,
		c.FEE_TYPE,
		d.FEE_NAME,
		sum(c.TOTAL_MONEY) TOTAL_MONEY
	FROM
		pm_base b
	JOIN fm_money_return c ON b.PRO_NO = c.PRO_NO
	JOIN fm_fee_type d ON c.FEE_TYPE = d.FEE_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_STATUS = 2
	<if test="queryDate!=null and queryDate!=''">
		 and c.APPLY_DATE &lt;=#{queryDate}
	</if>
	<if test="proNo!=null and proNo!=''">
		and b.PRO_NO=#{proNo}
	</if>
	GROUP BY
		b.PRO_NO,
		c.FEE_TYPE,
		d.FEE_NAME	
  </select>
  
  
  
  <select id="queryForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*)
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_NO like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
     <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
  </select>
  
  <select id="queryForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select 
    a.COMPANY_CODE, a.PRO_NO, a.PRO_CODE, a.MANAGE_DEPT, a.DISTRICT_MANAGER,
    a.PRO_NAME, a.PROVINCE, a.CITY, a.DISTRICT, a.PRO_YEAR, a.CATEGORY_CODE, a.PRO_STATUS, 
    a.PRO_PHASE, a.INIT_WORKLOAD, a.TOTAL_WORKLOAD, a.UNIT_WORKLOAD, a.IW_PROPORTION, a.OW_PROPORTION, 
    DATE_FORMAT(a.S_DATE,'%Y-%m-%d') S_DATE, DATE_FORMAT(a.E_DATE,'%Y-%m-%d') E_DATE, a.PPM, a.PPW, 
    a.DEMAND_STAFF, a.QC_MIN, a.PRO_MANAGER, a.EMPLOYEECODE, a.ACCOUNT_CODE, 
    a.T_PRICE, a.U_PRICE, a.INCOME, a.FACTOR, a.CLEARFORM, a.REMARKS,b.CATEGORY_NAME,a.CONTRACT_DATE,a.`CHANGE`,
    a.CONTRACT_NO,a.PROGRESS_MODE,(case a.PROGRESS_MODE when 1 then '按时间' when 2 then '按工作量' else '' end) as PROGRESS_MODE_NAME,b.category_name as categoryName,
    d.unit_name as MANAGE_DEPT_NAME,
    e.employeename as DISTRICT_MANAGER_NAME,
    ifnull(f.FORECAST_WORKLOAD,0.0) FORECAST_WORKLOAD,
    (select count(1) from  PM_MEMBER c where a.PRO_NO=c.PRO_NO AND c.work_statue=1)   MEMBER_COUNT
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    left join PM_ANNUAL_OUTPUT f on a.PRO_NO=f.PRO_NO and f.YEARS=YEAR(NOW())
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_CODE like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
    <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
    GROUP BY a.PRO_NO
    ORDER BY
	a.SYS_UPDATE_TIME DESC
    limit #{firstResult},#{maxResult}
  </select>
  
  <select id="queryForList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />,b.category_name as categoryName,
    d.unit_name as MANAGE_DEPT_NAME,
    e.employeename as DISTRICT_MANAGER_NAME
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN PM_MEMBER c ON a.PRO_NO=c.PRO_NO AND c.work_statue=1
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_CODE like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
     <if test="deptCode != null and deptCode != ''">
    and a.MANAGE_DEPT=#{deptCode}
    </if>
    GROUP BY a.PRO_NO
  </select>
  
  <select id="queryEmployeeProList"  resultType="map" parameterType="java.lang.String" >
	SELECT
		b.PRO_NO,
		b.PRO_CODE,
		b.PRO_NAME
	FROM
		pm_base b
	LEFT JOIN md_employee c ON b.EMPLOYEECODE = c.EMPLOYEECODE
	WHERE
		c.JOB_NO = #{jobNo}
	UNION
		SELECT
			b.PRO_NO,
			b.PRO_CODE,
			b.PRO_NAME
		FROM
			pm_base b
		LEFT JOIN pm_member c ON b.PRO_NO = c.PRO_NO
		LEFT JOIN md_employee d ON c.EMPLOYEECODE = d.EMPLOYEECODE
		WHERE
			d.JOB_NO = #{jobNo}  		
  </select>
  
  <select id="queryAllProList" resultType="map">
	 SELECT
		b.PRO_NO,
		b.PRO_CODE,
		b.PRO_NAME
	FROM
		pm_base b 	
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    a.COMPANY_CODE, a.PRO_NO, a.PRO_CODE, a.MANAGE_DEPT, a.DISTRICT_MANAGER,
    a.PRO_NAME, a.PROVINCE, a.CITY, a.DISTRICT, a.PRO_YEAR, a.CATEGORY_CODE, a.PRO_STATUS, 
    a.PRO_PHASE, a.INIT_WORKLOAD, a.TOTAL_WORKLOAD, a.UNIT_WORKLOAD, a.IW_PROPORTION, a.OW_PROPORTION, 
    DATE_FORMAT(a.S_DATE,'%Y-%m-%d') S_DATE, DATE_FORMAT(a.E_DATE,'%Y-%m-%d') E_DATE, a.PPM, a.PPW, 
    a.DEMAND_STAFF, a.QC_MIN, a.PRO_MANAGER, a.EMPLOYEECODE, a.ACCOUNT_CODE, 
    a.T_PRICE, a.U_PRICE, a.INCOME, a.FACTOR, a.CLEARFORM, a.REMARKS,b.CATEGORY_NAME,a.CONTRACT_DATE,a.`CHANGE`,
    a.CONTRACT_NO,a.PROGRESS_MODE,(case a.PROGRESS_MODE when 1 then '按时间' when 2 then '按工作量' else '' end) as PROGRESS_MODE_NAME,b.category_name as categoryName,
    d.unit_name as MANAGE_DEPT_NAME,
    e.employeename as DISTRICT_MANAGER_NAME,
    (case when b.REMARKS is null or b.REMARKS = '' then '0' else b.REMARKS end) as owSumType,
    a.START_METTING,
    a.TEST_RUN,
     (select count(1) from  PM_MEMBER c where a.PRO_NO=c.PRO_NO AND c.work_statue=1)   MEMBER_COUNT
      from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    where a.PRO_NO = #{proNo,jdbcType=VARCHAR}
  </select>
  <select id="findByProCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />,b.category_name as categoryName,
    d.unit_name as MANAGE_DEPT_NAME,
    e.employeename as DISTRICT_MANAGER_NAME,
    (case when b.REMARKS is null or b.REMARKS = '' then '0' else b.REMARKS end) as owSumType
      from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN PM_MEMBER c ON a.PRO_NO=c.PRO_NO AND c.work_statue=1
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    where a.PRO_CODE = #{proCode,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pm_base
    where PRO_NO = #{proNo,jdbcType=VARCHAR}
  </delete>
  
  
  <insert id="insert" parameterType="com.glens.pwCloudOs.pm.baseMgr.pmBase.vo.PmBaseVo" >
    insert into pm_base (COMPANY_CODE, PRO_NO, PRO_CODE,MANAGE_DEPT,DISTRICT_MANAGER,
      PRO_NAME, PROVINCE, CITY, DISTRICT, 
      PRO_YEAR, CATEGORY_CODE, PRO_STATUS, 
      PRO_PHASE, INIT_WORKLOAD, TOTAL_WORKLOAD, 
      UNIT_WORKLOAD, IW_PROPORTION, OW_PROPORTION, 
      S_DATE, E_DATE, PPM, PPW, 
      DEMAND_STAFF, QC_MIN, PRO_MANAGER, 
      EMPLOYEECODE, ACCOUNT_CODE, T_PRICE, 
      U_PRICE, INCOME, FACTOR, CLEARFORM, 
      SYS_CREATE_TIME, 
      SYS_PROCESS_FLAG, REMARKS, 
      <if test="contractDate != null and contractDate != ''">
      CONTRACT_DATE, 
      </if>
      CONTRACT_NO,PROGRESS_MODE,START_METTING, TEST_RUN, CHANGE)
    values (#{companyCode,jdbcType=VARCHAR}, #{proNo,jdbcType=VARCHAR}, #{proCode,jdbcType=VARCHAR}, #{manageDept,jdbcType=VARCHAR}, #{districtManager,jdbcType=VARCHAR}, 
      #{proName,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{proYear,jdbcType=INTEGER}, #{categoryCode,jdbcType=VARCHAR}, #{proStatus,jdbcType=INTEGER}, 
      #{proPhase,jdbcType=INTEGER}, #{initWorkload,jdbcType=INTEGER}, #{totalWorkload,jdbcType=INTEGER}, 
      #{unitWorkload,jdbcType=VARCHAR}, #{iwProportion,jdbcType=REAL}, #{owProportion,jdbcType=REAL}, 
      #{sdate,jdbcType=DATE}, #{edate,jdbcType=DATE}, #{ppm,jdbcType=REAL}, #{ppw,jdbcType=REAL}, 
      #{demandStaff,jdbcType=INTEGER}, #{qcMin,jdbcType=REAL}, #{proManager,jdbcType=VARCHAR}, 
      #{employeecode,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, #{tprice,jdbcType=REAL}, 
      #{uprice,jdbcType=VARCHAR}, #{income,jdbcType=REAL}, #{factor,jdbcType=REAL}, #{clearform,jdbcType=VARCHAR}, 
      now(), '1', #{remarks,jdbcType=VARCHAR}, 
      <if test="contractDate != null and contractDate != ''">
      #{contractDate,jdbcType=DATE}, 
      </if>
      #{contractNo,jdbcType=VARCHAR},#{progressMode,jdbcType=INTEGER},#{startMetting,jdbcType=CHAR}, #{testRun,jdbcType=CHAR},#{change,jdbcType=CHAR})
  </insert>
  
  
  <update id="update" parameterType="com.glens.pwCloudOs.pm.baseMgr.pmBase.vo.PmBaseVo" >
    update pm_base
    <set >
      <if test="companyCode != null" >
        COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        PRO_NAME = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proCode != null" >
        PRO_CODE = #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="manageDept !=null">
      	MANAGE_DEPT = #{manageDept,jdbcType=VARCHAR},
      </if>
      <if test="districtManager != null">
      	DISTRICT_MANAGER = #{districtManager,jdbcType=VARCHAR},
      </if>
      <if test="province != null and province != ''">
      	PROVINCE=#{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        DISTRICT = #{district,jdbcType=VARCHAR},
      </if>
      <if test="proYear != null" >
        PRO_YEAR = #{proYear,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null" >
        CATEGORY_CODE = #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="proPhase != null" >
        PRO_PHASE = #{proPhase,jdbcType=INTEGER},
      </if>
      <if test="proStatus != null and proStatus != ''" >
        PRO_STATUS = #{proStatus,jdbcType=INTEGER},
      </if>
      <if test="initWorkload != null" >
        INIT_WORKLOAD = #{initWorkload,jdbcType=INTEGER},
      </if>
      <if test="totalWorkload != null" >
        TOTAL_WORKLOAD = #{totalWorkload,jdbcType=INTEGER},
      </if>
      <if test="unitWorkload != null" >
        UNIT_WORKLOAD = #{unitWorkload,jdbcType=VARCHAR},
      </if>
      <if test="iwProportion != null" >
        IW_PROPORTION = #{iwProportion,jdbcType=REAL},
      </if>
      <if test="owProportion != null" >
        OW_PROPORTION = #{owProportion,jdbcType=REAL},
      </if>
      <if test="sdate != null" >
        S_DATE = #{sdate},
      </if>
      <if test="edate != null" >
        E_DATE = #{edate},
      </if>
      <if test="ppm != null" >
        PPM = #{ppm,jdbcType=REAL},
      </if>
      <if test="ppw != null" >
        PPW = #{ppw,jdbcType=REAL},
      </if>
      <if test="demandStaff != null" >
        DEMAND_STAFF = #{demandStaff,jdbcType=INTEGER},
      </if>
      <if test="qcMin != null" >
        QC_MIN = #{qcMin,jdbcType=REAL},
      </if>
      <if test="proManager != null" >
        PRO_MANAGER = #{proManager,jdbcType=VARCHAR},
      </if>
      <if test="employeecode != null" >
        EMPLOYEECODE = #{employeecode,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null" >
        ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="tprice != null" >
        T_PRICE = #{tprice,jdbcType=REAL},
      </if>
      <if test="uprice != null" >
        U_PRICE = #{uprice,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        INCOME = #{income,jdbcType=REAL},
      </if>
      <if test="factor != null" >
        FACTOR = #{factor,jdbcType=REAL},
      </if>
      <if test="clearform != null" >
        CLEARFORM = #{clearform,jdbcType=VARCHAR},
      </if>
        SYS_UPDATE_TIME = now(),
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="contractDate != null and contractDate != ''" >
        CONTRACT_DATE = #{contractDate,jdbcType=DATE},
      </if>
      <if test="contractNo != null" >
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="progressMode != null and progressMode != 0">
      	PROGRESS_MODE = #{progressMode,jdbcType=INTEGER},
      </if>
       <if test="startMetting != null" >
        START_METTING = #{startMetting,jdbcType=CHAR},
      </if>
      <if test="testRun != null" >
        TEST_RUN = #{testRun,jdbcType=CHAR},
      </if>
      <if test="change != null" >
        `CHANGE` = #{change,jdbcType=CHAR},
      </if>
    </set>
   where PRO_NO = #{proNo,jdbcType=VARCHAR}
  </update>
  
  <update id="active" parameterType="com.glens.pwCloudOs.pm.baseMgr.pmBase.vo.PmBaseVo">
  	update pm_base set PRO_STATUS = 2 where PRO_NO = #{proNo,jdbcType=VARCHAR}
  </update>
  
  <update id="close" parameterType="com.glens.pwCloudOs.pm.baseMgr.pmBase.vo.PmBaseVo">
  	update pm_base set PRO_STATUS = 3 where PRO_NO = #{proNo,jdbcType=VARCHAR}
  </update>
  
  <insert id="insertProMember" parameterType="java.util.HashMap">
  	insert into PM_MEMBER(COMPANY_CODE,PRO_NO,EMPLOYEECODE,ACCOUNT_CODE,IN_DATE,WORK_STATUE)
  	values(#{companyCode},#{proNo},#{employeeCode},#{accountCode},#{inDate},1)
  </insert>
  
  <insert id="batchAddProMember" parameterType="list">
  	insert into PM_MEMBER(COMPANY_CODE,PRO_NO,EMPLOYEECODE,IN_DATE,WORK_STATUE) values
	<foreach collection="list" item="item" separator="," close="" open="">
  		(#{item.companyCode},#{item.proNo},#{item.employeeCode},#{item.inDate},1)
	</foreach>
  </insert>
  
  <delete id="deleteProMember" parameterType="java.util.HashMap">
  	delete from PM_MEMBER where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and EMPLOYEECODE=#{employeeCode}
  </delete>
  
  <update id="logoffProMember" parameterType="java.util.HashMap">
  	update PM_MEMBER set OUT_DATE=now(),WORK_STATUE=2 
  	where COMPANY_CODE=#{companyCode} and PRO_NO=#{proNo} and EMPLOYEECODE=#{employeeCode}
  </update>
  
  <select id="selectProMember" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select b.unit_code unitCode,u.unit_name unitName,b.employeecode employeeCode,b.employeename employeeName,b.job_no as jobNo,ifnull(b.JOB_CODE,'') jobCode,j.job_name jobName,
		d.pro_no proNo,d.pro_name proName,null inDate,
		null outDate,1 workStatue, 1 isProManager 
	from pm_base d
	join md_employee b on b.employeecode=d.employeecode 
	left join md_employee_job j on j.job_code=b.job_code
	left join md_org_unit u on u.UNIT_CODE=b.UNIT_CODE
	where d.company_code=#{companyCode} and d.pro_no=#{proNo}

	union all
	
  	select b.unit_code unitCode,u.unit_name unitName,b.employeecode employeeCode,b.employeename employeeName,b.job_no as jobNo,ifnull(b.JOB_CODE,'') jobCode,j.job_name jobName,
	a.pro_no proNo,d.pro_name proName,DATE_FORMAT(a.IN_DATE,'%Y-%m-%d') inDate,
	DATE_FORMAT(a.OUT_DATE,'%Y-%m-%d') outDate,a.WORK_STATUE workStatue, 0 isProManager
	from pm_member a
	join md_employee b on a.employeecode=b.employeecode
	join pm_base d on a.pro_no=d.pro_no
	left join md_employee_job j on j.job_code=b.job_code
	left join md_org_unit u on u.UNIT_CODE=b.UNIT_CODE
	where a.company_code=#{companyCode} and a.pro_no=#{proNo}
	<if test="workStatue!=null and workStatue!=''">
	and a.work_statue=#{workStatue}
	</if>
  </select>
  
  <select id="getFileType" parameterType="java.util.HashMap" resultType="map">
  		select DOC_TYPELIB_CODE code,DOC_TYPELIB_NAME name from  PM_DOCUMENT_TYPELIB 
  	    where 1=1
  	    <if test="docClass!=null and docClass!=''">
  	  	  and DOC_CLASS=#{docClass}
  	    </if>
  	    <if test="type!=null and type!=''">
  	 	   and type=#{type}
  	    </if>
  </select>
  
  <select id="getemplist" parameterType="map" resultType="map">
  		 select EMPLOYEECODE employeeCode,ACCOUNT_NAME accountName,ACCOUNT_CODE accountCode from pf_account where ROLECODE=003
  </select>
  
  <select id="getaccount" parameterType="map" resultType="map">
  		 select EMPLOYEECODE employeeCode,ACCOUNT_NAME accountName,ACCOUNT_CODE accountCode from pf_account 
		where ACCOUNT_NAME=#{accountName}
  </select>
  
  <select id="queryFinishProgress" parameterType="map" resultType="map">
	SELECT
		c.PRO_NO prono,
		c.TOTAL_WORKLOAD A1,
		CONCAT(
		round(C.COMPLETION_STAGE * 100, 2),
		'%'
		) A2,
		0 A3,
		d.TREND_NAME A4
	FROM
		pm_week_workload c
	LEFT JOIN pm_week_progress_trend d ON c.TREND = d.TREND_CODE
	WHERE
		c.ROW_ID IN (
			SELECT
				max(b.ROW_ID) rowid
			FROM
				pm_week_workload b
			WHERE
				b.SYS_PROCESS_FLAG = '1'
			GROUP BY
				b.PRO_NO
		)
	AND c.SYS_PROCESS_FLAG = '1'  
	and c.PRO_NO in (
	<foreach collection="list" item="item" separator=",">
		#{item}
		</foreach>
	)
	
  </select>
 
 
 <select id="queryFinancial" parameterType="map" resultType="map">
 	<if test="type==1">
	 SELECT
		b.PRO_NO prono,
		round(sum(IFNULL(AMOUNT, 0)), 2) C1
	FROM
		fm_contract_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
		and b.PRO_NO in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)		
	GROUP BY
		b.PRO_NO		
 	</if>
 	<if test="type==2">
		SELECT
			b.PRO_NO prono,
			round(sum(IFNULL(b.AMOUNT2, 0)), 2) C2
		FROM
			fm_invoice_base b
		WHERE
			b.SYS_PROCESS_FLAG = '1'
			and b.PRO_NO in (
						<foreach collection="list" item="item" separator=",">
							#{item}
							</foreach>
						)					
		GROUP BY
			b.PRO_NO 		
 	</if>
 	<if test="type==3">
	SELECT
		b.PRO_NO prono,
		round(sum(IFNULL(b.AMOUNT, 0)), 2) C3
	FROM
		fm_rpayment_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	and b.PRO_NO in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)				
	GROUP BY
		b.PRO_NO
 		
 	</if>
 </select>
 
 <select id="queryDocument" parameterType="map" resultType="map">
	SELECT
		g.PRO_NO prono,
		IFNULL(e.cnt, 0) D1,
		IFNULL(f.cnt, 0) D2
	FROM
		pm_base g
	LEFT JOIN (
		SELECT
			c.PRO_NO,
			count(1) cnt
		FROM
			pm_document_typelib b
		LEFT JOIN pm_document_lib c ON b.DOC_TYPELIB_CODE = c.DOC_TYPELIB_CODE
		WHERE
			b.SYS_PROCESS_FLAG = '1'
		AND c.SYS_PROCESS_FLAG = '1'
		AND b.TYPE = '1'
		GROUP BY c.PRO_NO
	) e ON g.PRO_NO = e.PRO_NO
	LEFT JOIN (
		SELECT
			c.PRO_NO,
			count(1) cnt
		FROM
			pm_document_typelib b
		LEFT JOIN pm_document_lib c ON b.DOC_TYPELIB_CODE = c.DOC_TYPELIB_CODE
		WHERE
			b.SYS_PROCESS_FLAG = '1'
		AND c.SYS_PROCESS_FLAG = '1'
		AND b.TYPE = '2'
		GROUP BY c.PRO_NO
	) f ON g.PRO_NO = f.PRO_NO
 	where g.PRO_NO in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)		
 </select>
 
 
 <select id="queryExpensesClaim" parameterType="map" resultType="map">
	SELECT
		b.PRO_NO prono,
		sum(b.TOTAL_MONEY) E4
	FROM
		fm_money_return b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_NO IS NOT NULL
	and  b.PRO_NO in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)		
	GROUP BY
		b.PRO_NO 
 </select>
  
  <select id="queryExpensesDorm" parameterType="map" resultType="map">
	SELECT
		c.PRO_NO prono,
		round(
			sum(
				b.DAYRENT * datediff(NOW(), c.RENT_DATE)
			),
			2
		) E3
	FROM
		gm_bm_dorm b
	LEFT JOIN gm_bm_bedrent c ON b.DORM_CODE = c.DORM_CODE
	WHERE
		b.DORM_STATUS = 2
	AND c.RENT_STATUS = 1
	and  c.PRO_NO in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)		
	GROUP BY
		c.PRO_NO
  </select>
  
  <select id="queryExpensesAsset" parameterType="map" resultType="map">
	SELECT
	b.LOAN_PRO_NO prono,
	round(
		sum(
			ifnull(
				d.DAILY_RENT * datediff(NOW(), b.RENT_DATE),
				0
			)
		),
		2
	) E2
	FROM
		gm_asset_rent b
	LEFT JOIN gm_asset_base c ON b.ASSET_CODE = c.ASSET_CODE
	LEFT JOIN gm_asset_type d ON c.ASSET_TYPE_CODE = d.ASSET_TYPE_CODE
	WHERE
		b.RENT_STATUS = 1
		and b.FLOW_STATUS=2
		and  b.LOAN_PRO_NO  in (
			<foreach collection="list" item="item" separator=",">
				#{item}
				</foreach>
			)		
	GROUP BY
		b.LOAN_PRO_NO  
  </select>
  
  <!--  查询项目成员 -->
  <select id="queryProMember" parameterType="map" resultType="map">
	SELECT
	b.PRO_NO,
	g.PRO_NAME,
	c.EMPLOYEENAME,
	c.NICKNAME,
	c.JOB_NO,
	c.ADDR,
	c.MOBILEPHONE1,
	d.UNIT_NAME,
	e.JOB_NAME,
	f.JOB_PROPERTY_NAME
FROM
	pm_member b
INNER JOIN md_employee c ON b.EMPLOYEECODE = c.EMPLOYEECODE
INNER JOIN md_org_unit d ON c.UNIT_CODE = d.UNIT_CODE
LEFT JOIN md_employee_job e ON c.JOB_CODE = e.JOB_CODE
LEFT JOIN md_employee_job_property f ON c.JOB_PROPERTY_CODE = f.JOB_PROPERTY_CODE
LEFT JOIN pm_base g ON b.PRO_NO = g.PRO_NO
WHERE
	b.WORK_STATUE = '1'
	AND b.PRO_NO = #{proNo}
  </select>
  
  <!-- 查询项目合同 -->
  <select id="queryContract" parameterType="map" resultType="map">
	SELECT
	b.PRO_NO,
	b.PRO_NAME,
		b.DISTRICT,
		b.CONTRACT_NO,
		b.CONTRACT_NAME,
		DATE_FORMAT(b.CONTRACT_DATE,'%Y-%m-%d') CONTRACT_DATE,
		b.FP_UNIT,
		FORMAT(b.AMOUNT,2) AMOUNT,
		FORMAT(b.INVOICE_AMOUNT,2) INVOICE_AMOUNT
	FROM
		fm_contract_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_NO = #{proNo}
 </select>
 
 <!-- 查询项目开票 -->
 <select id="queryInvoice" parameterType="map" resultType="map">
	SELECT
	b.PRO_NO,
	b.PRO_NAME,
	b.TAX_RATE,
	b.INVOICE_NO,
	DATE_FORMAT(b.INVOICE_DATE,'%Y-%m-%d') INVOICE_DATE,
	b.CG_UNIT,
	b.INVOICE_CONTENT,
	FORMAT(b.AMOUNT1,2) AMOUNT1,
	FORMAT(b.TAX_AMOUNT,2) TAX_AMOUNT,
	FORMAT(b.AMOUNT2,2) AMOUNT2,
	c.INVOICE_CLASS_NAME
	FROM
		fm_invoice_base b
	INNER JOIN fm_invoice_class c ON b.INVOICE_CLASS_CODE = c.INVOICE_CLASS_CODE
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_NO = #{proNo}
 </select>
  
 <!-- 查询项目回款 -->
 <select id="queryRepayment" parameterType="map" resultType="map">
	SELECT
	b.PRO_NO,
	b.PRO_NAME,
	b.CONTRACT_NO,
	DATE_FORMAT(b.RPAYMENT_DATE,'%Y-%m-%d') RPAYMENT_DATE,
	b.CG_UNIT,
	FORMAT(b.AMOUNT,2) AMOUNT,
	b.INVOICE_NOS
	FROM
		fm_rpayment_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_NO =#{proNo}
 </select>
 
 <!-- 查询项目文档 -->
 <select id="queryProDocument" parameterType="map" resultType="map">
		SELECT
		c.PRO_NO,
		d.PRO_NAME,
		b.DOC_TYPELIB_NAME,
		c.TITLE,
		c.FILE_NAME,
		c.SUFFIX_NAME,
		c.RE_VISITID,
		c.DL_VISITID,
		c.FILE_SIZE,
		c.RE_COUNT,
		c.DL_COUNT,
		DATE_FORMAT(c.UPLOAD_DATE, '%Y-%m-%d') UPLOAD_DATE
	FROM
		pm_document_typelib b
	INNER JOIN pm_document_lib c ON b.DOC_TYPELIB_CODE = c.DOC_TYPELIB_CODE
	LEFT JOIN pm_base d ON c.PRO_NO = d.PRO_NO
	WHERE
		b.TYPE = #{type}
	AND c.PRO_NO = #{proNo}
	<if test="title!=null and title!=''">
		and c.TITLE like concat('%',#{title},'%')
	</if>
	<if test="docTypelibCode!=null and docTypelibCode!=''">
		and b.DOC_TYPELIB_CODE=#{docTypelibCode}
	</if>
 </select> 
 
 <!-- 查询项目设备 -->
 <select id="queryProAsset" parameterType="map" resultType="map">
	SELECT
	   b.LOAN_PRO_NO,
	   b.LOAN_PRO_NAME,
		d.ASSET_TYPE_NAME,
		c.ASSET_NAME,
		DATE_FORMAT(b.RENT_DATE,'%Y-%m-%d') RENT_DATE,
		FORMAT(d.DAILY_RENT,2) DAILY_RENT,
		datediff(NOW(), b.RENT_DATE) DAYS,
		FORMAT(ifnull(
			d.DAILY_RENT * datediff(NOW(), b.RENT_DATE),
			0
		),2) FEE
	FROM
		gm_asset_rent b
	LEFT JOIN gm_asset_base c ON b.ASSET_CODE = c.ASSET_CODE
	LEFT JOIN gm_asset_type d ON c.ASSET_TYPE_CODE = d.ASSET_TYPE_CODE
	WHERE
		b.RENT_STATUS = 1
	AND b.FLOW_STATUS = 2
	AND b.LOAN_PRO_NO = #{proNo}
 </select>

 <!--查询项目宿舍  -->
 <select id="queryProDorm" parameterType="map" resultType="map">
	SELECT
	c.PRO_NO,
	d.PRO_NAME,
	b.DORM_NAME,
	b.PROVINCE,
	b.CITY,
	b.DISTRICT,
	FORMAT(b.DAYRENT, 2) DAYRENT,
	c.EMPLOYEENAME,
	DATE_FORMAT(c.RENT_DATE, '%Y-%m-%d') RENT_DATE,
	datediff(NOW(), c.RENT_DATE) DAYS,
	FORMAT(
		round(
			ifnull(
				b.DAYRENT * datediff(NOW(), c.RENT_DATE),
				0
			),
			2
		),
		2
	) FEE
FROM
	gm_bm_dorm b
LEFT JOIN gm_bm_bedrent c ON b.DORM_CODE = c.DORM_CODE
LEFT JOIN pm_base d ON c.PRO_NO = d.PRO_NO
WHERE
	b.DORM_STATUS = 2
AND c.RENT_STATUS = 1
	AND c.PRO_NO = #{proNo}
 </select>
 
 <!-- 查询项目报销  -->
 <select id="queryProReturn" parameterType="map" resultType="map">
	SELECT
	b.PRO_NO,
	d.PRO_NAME,
	b.TITLE,
	DATE_FORMAT(b.APPLY_DATE, '%Y-%m-%d') APPLY_DATE,
	b.APPLY_CONTENT,
	b.JOB_NO,
	b.EMPLOYEE_NAME,
	FORMAT(b.TOTAL_MONEY, 2) TOTAL_MONEY,
	b.FEE_TYPE,
	c.FEE_NAME
FROM
	fm_money_return b
INNER JOIN fm_fee_type c ON b.FEE_TYPE = c.FEE_CODE
LEFT JOIN pm_base d ON b.PRO_NO = d.PRO_NO
WHERE
	b.SYS_PROCESS_FLAG = '1'
	and b.PRO_NO=#{proNo}
 </select>
 
 <select id="queryPmBaseForOAList" resultType="map">
	SELECT
		b.PRO_NO proNo,
		b.PRO_CODE proCode,
		b.PRO_NAME proName,
		b.PROVINCE province,
		b.CITY city,
		b.DISTRICT district,
		b.PRO_STATUS proStatus,
		b.EMPLOYEECODE employeeCode,
		b.PRO_MANAGER proManager,
		b.DISTRICT_MANAGER districtManager,
		b.MANAGE_DEPT manageDept
	FROM
		pm_base b
	WHERE
		b.SYS_PROCESS_FLAG = '1'
	AND b.PRO_STATUS = '2' 
 </select>
 
  <select id="getDialogProsCount" parameterType="map" resultType="int">
 	 select count(*) from(
  		select PROVINCE,CITY,DISTRICT,PRO_NO proNo,PRO_NAME proName,CATEGORY_CODE categoryCode,PRO_CODE proCode,PRO_MANAGER proManager,PRO_YEAR proYear,S_DATE sdate,E_DATE edate from PM_BASE 
		where COMPANY_CODE=#{companyCode} and SYS_PROCESS_FLAG='1' 
		<if test="searchName!=null and searchName!=''">
			and (PRO_CODE LIKE "%"#{searchName}"%" OR PRO_NAME like "%"#{searchName}"%" or PRO_YEAR like "%"#{searchName}"%" or PROVINCE like "%"#{searchName}"%" or CITY like "%"#{searchName}"%" or DISTRICT like "%"#{searchName}"%" or PRO_MANAGER like "%"#{searchName}"%")
		</if>
		<if test="categoryCode!=null and categoryCode!=''">
			and CATEGORY_CODE=#{categoryCode}
		</if>
 	 ) tpa
  </select>
  
 	 <select id="getDialogPros" parameterType="map" resultType="map">
		select PROVINCE,CITY,DISTRICT,PRO_NO proNo,PRO_NAME proName,CATEGORY_CODE categoryCode,PRO_CODE proCode,PRO_MANAGER proManager,PRO_YEAR proYear,S_DATE sdate,E_DATE edate from PM_BASE 
		where COMPANY_CODE=#{companyCode} and SYS_PROCESS_FLAG='1' 
		<if test="searchName!=null and searchName !=''">
			and (PRO_CODE LIKE "%"#{searchName}"%" OR PRO_NAME like "%"#{searchName}"%" or PRO_YEAR like "%"#{searchName}"%" or PROVINCE like "%"#{searchName}"%" or CITY like "%"#{searchName}"%" or DISTRICT like "%"#{searchName}"%" or PRO_MANAGER like "%"#{searchName}"%")
		</if>
		<if test="categoryCode!=null and categoryCode!=''">
			and CATEGORY_CODE=#{categoryCode}
		</if>
		limit #{firstResult},#{maxResult}
    	
	</select>
	
	<select id="queryWaitingListCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*)
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    join pm_pro_apply_flow  g  on g.PRO_NO=a.PRO_NO and g.STATUS='1'
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_NO like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
     <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
  </select>
  
  <select id="queryWaitingListForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />,b.category_name as categoryName,
    d.unit_name as MANAGE_DEPT_NAME,
    e.employeename as DISTRICT_MANAGER_NAME,
    ifnull(f.FORECAST_WORKLOAD,0.0) FORECAST_WORKLOAD,
    g.SYS_CREATE_TIME,g.APPLY_CONTENT,g.rowid APPLY_ID,
    (select count(1) from PM_MEMBER  f  where f.PRO_NO=a.PRO_NO and f.work_statue=1) MEMBER_COUNT
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    left join PM_ANNUAL_OUTPUT f on a.PRO_NO=f.PRO_NO and f.YEARS=YEAR(NOW())
    join pm_pro_apply_flow  g  on g.PRO_NO=a.PRO_NO and g.STATUS='1'
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_CODE like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
    <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
    ORDER BY
	a.SYS_UPDATE_TIME DESC
    limit #{firstResult},#{maxResult}
  </select>
  
  
  	<select id="queryProPreWarningListCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*)
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_NO like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
     <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
  </select>
  
  <select id="queryProPreWarningListForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select 
   a.COMPANY_CODE,
	a.PRO_NO,
	a.PRO_CODE,
	a.MANAGE_DEPT,
	a.DISTRICT_MANAGER,
	a.PRO_NAME,
	a.PROVINCE,
	a.CITY,
	a.DISTRICT,
	a.PRO_YEAR,
	a.CATEGORY_CODE,
	a.PRO_STATUS,
	a.PRO_PHASE,
	a.INIT_WORKLOAD,
	a.TOTAL_WORKLOAD,
	a.UNIT_WORKLOAD,
	a.IW_PROPORTION,
	a.OW_PROPORTION,
	DATE_FORMAT(a.S_DATE, '%Y-%m-%d') S_DATE,
	DATE_FORMAT(a.E_DATE, '%Y-%m-%d') E_DATE,
	a.PPM,
	a.PPW,
	a.DEMAND_STAFF,
	a.QC_MIN,
	a.PRO_MANAGER,
	a.EMPLOYEECODE,
	a.ACCOUNT_CODE,
	a.T_PRICE,
	a.U_PRICE,
	a.INCOME,
	a.FACTOR,
	a.CLEARFORM,
	a.REMARKS,
	b.CATEGORY_NAME,
	a.CONTRACT_DATE,
	a.`CHANGE`,
	a.CONTRACT_NO,
	a.PROGRESS_MODE,
	(
		CASE a.PROGRESS_MODE
		WHEN 1 THEN
			'按时间'
		WHEN 2 THEN
			'按工作量'
		ELSE
			''
		END
	) AS PROGRESS_MODE_NAME,
	b.category_name AS categoryName,
	d.unit_name AS MANAGE_DEPT_NAME,
	e.employeename AS DISTRICT_MANAGER_NAME,
	ifnull(f.FORECAST_WORKLOAD, 0.0) FORECAST_WORKLOAD,
	(
		SELECT
			count(1)
		FROM
			PM_MEMBER f
		WHERE
			f.PRO_NO = a.PRO_NO
		AND f.work_statue = 1
	) MEMBER_COUNT,
	a.START_METTING,
	a.TEST_RUN,
	(
		SELECT
			COUNT(1)
		FROM
			pm_document_lib k
		WHERE
			k.PRO_NO = a.PRO_NO
		AND k.DOC_TYPELIB_CODE = '29'
	) RANGE_DETAIL_BOOK,
	(
		SELECT
			COUNT(1)
		FROM
			pm_document_lib k
		WHERE
			k.PRO_NO = a.PRO_NO
		AND k.DOC_TYPELIB_CODE = '30'
	) SAMPLE_CONFIRM_FILE,
	(
		SELECT
			COUNT(1)
		FROM
			pm_document_lib k
		WHERE
			k.PRO_NO = a.PRO_NO
		AND k.DOC_TYPELIB_CODE = '21'
	) PLAN_BOOK,
	case when h.PRO_NO is not null then 1 else 0 end  ESTIMATE,
	0 OVER_SPEND
    from pm_base a
    join PM_CATEGORY b on a.CATEGORY_CODE=b.CATEGORY_CODE
    LEFT JOIN md_org_unit d ON a.MANAGE_DEPT = d.unit_code
    LEFT JOIN md_employee e ON a.DISTRICT_MANAGER = e.employeecode
    left join PM_ANNUAL_OUTPUT f on a.PRO_NO=f.PRO_NO and f.YEARS=YEAR(NOW())
    LEFT JOIN pm_pb_budgetestimate  h  on h.PRO_NO=a.PRO_NO and h.SYS_PROCESS_FLAG='1'
    where a.SYS_PROCESS_FLAG='1'
    and a.COMPANY_CODE = #{companyCode}
    <if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="categoryCode != null and categoryCode != ''">
    	and a.CATEGORY_CODE=#{categoryCode}
    </if>
    <if test="proNo != null and proNo != ''">
    	and a.PRO_NO = #{proNo}
    </if>
    <if test="proName != null and proName != ''">
    	and (a.PRO_NAME like "%"#{proName}"%"
    		or a.PRO_CODE like "%"#{proName}"%"
    		or a.PROVINCE like "%"#{proName}"%"
    		or a.CITY like "%"#{proName}"%"
    		or a.PRO_MANAGER like "%"#{proName}"%")
    </if>
    <if test="proStatus != null and proStatus != ''">
    	and a.PRO_STATUS=#{proStatus}
    </if>
    <if test="proPhase != null and proPhase != ''">
    	and a.PRO_PHASE=#{proPhase}
    </if>
    <if test="deptCode != null and deptCode != ''">
    	and a.MANAGE_DEPT=#{deptCode}
    </if>
    <if test="employeeCode!=null and employeeCode!=''">
    	and a.EMPLOYEECODE=#{employeeCode}
    </if>
    ORDER BY
	a.SYS_UPDATE_TIME DESC
    limit #{firstResult},#{maxResult}
  </select>
  
</mapper>