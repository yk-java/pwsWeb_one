<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.dao.SalaryFramworkVoMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.vo.SalaryFramworkVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="COMPANY_CODE" property="companyCode" />
    <result column="UNIT_CODE" property="unitCode" />
    <result column="UNIT_NAME" property="unitName"/>
    <result column="FRAMEWORK_CODE" property="frameworkCode" />
    <result column="TITLE" property="title" />
    <result column="VALID_START_TIME" property="validStartTime" />
    <result column="VALID_END_TIME" property="validEndTime" />
    <result column="STATUS" property="status" />
    <result column="SALARY_GRADE" property="salaryGrade" />
    <result column="SALARY_LEVEL" property="salaryLevel" />
    <result column="SALARY_GRADE_NAME_PREFIX" property="salaryGradeNamePrefix" />
    <result column="SALARY_GRADE_START" property="salaryGradeStart" />
    <result column="REMARKS" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    a.COMPANY_CODE, a.UNIT_CODE, a.FRAMEWORK_CODE, a.TITLE, DATE_FORMAT(a.VALID_START_TIME,'%Y-%m-%d') VALID_START_TIME, 
    DATE_FORMAT(a.VALID_END_TIME,'%Y-%m-%d') VALID_END_TIME, a.STATUS, a.SALARY_GRADE, a.SALARY_LEVEL, a.SALARY_GRADE_NAME_PREFIX, 
    a.SALARY_GRADE_START, ifnull(a.REMARKS,'') REMARKS, b.UNIT_NAME
  </sql>
  
  <select id="queryForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*) from hrm_salary_framework a
  	join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
  	where a.COMPANY_CODE=#{companyCode} and a.SYS_PROCESS_FLAG='1'
  	<if test="unitCode != null and unitCode != ''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="validStartTime != null and validStartTime != ''">
  	and a.VALID_START_TIME &gt;= #{validStartTime}
  	</if>
  	<if test="validEndTime != null and validEndTime != ''">
  	and a.VALID_END_TIME &lt;= #{validEndTime}
  	</if>
  	<if test="status != null and status != 0">
  	and a.STATUS=#{status}
  	</if>
  </select>
  
  <select id="queryForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from hrm_salary_framework a
  	join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
  	where a.COMPANY_CODE=#{companyCode} and a.SYS_PROCESS_FLAG='1'
  	<if test="unitCode != null and unitCode != ''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="validStartTime != null and validStartTime != ''">
  	and a.VALID_START_TIME &gt;= #{validStartTime}
  	</if>
  	<if test="validEndTime != null and validEndTime != ''">
  	and a.VALID_END_TIME &lt;= #{validEndTime}
  	</if>
  	<if test="status != null and status != 0">
  	and a.STATUS=#{status}
  	</if>
  	limit #{firstResult},#{maxResult}
  </select>
  
  <select id="queryForList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from hrm_salary_framework a
  	join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
  	where a.COMPANY_CODE=#{companyCode} and a.SYS_PROCESS_FLAG='1'
  	<if test="unitCode != null and unitCode != ''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="validStartTime != null and validStartTime != ''">
  	and a.VALID_START_TIME &gt;= #{validStartTime}
  	</if>
  	<if test="validEndTime != null and validEndTime != ''">
  	and a.VALID_END_TIME &lt;= #{validEndTime}
  	</if>
  	<if test="status != null and status != 0">
  	and a.STATUS=#{status}
  	</if>
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.vo.SalaryFramworkVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from hrm_salary_framework a
    join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
    where a.FRAMEWORK_CODE = #{frameworkCode}
  </select>
  <delete id="delete" parameterType="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.vo.SalaryFramworkVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hrm_salary_framework set SYS_PROCESS_FLAG='0',SYS_DELETE_TIME=now()
    where FRAMEWORK_CODE = #{frameworkCode}
  </delete>
  <insert id="insert" parameterType="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.vo.SalaryFramworkVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into hrm_salary_framework (COMPANY_CODE, UNIT_CODE, 
      FRAMEWORK_CODE, TITLE, VALID_START_TIME, 
      VALID_END_TIME, STATUS, SALARY_GRADE, 
      SALARY_LEVEL, SALARY_GRADE_NAME_PREFIX, SALARY_GRADE_START, 
      SYS_CREATE_TIME, SYS_PROCESS_FLAG, REMARKS)
    values (#{companyCode}, #{unitCode}, 
      #{frameworkCode}, #{title}, #{validStartTime}, 
      #{validEndTime}, 1, #{salaryGrade}, 
      #{salaryLevel}, #{salaryGradeNamePrefix}, #{salaryGradeStart}, 
      now(), '1', #{remarks})
  </insert>
  
  <update id="update" parameterType="com.glens.pwCloudOs.hrm.salMgr.salaryFramwork.vo.SalaryFramworkVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update hrm_salary_framework
    <set >
      <if test="title != null and title != ''" >
        TITLE = #{title},
      </if>
      <if test="validStartTime != null and validStartTime != ''" >
        VALID_START_TIME = #{validStartTime},
      </if>
      <if test="validEndTime != null and validEndTime != ''" >
        VALID_END_TIME = #{validEndTime},
      </if>
      <if test="salaryGrade != null" >
        SALARY_GRADE = #{salaryGrade},
      </if>
      <if test="salaryLevel != null" >
        SALARY_LEVEL = #{salaryLevel},
      </if>
      <if test="salaryGradeNamePrefix != null" >
        SALARY_GRADE_NAME_PREFIX = #{salaryGradeNamePrefix},
      </if>
      <if test="salaryGradeStart != null" >
        SALARY_GRADE_START = #{salaryGradeStart},
      </if>
      <if test="remarks != null and remarks != ''" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      SYS_UPDATE_TIME=now()
    </set>
    where FRAMEWORK_CODE = #{frameworkCode} and COMPANY_CODE=#{companyCode}
  </update>
  
  <select id="selectFrameworkSetting" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT SALARY_GRADE salaryGrade,SALARY_LEVEL salaryLevel,STANDARD_SALARY standardSalary
	FROM HRM_STANDARD_SALARY_SETTING 
	WHERE company_code=#{companyCode} AND unit_code=#{unitCode} AND framework_code=#{frameworkCode}
	ORDER BY SALARY_GRADE,SALARY_LEVEL
  </select>
  
  <select id="selectSalaryFrameworkDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	select 
    a.COMPANY_CODE companyCode, a.UNIT_CODE unitCode, a.FRAMEWORK_CODE frameworkCode, a.TITLE title, 
    DATE_FORMAT(a.VALID_START_TIME,'%Y-%m-%d') validStartTime, 
    DATE_FORMAT(a.VALID_END_TIME,'%Y-%m-%d') validEndTime, a.STATUS status, a.SALARY_GRADE salaryGrade, 
    a.SALARY_LEVEL salaryLevel, a.SALARY_GRADE_NAME_PREFIX salaryGradeNamePrefix, 
    a.SALARY_GRADE_START salaryGradeStart, ifnull(a.REMARKS,'') remarks, b.UNIT_NAME unitName
    from hrm_salary_framework a
    join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
    where a.FRAMEWORK_CODE = #{frameworkCode} and a.COMPANY_CODE=#{companyCode}
  </select>
  
  <insert id="insertFrameworkSetting" parameterType="java.util.List">
  	insert into HRM_STANDARD_SALARY_SETTING(COMPANY_CODE, UNIT_CODE, FRAMEWORK_CODE, SALARY_GRADE, 
  	SALARY_LEVEL, STANDARD_SALARY, SYS_CREATE_TIME, SYS_PROCESS_FLAG) VALUES
  	<foreach collection="list" index="i" item="p" separator=",">
  	(#{p.companyCode}, #{p.unitCode}, #{p.frameworkCode}, #{p.salaryGrade}, #{p.salaryLevel}, 
  	#{p.standardSalary}, now(), '1')
  	</foreach>
  </insert>
  
  <delete id="deleteFrameworkSetting" parameterType="java.util.HashMap">
  	delete from HRM_STANDARD_SALARY_SETTING where COMPANY_CODE=#{companyCode} and FRAMEWORK_CODE=#{frameworkCode}
  </delete>
  
  <select id="selectEmployeeByUnit" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	select DISTINCT a.UNIT_CODE unitCode,a.EMPLOYEECODE employeeCode,a.EMPLOYEENAME employeeName,
  	a.JOB_NO jobNo,a.SALARY_GRADE salaryGrade,a.SALARY_LEVEL salaryLevel,IFNULL(a.IS_YEARLY_SALARY,0) isYearlySalary,
  	IFNULL(a.SALARY,0) realSalary,a.JOB_CODE jobCode,IFNULL(a.RECRUIT_TYPE,1) recruitType
  	from MD_EMPLOYEE a
  	left join PM_MEMBER b on a.EMPLOYEECODE=b.EMPLOYEECODE and b.WORK_STATUE=1
  	
  	where a.SYS_PROCESS_FLAG='1' and a.UNIT_CODE=#{unitCode}
  	and a.WORK_STATUS=1
  	<if test="proNo != null and proNo != ''">
  	and b.PRO_NO=#{proNo}
  	</if>
  	<if test="jobCode!=null and jobCode!='-1'">
  		 and a.JOB_CODE=#{jobCode} 
  	</if>
  	<if test="jobCode=='-1'">
  		 and a.JOB_CODE is null
  	</if>
  	
  	<if test="employeeName != null and employeeName != ''">
  	and a.EMPLOYEENAME LIKE concat('%',#{employeeName},'%')
  	</if>
  	<if test="salaryGradeConfigStatus != null and salaryGradeConfigStatus == 1">
  	and (a.SALARY_GRADE is null and a.SALARY_LEVEL is null)
  	</if>
  	<if test="salaryGradeConfigStatus != null and salaryGradeConfigStatus == 2">
  	and a.SALARY_GRADE is not null and a.SALARY_LEVEL is not null
  	</if>
  </select>
  
  <select id="getJobNums" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  		select count(*) jobNum,IFNULL(c.JOB_NAME,'其他') jobName,ifnull(c.JOB_CODE,'-1') jobCode from (select DISTINCT a.UNIT_CODE unitCode,a.EMPLOYEECODE employeeCode,a.EMPLOYEENAME employeeName,
		  	a.JOB_NO jobNo,a.SALARY_GRADE salaryGrade,a.SALARY_LEVEL salaryLevel,j.JOB_NAME,a.JOB_CODE from MD_EMPLOYEE a 
		left join md_employee_job j on j.job_code=a.job_code
		left join PM_MEMBER b on a.EMPLOYEECODE=b.EMPLOYEECODE and b.WORK_STATUE=1 
		where a.UNIT_CODE=#{unitCode} and a.SYS_PROCESS_FLAG='1' and a.WORK_STATUS=1
		
		<if test="employeeName != null and employeeName != ''">
	  		and a.EMPLOYEENAME LIKE concat('%',#{employeeName},'%')
	  	</if>
		
		<if test="proNo != null and proNo != ''">
	  		and b.PRO_NO=#{proNo}
	  	</if>
	  	
	  	<if test="salaryGradeConfigStatus != null and salaryGradeConfigStatus == 1">
	  	and (a.SALARY_GRADE is null and a.SALARY_LEVEL is null)
	  	</if>
	  	<if test="salaryGradeConfigStatus != null and salaryGradeConfigStatus == 2">
	  	and a.SALARY_GRADE is not null and a.SALARY_LEVEL is not null
	  	</if>
		
		) c
		
		GROUP BY c.JOB_CODE
  </select>
  
  <select id="selectEnableSalaryFramework" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	select 
    a.COMPANY_CODE companyCode, a.UNIT_CODE unitCode, a.FRAMEWORK_CODE frameworkCode, a.TITLE title, 
    DATE_FORMAT(a.VALID_START_TIME,'%Y-%m-%d') validStartTime, 
    DATE_FORMAT(a.VALID_END_TIME,'%Y-%m-%d') validEndTime, a.STATUS status, a.SALARY_GRADE salaryGrade, 
    a.SALARY_LEVEL salaryLevel, a.SALARY_GRADE_NAME_PREFIX salaryGradeNamePrefix, 
    a.SALARY_GRADE_START salaryGradeStart, ifnull(a.REMARKS,'') remarks, b.UNIT_NAME unitName
    from hrm_salary_framework a
    join md_org_unit b on a.COMPANY_CODE=b.COMPANY_CODE and a.UNIT_CODE=b.UNIT_CODE
    where a.UNIT_CODE = #{unitCode} and a.COMPANY_CODE=#{companyCode} and a.STATUS=2
  </select>
  
  
  <select id="getStandSalary" parameterType="map" resultType="map">
  	  select STANDARD_SALARY,ROW_ID from  HRM_STANDARD_SALARY_SETTING where FRAMEWORK_CODE=#{frameworkCode}

	 and UNIT_CODE=#{unitCode} AND SALARY_GRADE=#{salaryGrade} and SALARY_LEVEL=#{salaryLevel}
  </select>
  
  
  <update id="updateEmployeeSalaryGrade" parameterType="java.util.HashMap">
  	update MD_EMPLOYEE set SALARY_GRADE=#{salaryGrade},SALARY_LEVEL=#{salaryLevel},IS_YEARLY_SALARY=#{isYearlySalary},SALARY=#{realSalary},GRADE_SALARY=#{gradeSalary}
  	where FIND_IN_SET(EMPLOYEECODE, #{employeeCode})
  </update>
  
  <update id="resetEmployeeSalaryGrade" parameterType="java.util.HashMap">
  	update MD_EMPLOYEE set SALARY_GRADE=null,SALARY_LEVEL=null 
  	where EMPLOYEECODE=#{employeeCode}
  </update>
  
  <select id="selectEmployeeSalaryForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*) from MD_EMPLOYEE a
	JOIN MD_ORG_UNIT b ON a.UNIT_CODE=b.UNIT_CODE
	WHERE a.WORK_STATUS=1 AND a.SYS_PROCESS_FLAG='1' AND b.sys_process_flag='1' and b.COMPANY_CODE=#{companyCode}
	<if test="unitCode!=null and unitCode!=''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="employeeName != null and employeeName != ''">
  	and a.EMPLOYEENAME LIKE concat('%',#{employeeName},'%')
  	</if>
  </select>
  
  <select id="selectEmployeeSalaryForPage" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT DISTINCT IFNULL(a.IS_YEARLY_SALARY,0) isYearlySalary,IFNULL(a.SALARY,0) realSalary,IFNULL(a.GRADE_SALARY,0) gradeSalary,a.UNIT_CODE unitCode,a.EMPLOYEECODE employeeCode,a.RECORDNO recordNo,a.EMPLOYEENAME employeeName,a.JOB_NO jobNo,a.JOB_CODE jobCode,a.JOB_PROPERTY_CODE jobPropertyCode,
	a.JOB_CLASS1 jobClass1,a.SEX sex,a.IDCARD idCard,a.DEGREE degree,IFNULL(DATE_FORMAT(a.OFFICE_DATE,'%Y-%m-%d'),'') officeDate,IFNULL(DATE_FORMAT(a.WORK_DATE,'%Y-%m-%d'),'') workDate,
	a.CONTRACT_PROPERTY_CODE contractPropertyCode,IFNULL(a.SALARY_GRADE,0) salaryGrade,IFNULL(a.SALARY_LEVEL,0) salaryLevel,b.UNIT_NAME unitName,IFNULL(c.JOB_NAME,'') jobName,IFNULL(a.JOB_CODE,'') jobCode,
	IFNULL(d.JOB_PROPERTY_NAME,'') jobPropertyName,IFNULL(e.CONTRACT_PROPERTY_NAME,'') contractPropertyName,IFNULL(t.PRO_NO,'') proNo,IFNULL(t.PRO_NAME,'') proName,
	IFNULL(h.STANDARD_SALARY,0.0) standardSalary, IFNULL(h.SALARY_GRADE_NAME_PREFIX,'') salaryGradeNamePrefix,IFNULL(a.RECRUIT_TYPE,1) recruitType
	FROM MD_EMPLOYEE a
	JOIN MD_ORG_UNIT b ON a.UNIT_CODE=b.UNIT_CODE
	LEFT JOIN MD_EMPLOYEE_JOB c ON a.JOB_CODE=c.JOB_CODE
	LEFT JOIN MD_EMPLOYEE_JOB_PROPERTY d ON a.JOB_PROPERTY_CODE=d.JOB_PROPERTY_CODE
	LEFT JOIN MD_EMPLOYEE_CONTRACT_PROPERTY e ON a.CONTRACT_PROPERTY_CODE=e.CONTRACT_PROPERTY_CODE
	LEFT JOIN (SELECT f.PRO_NO,f.EMPLOYEECODE,g.PRO_NAME
	FROM PM_MEMBER f
	JOIN PM_BASE g ON f.PRO_NO=g.pro_no
	WHERE f.WORK_STATUE=1 AND g.PRO_STATUS=2 AND g.SYS_PROCESS_FLAG='1'
	<if test="proNo != null and proNo != ''">
	and f.PRO_NO=#{proNo}
	</if>
	) t ON a.EMPLOYEECODE=t.EMPLOYEECODE
	LEFT JOIN (SELECT i.SALARY_GRADE_NAME_PREFIX,i.FRAMEWORK_CODE,h.UNIT_CODE,h.SALARY_GRADE,h.SALARY_LEVEL,STANDARD_SALARY
	FROM HRM_STANDARD_SALARY_SETTING h
	JOIN HRM_SALARY_FRAMEWORK i ON h.unit_code=i.unit_code AND i.FRAMEWORK_CODE=h.FRAMEWORK_CODE
	WHERE h.COMPANY_CODE=#{companyCode} AND i.STATUS=2 AND i.SYS_PROCESS_FLAG='1') h ON a.unit_code=h.unit_code 
	AND a.salary_grade=h.salary_grade AND a.SALARY_LEVEL=h.SALARY_LEVEL
	WHERE a.WORK_STATUS=1 AND a.SYS_PROCESS_FLAG='1' AND b.sys_process_flag='1' and b.COMPANY_CODE=#{companyCode}
	<if test="unitCode!=null and unitCode!=''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="employeeName != null and employeeName != ''">
  	and a.EMPLOYEENAME LIKE concat('%',#{employeeName},'%')
  	</if>
  	order by a.UNIT_CODE
  	limit #{firstResult},#{maxResult}
  </select>
  
  <select id="selectSalaryParam" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT MEAL_ALLOWANCE mealAllowance,FULL_ATTENDANCE_BONUS fullAttendanceBonus,SENIORITY_SALARY senioritySalary,
	MON_PAYABLE_DAY monParableDay,DAY_WORK_HOUR dayWorkHour,SALARY_FACTOR salaryFactor
	FROM HRM_SALARY_PARAM WHERE company_code=#{companyCode}
  </select>
  
  <select id="isStart" parameterType="map" resultType="map">
  		select TITLE title,UNIT_CODE unitCode from  HRM_SALARY_FRAMEWORK where COMPANY_CODE=#{companyCode} and UNIT_CODE=#{unitCode} and STATUS=2
  		and FRAMEWORK_CODE &lt;&gt;#{frameworkCode} 
  </select>
  
  
  <update id="updateStatus"  parameterType="map">
  		update HRM_SALARY_FRAMEWORK set status=#{status} where COMPANY_CODE=#{companyCode} and UNIT_CODE=#{unitCode} and FRAMEWORK_CODE=#{frameworkCode}
  </update>
  
  <select id="selectEmployeeSalaryByCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT DISTINCT a.UNIT_CODE unitCode,a.EMPLOYEECODE employeeCode,a.RECORDNO recordNo,a.EMPLOYEENAME employeeName,a.JOB_NO jobNo,a.JOB_CODE jobCode,a.JOB_PROPERTY_CODE jobPropertyCode,
	IFNULL(DATE_FORMAT(a.OFFICE_DATE,'%Y-%m-%d'),'') officeDate,IFNULL(DATE_FORMAT(a.WORK_DATE,'%Y-%m-%d'),'') workDate,
	a.CONTRACT_PROPERTY_CODE contractPropertyCode,IFNULL(a.SALARY_GRADE,0) salaryGrade,IFNULL(a.SALARY_LEVEL,0) salaryLevel,
	IFNULL(h.STANDARD_SALARY,0.0) standardSalary, IFNULL(h.SALARY_GRADE_NAME_PREFIX,'') salaryGradeNamePrefix,IFNULL(a.SALARY,0.0) realSalary,IFNULL(a.IS_YEARLY_SALARY,0) isYearlySalary,
	IFNULL(a.RECRUIT_TYPE,1) recruitType
	FROM MD_EMPLOYEE a
	JOIN MD_ORG_UNIT b ON a.UNIT_CODE=b.UNIT_CODE
	LEFT JOIN (SELECT i.SALARY_GRADE_NAME_PREFIX,i.FRAMEWORK_CODE,h.UNIT_CODE,h.SALARY_GRADE,h.SALARY_LEVEL,STANDARD_SALARY
	FROM HRM_STANDARD_SALARY_SETTING h
	JOIN HRM_SALARY_FRAMEWORK i ON h.unit_code=i.unit_code AND i.FRAMEWORK_CODE=h.FRAMEWORK_CODE
	WHERE h.COMPANY_CODE=#{companyCode} AND i.STATUS=2 AND i.SYS_PROCESS_FLAG='1') h ON a.unit_code=h.unit_code 
	AND a.salary_grade=h.salary_grade AND a.SALARY_LEVEL=h.SALARY_LEVEL
	WHERE a.SYS_PROCESS_FLAG='1' AND b.sys_process_flag='1' AND b.COMPANY_CODE=#{companyCode} 
	AND a.EMPLOYEECODE=#{employeeCode} and a.UNIT_CODE=#{unitCode}
  	
  </select>
  
  <select id="selectUnitSalary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	 select DISTINCT s.STANDARD_SALARY standardSalary,s.UNIT_CODE unitCode,s.FRAMEWORK_CODE,ifnull(f.IS_YEARLY_SALARY,0) isYearlySalary
  	 from  HRM_SALARY_FRAMEWORK f
	 join HRM_STANDARD_SALARY_SETTING s on f.FRAMEWORK_CODE=s.FRAMEWORK_CODE
	 where f.COMPANY_CODE=#{companyCode} AND f.UNIT_CODE=#{unitCode} AND f.STATUS=2 
	 AND s.SALARY_GRADE=#{salaryGrade} AND s.SALARY_LEVEL=#{salaryLevel}
  </select>
  
  <select id="selectEmployeeSalaryForList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT DISTINCT IFNULL(a.IS_YEARLY_SALARY,0) isYearlySalary,IFNULL(a.SALARY,0) realSalary,IFNULL(a.GRADE_SALARY,0) gradeSalary,a.UNIT_CODE unitCode,a.EMPLOYEECODE employeeCode,a.RECORDNO recordNo,a.EMPLOYEENAME employeeName,a.JOB_NO jobNo,a.JOB_CODE jobCode,a.JOB_PROPERTY_CODE jobPropertyCode,
	a.JOB_CLASS1 jobClass1,a.SEX sex,a.IDCARD idCard,a.DEGREE degree,IFNULL(DATE_FORMAT(a.OFFICE_DATE,'%Y-%m-%d'),'') officeDate,IFNULL(DATE_FORMAT(a.WORK_DATE,'%Y-%m-%d'),'') workDate,
	a.CONTRACT_PROPERTY_CODE contractPropertyCode,IFNULL(a.SALARY_GRADE,0) salaryGrade,IFNULL(a.SALARY_LEVEL,0) salaryLevel,b.UNIT_NAME unitName,IFNULL(c.JOB_NAME,'') jobName,IFNULL(a.JOB_CODE,'') jobCode,
	IFNULL(d.JOB_PROPERTY_NAME,'') jobPropertyName,IFNULL(e.CONTRACT_PROPERTY_NAME,'') contractPropertyName,IFNULL(t.PRO_NO,'') proNo,IFNULL(t.PRO_NAME,'') proName,
	IFNULL(h.STANDARD_SALARY,0.0) standardSalary, IFNULL(h.SALARY_GRADE_NAME_PREFIX,'') salaryGradeNamePrefix,IFNULL(a.RECRUIT_TYPE,1) recruitType
	FROM MD_EMPLOYEE a
	JOIN MD_ORG_UNIT b ON a.UNIT_CODE=b.UNIT_CODE
	LEFT JOIN MD_EMPLOYEE_JOB c ON a.JOB_CODE=c.JOB_CODE
	LEFT JOIN MD_EMPLOYEE_JOB_PROPERTY d ON a.JOB_PROPERTY_CODE=d.JOB_PROPERTY_CODE
	LEFT JOIN MD_EMPLOYEE_CONTRACT_PROPERTY e ON a.CONTRACT_PROPERTY_CODE=e.CONTRACT_PROPERTY_CODE
	LEFT JOIN (SELECT f.PRO_NO,f.EMPLOYEECODE,g.PRO_NAME
	FROM PM_MEMBER f
	JOIN PM_BASE g ON f.PRO_NO=g.pro_no
	WHERE f.WORK_STATUE=1 AND g.PRO_STATUS=2 AND g.SYS_PROCESS_FLAG='1'
	<if test="proNo != null and proNo != ''">
	and f.PRO_NO=#{proNo}
	</if>
	) t ON a.EMPLOYEECODE=t.EMPLOYEECODE
	LEFT JOIN (SELECT i.SALARY_GRADE_NAME_PREFIX,i.FRAMEWORK_CODE,h.UNIT_CODE,h.SALARY_GRADE,h.SALARY_LEVEL,STANDARD_SALARY
	FROM HRM_STANDARD_SALARY_SETTING h
	JOIN HRM_SALARY_FRAMEWORK i ON h.unit_code=i.unit_code AND i.FRAMEWORK_CODE=h.FRAMEWORK_CODE
	WHERE h.COMPANY_CODE=#{companyCode} AND i.STATUS=2 AND i.SYS_PROCESS_FLAG='1') h ON a.unit_code=h.unit_code 
	AND a.salary_grade=h.salary_grade AND a.SALARY_LEVEL=h.SALARY_LEVEL
	WHERE a.WORK_STATUS=1 AND a.SYS_PROCESS_FLAG='1' AND b.sys_process_flag='1' and b.COMPANY_CODE=#{companyCode}
	<if test="unitCode!=null and unitCode!=''">
  	and a.UNIT_CODE=#{unitCode}
  	</if>
  	<if test="employeeName != null and employeeName != ''">
  	and a.EMPLOYEENAME LIKE concat('%',#{employeeName},'%')
  	</if>
  	order by a.UNIT_CODE
  </select>
  
  <select id="getLabourcostByProNo" parameterType="map" resultType="map">
  		select * from PM_PB_LABOURCOST where PRO_NO=#{proNo} and COMPANY_CODE=#{companyCode} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
  </select>
  <update id="updateLabourCost" parameterType="map">
  		UPDATE PM_PB_LABOURCOST SET UNIVALENT=#{hrmResPrice},LABOUR_COST=#{labourCost} WHERE ROW_ID=#{rowid}
  </update>
  
  <select id="getCostByProPhase" parameterType="map" resultType="map">
  	select sum(LABOUR_COST) cost,PRO_NO,PHASE_CODE from PM_PB_LABOURCOST where PRO_NO=#{proNo} and BUDGETESTIMATE_CODE=#{budgetEstimateCode} and VERSION_CODE=#{versionCode}
	group by PHASE_CODE
  </select>
  
  <update id="updateCostByProPhase" parameterType="map">
  		update PM_PB_ITEM_COST set COST=#{cost} where PRO_NO=#{proNo}
		and ITEM_CODE='I001' and PHASE_CODE=#{phaseCode}
  </update>

</mapper>