<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.pe.boxCheck.dao.PeBcBoxMeterRelCheckMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.pe.boxCheck.vo.PeBcBoxMeterRelCheckVo" >
    <id column="ROWID" property="rowid" jdbcType="BIGINT" />
    <result column="BOX_CODE" property="boxCode" jdbcType="VARCHAR" />
    <result column="METER_CODE" property="meterCode" jdbcType="VARCHAR" />
    <result column="TRANS_SVS_AREA_CODE" property="transSvsAreaCode" jdbcType="VARCHAR" />
    <result column="CHECK_RESULT" property="checkResult" jdbcType="INTEGER" />
    <result column="CHECK_TIME" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="CHECK_USER" property="checkUser" jdbcType="VARCHAR" />
    <result column="BATCH_CODE" property="batchCode" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ROWID, BOX_CODE, METER_CODE, TRANS_SVS_AREA_CODE, CHECK_RESULT, CHECK_TIME, CHECK_USER, BATCH_CODE
  </sql>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pe_bc_box_meter_rel_check
    where ROWID = #{rowid,jdbcType=BIGINT}
  </select>
  
  <select id="selectByBoxCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pe_bc_box_meter_rel_check
    where BOX_CODE = #{boxCode,jdbcType=VARCHAR}
  </select>
  
  <select id="queryForCount" resultType="int" parameterType="map" >
    select 
    	count(*)
    from pe_bc_box_meter_rel_check
    where BATCH_CODE = #{batchCode,jdbcType=VARCHAR}
  </select>
  
  <select id="queryForPage" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from pe_bc_box_meter_rel_check
    where BATCH_CODE = #{batchCode,jdbcType=VARCHAR}
    limit ${firstResult},${maxResult}
  </select>
  
  <select id="queryForList" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from pe_bc_box_meter_rel_check
    where BATCH_CODE = #{batchCode,jdbcType=VARCHAR}
  </select>
  
  <insert id="insert" parameterType="com.glens.pwCloudOs.pe.boxCheck.vo.PeBcBoxMeterRelCheckVo" >
    insert into pe_bc_box_meter_rel_check (BOX_CODE, METER_CODE, 
      TRANS_SVS_AREA_CODE, CHECK_RESULT, CHECK_TIME, 
      CHECK_USER, BATCH_CODE)
    values (#{boxCode,jdbcType=VARCHAR}, #{meterCode,jdbcType=VARCHAR}, 
      #{transSvsAreaCode,jdbcType=VARCHAR}, #{checkResult,jdbcType=INTEGER}, now(), 
      #{checkUser,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="list" >
    insert into pe_bc_box_meter_rel_check (BOX_CODE, METER_CODE, 
      TRANS_SVS_AREA_CODE, CHECK_RESULT, CHECK_TIME, 
      CHECK_USER, BATCH_CODE)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.boxCode,jdbcType=VARCHAR}, #{item.meterCode,jdbcType=VARCHAR}, 
      #{item.transSvsAreaCode,jdbcType=VARCHAR}, #{item.checkResult,jdbcType=INTEGER}, now(), 
      #{item.checkUser,jdbcType=VARCHAR}, #{item.batchCode,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <update id="update" parameterType="com.glens.pwCloudOs.pe.boxCheck.vo.PeBcBoxMeterRelCheckVo" >
    update pe_bc_box_meter_rel_check
    <set>
      CHECK_TIME = now(),
      <if test="checkResult != null" >
        CHECK_RESULT = #{checkResult,jdbcType=INTEGER},
      </if>
      <if test="checkUser != null" >
        CHECK_USER = #{checkUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ROWID = #{rowid,jdbcType=BIGINT}
  </update>
</mapper>