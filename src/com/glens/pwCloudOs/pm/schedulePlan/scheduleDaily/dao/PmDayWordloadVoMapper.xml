<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.dao.PmDayWordloadVoMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="ROWID" property="rowid" jdbcType="BIGINT" />
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="PRO_NO" property="proNo" jdbcType="VARCHAR" />
    <result column="PRO_CODE" property="proCode" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
     <result column="PRO_PHASE" property="proPhase" jdbcType="INTEGER" />
    <result column="TOTAL_WORKLOAD" property="totalWordload"/>
    <result column="PRO_MANAGER" property="proManager"/>
    <result column="PLAN_PROGRESS" property="planProgress" jdbcType="REAL" />
    <result column="PLAN_IW_WORDLOAD" property="planIwWordload" jdbcType="REAL" />
    <result column="PLAN_OW_WORDLOAD" property="planOwWordload" jdbcType="REAL" />
    <result column="CLONE_PLAN_PROGRESS" property="clonePlanProgress" jdbcType="REAL" />
    <result column="CLONE_PLAN_IW_WORDLOAD" property="clonePlanIwWordload" jdbcType="REAL" />
    <result column="CLONE_PLAN_OW_WORDLOAD" property="clonePlanOwWordload" jdbcType="REAL" />
    <result column="ACTUAL_IW_WORDLOAD" property="actualIwWordload" jdbcType="REAL" />
    <result column="ACTUAL_OW_WORDLOAD" property="actualOwWordload" jdbcType="REAL" />
    <result column="REMAIN_IW_WORDLOAD" property="remainIwWordload" jdbcType="REAL" />
    <result column="REMAIN_OW_WORDLOAD" property="remainOwWordload" jdbcType="REAL" />
    <result column="DAY_ACCUMULATIVE_PROGRESS" property="dayAccumulativeProgress"/>
    <result column="DAY_ACCUMULATIVE_WORDLOAD" property="dayAccumulativeWordload" jdbcType="REAL" />
    <result column="REPORT_DATE" property="reportDate" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="DAY_WORDLOAD_STATUS" property="reportStatus"/>
    <result column="IW_PROPORTION" property="iwProportion" />
    <result column="OW_PROPORTION" property="owProportion" />
    <result column="PLAN_WORDLOAD" property="planWordload" />
    <result column="CLONE_PLAN_WORDLOAD" property="clonePlanWordload" />
    <result column="ACTUAL_IW_PNS" property="actualIwPns" />
    <result column="ACTUAL_OW_PNS" property="actualOwPns" />
    <result column="ACTUAL_IW_WORKDESC" property="actualIwWorkDesc" />
    <result column="ACTUAL_OW_WORKDESC" property="actualOwWorkDesc" />
    <!--  -->
    <result column="ACTUAL_OW_CABLE" property="actualOwCable" jdbcType="REAL" />
    <result column="ACTUAL_OW_CARD" property="actualOwCard" jdbcType="REAL" />
    <result column="ACTUAL_OW_LOCATE" property="actualOwLocate" jdbcType="REAL" />
    
    <result column="ALL_ACCUMULATIVE_PROGRESS" property="allAccumulativeProgress" jdbcType="REAL"/>
    <result column="ALL_ACCUMULATIVE_WORDLOAD" property="allAccumulativeWordload" jdbcType="REAL" />
    <!--  -->
    <result column="OW_SUM_TYPE" property="owSumType" jdbcType="VARCHAR" /><!-- 外业工作量计算分类（来自项目分类中的REMARK,[1]:A*0.5+B*0.1+C*0.4, [2]:A*0.5+C*0.5） -->
    <result column="SYS_CREATE_TIME" property="sysCreateTime" jdbcType="TIMESTAMP" />
    
    <result column="WORK_HOURS" property="workHours" jdbcType="REAL" />
    <result column="ALL_WORK_HOURS" property="allWorkHours" jdbcType="REAL" />
    <result column="TIME_PROGRESS" property="timeProgress" jdbcType="REAL" />
    <association column="doc_no" property="check" select="com.glens.pwCloudOs.pm.projDoc.dao.DocumentCheckVoMapper.queryByDocNo"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    b.ROWID,a.COMPANY_CODE, a.PRO_NO, a.PRO_CODE, a.PRO_NAME, a.TOTAL_WORKLOAD,a.PRO_MANAGER, 
    ROUND(ifnull(b.PLAN_PROGRESS,0) * 100, 2) PLAN_PROGRESS, 
    ifnull(b.PLAN_IW_WORDLOAD,0) PLAN_IW_WORDLOAD, 
    ifnull(b.PLAN_OW_WORDLOAD,0), PLAN_OW_WORDLOAD, 
    ROUND(ifnull(b.CLONE_PLAN_PROGRESS,0) * 100, 2) CLONE_PLAN_PROGRESS, 
    ifnull(b.CLONE_PLAN_IW_WORDLOAD,0) CLONE_PLAN_IW_WORDLOAD, 
    ifnull(b.CLONE_PLAN_OW_WORDLOAD,0) CLONE_PLAN_OW_WORDLOAD, 
    ROUND(ifnull(b.ACTUAL_IW_WORDLOAD,0),2) ACTUAL_IW_WORDLOAD, 
    ROUND(ifnull(b.ACTUAL_OW_WORDLOAD,0),2) ACTUAL_OW_WORDLOAD, 
    ROUND(ifnull(b.REMAIN_IW_WORDLOAD,0),2) REMAIN_IW_WORDLOAD, 
    ROUND(ifnull(b.REMAIN_OW_WORDLOAD,0),2) REMAIN_OW_WORDLOAD, 
    ROUND(ifnull(b.DAY_ACCUMULATIVE_PROGRESS,0) * 100, 2) DAY_ACCUMULATIVE_PROGRESS, 
    ROUND(ifnull(b.DAY_ACCUMULATIVE_WORDLOAD,0), 2) DAY_ACCUMULATIVE_WORDLOAD, 
    ifnull(DATE_FORMAT(b.REPORT_DATE,'%Y-%m-%d'), '-') REPORT_DATE, 
    ifnull(b.REMARKS,'') REMARKS,a.IW_PROPORTION,a.OW_PROPORTION,ifnull(b.PLAN_WORDLOAD,0) PLAN_WORDLOAD,ifnull(b.CLONE_PLAN_WORDLOAD,0) CLONE_PLAN_WORDLOAD,
    case when b.PRO_NO is null then '0' else '1' end DAY_WORDLOAD_STATUS,
    ifnull(b.ACTUAL_IW_PNS,0) ACTUAL_IW_PNS,ifnull(b.ACTUAL_OW_PNS,0) ACTUAL_OW_PNS,
    ifnull(b.ACTUAL_IW_WORKDESC,'') ACTUAL_IW_WORKDESC,ifnull(b.ACTUAL_OW_WORKDESC, '') ACTUAL_OW_WORKDESC,
    ROUND(ifnull(b.ALL_ACCUMULATIVE_PROGRESS,0) * 100, 2) ALL_ACCUMULATIVE_PROGRESS, 
    ROUND(ifnull(b.ALL_ACCUMULATIVE_WORDLOAD,0), 2) ALL_ACCUMULATIVE_WORDLOAD,
    ifnull(b.ACTUAL_OW_CABLE,0) ACTUAL_OW_CABLE,ifnull(b.ACTUAL_OW_CARD,0) ACTUAL_OW_CARD,ifnull(b.ACTUAL_OW_LOCATE,0) ACTUAL_OW_LOCATE,b.SYS_CREATE_TIME,
    b.WORK_HOURS, b.ALL_WORK_HOURS
  </sql>
  
  <select id="queryForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*) from PM_BASE where PRO_STATUS='2' and SYS_PROCESS_FLAG='1'
  	<if test="proNo != null and proNo != ''">
  		and PRO_NO=#{proNo}
  	</if>
  	<if test="accountCode != null and accountCode != ''">
		and ACCOUNT_CODE=#{accountCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
	and MANAGE_DEPT=#{deptCode}
	</if>
  </select>
  
  <select id="queryForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE
  	from PM_BASE a
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
	left join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO 
	<if test="date != null and date != ''">
  		and b.REPORT_DATE=#{date}
  	</if>
	where a.PRO_STATUS='2' and a.SYS_PROCESS_FLAG='1'
	<if test="proNo != null and proNo != ''">
  		and a.PRO_NO=#{proNo}
  	</if>
  	<if test="accountCode != null and accountCode != ''">
		and a.ACCOUNT_CODE=#{accountCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
	and a.MANAGE_DEPT=#{deptCode}
	</if>
  </select>
  
  <select id="selectPmDayWordload" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE
  	from PM_BASE a
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
	left join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO and b.REPORT_DATE=#{date}
	where a.SYS_PROCESS_FLAG='1'
	and a.PRO_NO=#{proNo}
	<if test="deptCode != null and deptCode != ''">
		and a.MANAGE_DEPT=#{deptCode}
    </if>
  </select>
  
  <select id="selectPmDayWordload2" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE,
	  	(CASE WHEN b.report_date &lt; a.e_date THEN
	  		ROUND((DATEDIFF(b.report_date, a.S_DATE)/DATEDIFF(a.E_DATE, a.S_DATE))*100,2)
	  	ELSE 100 END) as time_progress,
  		b.rowid as doc_no
  	from PM_BASE a
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
	left join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO and b.REPORT_DATE &gt;= #{fromDate} and b.REPORT_DATE &lt;= #{toDate}
	where a.SYS_PROCESS_FLAG='1'
	and a.PRO_NO=#{proNo}
	<if test="deptCode != null and deptCode != ''">
		and a.MANAGE_DEPT=#{deptCode}
    </if>
    <if test="searchName!=null and searchName!=''">
    	and (a.PRO_NO  like concat('%',#{searchName},'%') or a.PRO_NAME  like concat('%',#{searchName},'%') or a.PRO_MANAGER  like concat('%',#{searchName},'%'))
    </if>
  </select>
  
  <select id="getLastWordloadDate" parameterType="string" resultType="string">
  	SELECT MAX(report_date) FROM pm_day_wordload WHERE pro_no=#{proNo}
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from PM_BASE a
	join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO
    where a.PRO_NO = #{proNo} and b.REPORT_DATE=#{reportDate}
  </select>
  
  <select id="findByRowid" parameterType="long" resultMap="BaseResultMap">
    select
  	<include refid="Base_Column_List" />,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE
  	from PM_BASE a
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
	left join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO 
	where a.PRO_STATUS='2' and a.SYS_PROCESS_FLAG='1'
  	and b.ROWID=#{rowid}
  </select>

  <insert id="insert" parameterType="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" >
    insert into pm_day_wordload (COMPANY_CODE, PRO_NO, 
      PRO_NAME, PLAN_PROGRESS, PLAN_IW_WORDLOAD, 
      PLAN_OW_WORDLOAD, CLONE_PLAN_PROGRESS, CLONE_PLAN_IW_WORDLOAD, 
      CLONE_PLAN_OW_WORDLOAD, ACTUAL_IW_WORDLOAD, 
      ACTUAL_OW_WORDLOAD, REMAIN_IW_WORDLOAD, REMAIN_OW_WORDLOAD, 
      DAY_ACCUMULATIVE_PROGRESS, DAY_ACCUMULATIVE_WORDLOAD, 
      REPORT_DATE, SYS_CREATE_TIME, SYS_PROCESS_FLAG, REMARKS,PLAN_WORDLOAD,CLONE_PLAN_WORDLOAD,
      ACTUAL_IW_PNS,ACTUAL_OW_PNS,ACTUAL_IW_WORKDESC,ACTUAL_OW_WORKDESC,ACTUAL_OW_CABLE,ACTUAL_OW_CARD,ACTUAL_OW_LOCATE,
      ALL_ACCUMULATIVE_PROGRESS,ALL_ACCUMULATIVE_WORDLOAD,WORK_HOURS,ALL_WORK_HOURS
      )
    values (#{companyCode,jdbcType=VARCHAR}, #{proNo,jdbcType=VARCHAR}, 
      #{proName,jdbcType=VARCHAR}, #{planProgress,jdbcType=REAL}, #{planIwWordload,jdbcType=REAL}, 
      #{planOwWordload,jdbcType=REAL}, #{clonePlanProgress,jdbcType=REAL}, #{clonePlanIwWordload,jdbcType=REAL}, 
      #{clonePlanOwWordload,jdbcType=REAL}, #{actualIwWordload,jdbcType=REAL}, 
      #{actualOwWordload,jdbcType=REAL}, #{remainIwWordload,jdbcType=REAL}, #{remainOwWordload,jdbcType=REAL}, 
      #{dayAccumulativeProgress,jdbcType=REAL}, #{dayAccumulativeWordload,jdbcType=REAL}, 
      #{reportDate}, now(), '1', #{remarks,jdbcType=VARCHAR}, #{planWordload}, #{clonePlanWordload},
      #{actualIwPns},#{actualOwPns},#{actualIwWorkDesc},#{actualOwWorkDesc},#{actualOwCable},#{actualOwCard},#{actualOwLocate},
      #{allAccumulativeProgress,jdbcType=REAL}, #{allAccumulativeWordload,jdbcType=REAL}, #{workHours,jdbcType=REAL}, #{allWorkHours,jdbcType=REAL}
      )
  </insert>
   <update id="update" parameterType="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" >
    update pm_day_wordload
    <set >
      <if test="planProgress != null">
      PLAN_PROGRESS = #{planProgress,jdbcType=REAL},
      </if>
      <if test="planIwWordload != null">
      PLAN_IW_WORDLOAD = #{planIwWordload,jdbcType=REAL}, 
      </if>
      <if test="planOwWordload != null">
      PLAN_OW_WORDLOAD = #{planOwWordload,jdbcType=REAL},
      </if>
      <if test="clonePlanProgress != null"> 
      CLONE_PLAN_PROGRESS = #{clonePlanProgress,jdbcType=REAL},
      </if>
      <if test="clonePlanIwWordload != null"> 
      CLONE_PLAN_IW_WORDLOAD = #{clonePlanIwWordload,jdbcType=REAL},
      </if>
      <if test="clonePlanOwWordload != null"> 
      CLONE_PLAN_OW_WORDLOAD = #{clonePlanOwWordload,jdbcType=REAL},
      </if>
      <if test="actualIwWordload != null"> 
      ACTUAL_IW_WORDLOAD = #{actualIwWordload,jdbcType=REAL},
      </if>
      <if test="actualOwWordload != null"> 
      ACTUAL_OW_WORDLOAD = #{actualOwWordload,jdbcType=REAL},
      </if>
      <if test="remainIwWordload != null"> 
      REMAIN_IW_WORDLOAD = #{remainIwWordload,jdbcType=REAL},
      </if>
      <if test="remainOwWordload != null"> 
      REMAIN_OW_WORDLOAD = #{remainOwWordload,jdbcType=REAL},
      </if>
      <if test="dayAccumulativeProgress != null"> 
      DAY_ACCUMULATIVE_PROGRESS = #{dayAccumulativeProgress,jdbcType=REAL},
      </if>
      <if test="dayAccumulativeWordload != null"> 
      DAY_ACCUMULATIVE_WORDLOAD = #{dayAccumulativeWordload,jdbcType=REAL},
      </if>
      <if test="remarks != null"> 
      REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="planWordload != null"> 
      PLAN_WORDLOAD = #{planWordload}, 
      </if>
      <if test="clonePlanWordload != null">
      CLONE_PLAN_WORDLOAD = #{clonePlanWordload},
      </if>
      <if test="actualIwPns != null">
      ACTUAL_IW_PNS = #{actualIwPns},
      </if>
      <if test="actualOwPns != null">
      ACTUAL_OW_PNS = #{actualOwPns},
      </if>
      <if test="actualIwWorkDesc != null">
      ACTUAL_IW_WORKDESC = #{actualIwWorkDesc},
      </if>
      <if test="actualOwWorkDesc != null">
      ACTUAL_OW_WORKDESC = #{actualOwWorkDesc},
      </if>
      <if test="actualOwCable != null">
      ACTUAL_OW_CABLE = #{actualOwCable},
      </if>
      <if test="actualOwCard != null">
      ACTUAL_OW_CARD = #{actualOwCard},
      </if>
      <if test="actualOwLocate != null">
      ACTUAL_OW_LOCATE = #{actualOwLocate},
      </if>
      <if test="allAccumulativeProgress != null">
      ALL_ACCUMULATIVE_PROGRESS = #{allAccumulativeProgress,jdbcType=REAL},
      </if>
      <if test="allAccumulativeWordload != null"> 
      ALL_ACCUMULATIVE_WORDLOAD = #{allAccumulativeWordload,jdbcType=REAL},
      </if>
      <if test="workHours != null"> 
      WORK_HOURS = #{workHours,jdbcType=REAL},
      </if>
      <if test="allWorkHours != null"> 
      ALL_WORK_HOURS = #{allWorkHours,jdbcType=REAL},
      </if>
    </set>
   where PRO_NO = #{proNo,jdbcType=VARCHAR} and REPORT_DATE = #{reportDate}
  </update>
  <select id="selectProByNo" parameterType="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" resultMap="BaseResultMap">
  	select a.COMPANY_CODE, a.PRO_NO, a.PRO_NAME, a.TOTAL_WORKLOAD,a.PRO_MANAGER, a.IW_PROPORTION,a.OW_PROPORTION,
  		(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE, a.PRO_PHASE
  	from PM_BASE a 
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
  	where a.PRO_NO = #{proNo}
  </select>
  <select id="selectWordloadByDate" resultType="map" parameterType="map">
  	select 
  		round(sum(day_accumulative_wordload),3) as wordload,
  		ROUND(AVG(ACTUAL_IW_PNS),0) AS iwpcnt,
  		ROUND(AVG(ACTUAL_OW_PNS),0) AS owpcnt
  	from pm_day_wordload 
  	where pro_no=#{proNo} and report_date &gt;= #{sdate} and report_date &lt;= #{edate}
  </select>
  <select id="selectDayWordloadByNo" parameterType="com.glens.pwCloudOs.pm.schedulePlan.scheduleDaily.vo.PmDayWordloadVo" resultMap="BaseResultMap">
  	select b.*,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE, a.TOTAL_WORKLOAD
   	from PM_DAY_WORDLOAD b 
   	left join pm_base a on a.pro_no=b.pro_no
   	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
   	where b.PRO_NO=#{proNo} and b.REPORT_DATE&lt;#{reportDate} order by b.REPORT_DATE DESC limit 0,1
  </select>
  
  <select id="selectFormulaType" parameterType="java.lang.String" resultType="int">
  	select a.FORMULA_TYPE from PM_CATEGORY a 
	join pm_base b on a.CATEGORY_CODE=b.CATEGORY_CODE
	where b.PRO_NO=#{proNo}
  </select>
  
  <select id="selectDanWordloadByDate" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />,(case when x.REMARKS is null or x.REMARKS = '' then '0' else x.REMARKS end) as OW_SUM_TYPE, a.PRO_PHASE,
	  	(CASE WHEN b.report_date &lt; a.e_date THEN
	  		ROUND((DATEDIFF(b.report_date, a.S_DATE)/DATEDIFF(a.E_DATE, a.S_DATE))*100,2)
	  	ELSE 100 END) as time_progress,
	  	b.rowid as doc_no
  	from PM_BASE a
  	left join pm_category x on x.CATEGORY_CODE=a.CATEGORY_CODE
	left join PM_DAY_WORDLOAD b on a.PRO_NO=b.PRO_NO 
	<if test="reportDate != null and reportDate != ''">
  		and b.REPORT_DATE=#{reportDate}
  	</if>
	where a.SYS_PROCESS_FLAG='1'
	<if test="proNo != null and proNo != ''">
  		and a.PRO_NO=#{proNo}
  	</if>
  	<if test="proStatus != null and proStatus != ''">
  		and a.PRO_STATUS=#{proStatus}
  	</if>
  	<if test="categoryCode != null and categoryCode != ''">
  	and a.CATEGORY_CODE=#{categoryCode}
  	</if>
  	<if test="accountCode != null and accountCode != ''">
		and a.ACCOUNT_CODE=#{accountCode}
	</if>
	<if test="deptCode != null and deptCode != ''">
	and a.MANAGE_DEPT=#{deptCode}
	</if>
	<if test="searchName!=null and searchName!=''">
		and (a.PRO_NO like concat('%',#{searchName},'%') or a.PRO_NAME like concat('%',#{searchName},'%') or a.PRO_MANAGER like concat('%',#{searchName},'%'))
	</if>
	order by time_progress
  </select>
  
  <select id="getAllAccumulativeWordload" parameterType="map" resultType="float">
  	<!-- 此处使用DAY_ACCUMULATIVE_PROGRESS是因为数据库中PROGRESS与WORDLOAD存值颠倒了,!!!!!!改回来！改回来！ -->
  	select (sum(DAY_ACCUMULATIVE_WORDLOAD)+(select INIT_WORKLOAD from pm_base where pro_no=#{proNo})) as  ALL_ACCUMULATIVE_WORDLOAD
	from pm_day_wordload 
	where pro_no=#{proNo} AND REPORT_DATE &lt; #{workDate}
  </select>
  
  <select id="getProWorkLoad" parameterType="map" resultType="map">
	SELECT
		g.PRO_NO,
		CONCAT(
			round(
				g.ALL_ACCUMULATIVE_PROGRESS * 100,
				2
			),
			'%'
		) COMPLETION
	FROM
		pm_day_wordload g
	WHERE
		g.PRO_NO = #{proNo}
	AND g.REPORT_DATE &lt;= #{queryDate}
	ORDER BY
		g.REPORT_DATE DESC
	LIMIT 1  
  </select>
</mapper>