<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glens.pwCloudOs.materielMg.dormMg.dorm.dao.DormVoMapper" >
  <resultMap id="BaseResultMap" type="com.glens.pwCloudOs.materielMg.dormMg.dorm.vo.DormVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="DORM_CODE" property="dormCode" jdbcType="VARCHAR" />
    <result column="DORM_NAME" property="dormName" jdbcType="VARCHAR" />
    <result column="PROVINCE" property="province" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="DISTRICT" property="district" jdbcType="VARCHAR" />
    <result column="X" property="x" jdbcType="VARCHAR" />
    <result column="Y" property="y" jdbcType="VARCHAR" />
    <result column="AREA" property="area" jdbcType="REAL" />
    <result column="HOUSETYPE" property="housetype" jdbcType="VARCHAR" />
    <result column="S_RENT_DATE" property="srentDate" jdbcType="DATE" />
    <result column="E_RENT_DATE" property="erentDate" jdbcType="DATE" />
    <result column="F_RENT_DATE" property="frentDate" jdbcType="DATE" />
    <result column="MONTHRENT" property="monthrent" jdbcType="INTEGER" />
    <result column="DEPOSIT" property="deposit" jdbcType="INTEGER" />
    <result column="MAX_BEDS" property="maxBeds" jdbcType="INTEGER" />
    <result column="CUR_BEDS" property="curBeds" jdbcType="INTEGER" />
    <result column="HASBED" property="hasbed" jdbcType="INTEGER" />
    <result column="CUR_PRO_NOS" property="curProNos" jdbcType="VARCHAR" />
    <result column="CUR_PRO_NAMES" property="curProNames" jdbcType="VARCHAR" />
    <result column="CUR_PRO_BEDS" property="curProBeds" jdbcType="VARCHAR" />
    <result column="DAYRENT" property="dayrent" jdbcType="REAL" />
    <result column="DORM_STATUS" property="dormStatus" jdbcType="INTEGER" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="REFUNDAMOUNT" property="refundaMount" jdbcType="VARCHAR" />
    
    <result column="AGENCY" property="agency" jdbcType="VARCHAR" />
    <result column="LANDLORD" property="landlord" jdbcType="VARCHAR" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="CONTRACT_LEASE" property="contractLease" jdbcType="VARCHAR" />
    <result column="PAYMENT_MODE" property="paymentMode" jdbcType="VARCHAR" />
    <result column="AGENCYAMOUNT" property="agencyAmount" jdbcType="INTEGER" />
    
    <result column="REFUNDDATE" property="refundDate" jdbcType="VARCHAR" />
    <result column="REFUNDDESC" property="refundDesc" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    a.DORM_CODE, a.DORM_NAME, a.PROVINCE, CITY, a.DISTRICT, a.X, a.Y, a.AREA, a.HOUSETYPE,DATE_FORMAT(a.S_RENT_DATE,'%Y-%m-%d') S_RENT_DATE, 
    DATE_FORMAT(a.E_RENT_DATE,'%Y-%m-%d') E_RENT_DATE,DATE_FORMAT(a.F_RENT_DATE,'%Y-%m-%d') F_RENT_DATE, a.MONTHRENT, a.DEPOSIT, a.MAX_BEDS, ifnull(a.CUR_BEDS,0) CUR_BEDS,
    ifnull(a.CUR_PRO_NOS,'') CUR_PRO_NOS, 
    ifnull(a.CUR_PRO_NAMES, '') CUR_PRO_NAMES, ifnull(a.CUR_PRO_BEDS,'') CUR_PRO_BEDS, a.DAYRENT, a.DORM_STATUS, a.REMARKS,ifnull(a.REFUNDAMOUNT,'') REFUNDAMOUNT,
    a.AGENCY,a.LANDLORD,a.OPERATOR,a.CONTRACT_LEASE,a.PAYMENT_MODE,a.AGENCYAMOUNT,a.REFUNDDATE,a.REFUNDDESC
  </sql>
  
  <select id="queryForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*)
  	from(
  	select  DISTINCT
    <include refid="Base_Column_List" />
    from  gm_bm_dorm a
	left join gm_bm_bedrent b on a.DORM_CODE=b.DORM_CODE
  	where a.SYS_PROCESS_FLAG='1'
  	<if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="dormName != null and dormName != ''">
    	and (b.EMPLOYEENAME like "%"#{dormName}"%"  or a.DORM_NAME like "%"#{dormName}"%"  or (a.CITY like "%"#{dormName}"%" 
    	or a.PROVINCE like "%"#{dormName}"%" or a.DISTRICT like "%"#{dormName}"%") or a.CUR_PRO_NAMES like "%"#{dormName}"%")
    </if>
    <if test="dormType != null and dormType != ''">
    	and a.DORM_STATUS=#{dormType}
    </if>
    ) temp
    
  </select>
  
  <select id="queryForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select  DISTINCT
    <include refid="Base_Column_List" />
    from  gm_bm_dorm a
	left join gm_bm_bedrent b on a.DORM_CODE=b.DORM_CODE
  	where a.SYS_PROCESS_FLAG='1'
  	<if test="areaName != null and areaName != ''">
    	and (a.CITY=#{areaName} or a.PROVINCE=#{areaName} or a.DISTRICT=#{areaName})
    </if>
    <if test="dormName != null and dormName != ''">
    	and (b.EMPLOYEENAME like "%"#{dormName}"%"  or a.DORM_NAME like "%"#{dormName}"%"  or (a.CITY like "%"#{dormName}"%" 
    	or a.PROVINCE like "%"#{dormName}"%" or a.DISTRICT like "%"#{dormName}"%") or a.CUR_PRO_NAMES like "%"#{dormName}"%" )
    </if>
    <if test="dormType != null and dormType != ''">
    	and a.DORM_STATUS=#{dormType}
    </if>
  	limit #{firstResult},#{maxResult}
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="com.glens.pwCloudOs.materielMg.dormMg.dorm.vo.DormVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select DISTINCT
    <include refid="Base_Column_List" />
    
    from  gm_bm_dorm a
	left join gm_bm_bedrent b on a.DORM_CODE=b.DORM_CODE
    where a.SYS_PROCESS_FLAG='1' and  a.DORM_CODE = #{dormCode}
  </select>
  <delete id="delete" parameterType="com.glens.pwCloudOs.materielMg.dormMg.dorm.vo.DormVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gm_bm_dorm
    where DORM_CODE = #{dormCode}
  </delete>
  <insert id="insert" parameterType="com.glens.pwCloudOs.materielMg.dormMg.dorm.vo.DormVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gm_bm_dorm (DORM_CODE, DORM_NAME, 
      PROVINCE, CITY, DISTRICT, X, Y, AREA, 
      HOUSETYPE, S_RENT_DATE, E_RENT_DATE,F_RENT_DATE, 
      MONTHRENT, DEPOSIT, MAX_BEDS,DAYRENT, DORM_STATUS, 
      SYS_CREATE_TIME, SYS_PROCESS_FLAG, REMARKS,AGENCY,LANDLORD,OPERATOR,CONTRACT_LEASE,PAYMENT_MODE,AGENCYAMOUNT)
    values ( #{dormCode,jdbcType=VARCHAR}, #{dormName,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{x,jdbcType=DECIMAL}, #{y,jdbcType=DECIMAL}, #{area,jdbcType=REAL}, 
      #{housetype,jdbcType=VARCHAR}, #{srentDate}, #{erentDate},#{frentDate}, 
      #{monthrent,jdbcType=INTEGER}, #{deposit,jdbcType=INTEGER}, #{maxBeds,jdbcType=INTEGER}, 
     #{dayrent,jdbcType=REAL}, 1, 
      now(), '1', #{remarks,jdbcType=VARCHAR},#{agency},#{landlord},#{operator},#{contractLease},#{paymentMode},#{agencyAmount})
  </insert>
  
  <update id="dormScrap" parameterType="map" >
  		update gm_bm_dorm set dorm_status=3,REFUNDAMOUNT=#{refundaMount},REFUNDDATE=#{refundDate},REFUNDDESC=#{refundDesc}
		where dorm_code=#{dormCode}
  </update>
  
  <update id="update" parameterType="com.glens.pwCloudOs.materielMg.dormMg.dorm.vo.DormVo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gm_bm_dorm
    <set >
      <if test="dormName != null" >
        DORM_NAME = #{dormName,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        PROVINCE = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        DISTRICT = #{district,jdbcType=VARCHAR},
      </if>
      <if test="x != null" >
        X = #{x,jdbcType=DECIMAL},
      </if>
      <if test="y != null" >
        Y = #{y,jdbcType=DECIMAL},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=REAL},
      </if>
      <if test="housetype != null" >
        HOUSETYPE = #{housetype,jdbcType=VARCHAR},
      </if>
      <if test="srentDate != null" >
        S_RENT_DATE = #{srentDate},
      </if>
       <if test="frentDate != null" >
        F_RENT_DATE = #{frentDate},
      </if>
      <if test="erentDate != null" >
        E_RENT_DATE = #{erentDate},
      </if>
      <if test="monthrent != null" >
        MONTHRENT = #{monthrent,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        DEPOSIT = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="maxBeds != null" >
        MAX_BEDS = #{maxBeds,jdbcType=INTEGER},
      </if>
      <if test="dayrent != null" >
        DAYRENT = #{dayrent,jdbcType=REAL},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="curBeds != null" >
        CUR_BEDS = #{curBeds,jdbcType=INTEGER},
      </if>
      <if test="dormStatus != null and dormStatus!=0" >
        DORM_STATUS = #{dormStatus,jdbcType=INTEGER},
      </if>
      <if test="curProNos != null" >
        CUR_PRO_NOS = #{curProNos,jdbcType=VARCHAR},
      </if>
      <if test="curProNames != null" >
        CUR_PRO_NAMES = #{curProNames,jdbcType=VARCHAR},
      </if>
      <if test="agency != null" >
        AGENCY = #{agency,jdbcType=VARCHAR},
      </if>
      <if test="landlord != null" >
        LANDLORD = #{landlord,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="contractLease != null" >
        CONTRACT_LEASE = #{contractLease,jdbcType=VARCHAR},
      </if>
      <if test="paymentMode != null" >
        PAYMENT_MODE = #{paymentMode,jdbcType=VARCHAR},
      </if>
      <if test="agencyAmount != null" >
        AGENCYAMOUNT = #{agencyAmount,jdbcType=INTEGER},
      </if>
      
      SYS_UPDATE_TIME = now()
    </set>
    where DORM_CODE = #{dormCode,jdbcType=VARCHAR}
  </update>
  
  <select id="selectBedByDormCode" parameterType="map" resultType="map">
  	select a.DORM_CODE dormCode,a.PRO_NO proNo,a.EMPLOYEENAME employeeName,a.EMPLOYEECODE employeeCode,ifnull(DATE_FORMAT(a.RENT_DATE,'%Y-%m-%d'),'') rentDate,
	ifnull(DATE_FORMAT(a.ESTIMATE_RETURN_DATE,'%Y-%m-%d'),'') estimateReturnDate,ifnull(DATE_FORMAT(a.RETURN_DATE,'%Y-%m-%d'),'') returnDate,b.PRO_NAME proName
	from GM_BM_BEDRENT a
	join pm_base b on a.PRO_NO=b.PRO_NO
	where a.sys_process_flag='1' and a.DORM_CODE=#{dormCode} and a.RENT_STATUS=1
  </select>
  
  <select id="selectRentDorm" parameterType="map" resultType="map">
  	select DORM_CODE dormCode,DORM_NAME dormName,PROVINCE province,CITY city,DISTRICT district,X x,Y y,ifnull(DATE_FORMAT(S_RENT_DATE,'%Y-%m-%d'),'') srentDate,
	ifnull(DATE_FORMAT(E_RENT_DATE,'%Y-%m-%d'),'') erentDate,MAX_BEDS maxBeds,ifnull(CUR_BEDS,0) curBeds,ifnull(CUR_PRO_NAMES,'') curProNames,
	(ifnull(CUR_BEDS,0) * 100)/MAX_BEDS occupancyRate,DORM_STATUS dormStatus,ifnull(CUR_PRO_NOS,'') curProNos,
	case when datediff(E_RENT_DATE, CURDATE())&lt;=15 then 1 else 0 end expire,ifnull(datediff(E_RENT_DATE, CURDATE()), 0) leftDay
	from GM_BM_DORM 
	where SYS_PROCESS_FLAG='1' and DORM_STATUS!=3
	<if test="dormStatus != null and  dormStatus !=0">
	and DORM_STATUS=#{dormStatus}
	</if>
	<if test="expire != null and expire != 0">
	and datediff(E_RENT_DATE, CURDATE())&lt;=15
	</if>
	<if test="areaName != null and areaName != ''">
	and (CITY=#{areaName} or PROVINCE=#{areaName} or DISTRICT=#{areaName})
	</if>
	<if test="dormName != null and dormName != ''">
    	and DORM_NAME like "%"#{dormName}"%" or (CITY like "%"#{dormName}"%" or PROVINCE like "%"#{dormName}"%" or DISTRICT like "%"#{dormName}"%")
    </if>
  </select>
  
  <select id="queryHasbedForCount" parameterType="java.util.HashMap" resultType="int">
  	select count(*)
  	from (
	  	select 
	    t.*,(case when max_beds&gt;cur_beds then 1 else 0 end) as hasbed
	    from gm_bm_dorm t  
	  	where SYS_PROCESS_FLAG='1'
	  	<if test="areaName != null and areaName != ''">
	    	and (CITY=#{areaName} or PROVINCE=#{areaName} or DISTRICT=#{areaName})
	    </if>
	    <if test="dormName != null and dormName != ''">
	    	and (DORM_NAME like "%"#{dormName}"%" or (CITY like "%"#{dormName}"%" or PROVINCE like "%"#{dormName}"%" or DISTRICT like "%"#{dormName}"%"))
	    </if>
	) bt
	where hasbed=1
  </select>
  
  <select id="queryHasbedForPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	select *
  	from (
	  	select 
	    t.*,(case when max_beds&gt;cur_beds then 1 else 0 end) as hasbed
	    from gm_bm_dorm t  
	  	where SYS_PROCESS_FLAG='1'
	  	<if test="areaName != null and areaName != ''">
	    	and (CITY=#{areaName} or PROVINCE=#{areaName} or DISTRICT=#{areaName})
	    </if>
	    <if test="dormName != null and dormName != ''">
	    	and (DORM_NAME like "%"#{dormName}"%" or (CITY like "%"#{dormName}"%" or PROVINCE like "%"#{dormName}"%" or DISTRICT like "%"#{dormName}"%"))
	    </if>
	) bt
	where hasbed=1
  	limit #{firstResult},#{maxResult}
  </select>
  
  
  <select id="getContract" parameterType="map" resultType="map">
  	  select  CONTRACT_NAME name,DATE_FORMAT(CONTRACT_DATE,'%Y-%m-%d') date,CONTRACT_SCANIMG fileCode from gm_bm_contract where dorm_code=#{dormCode}
  </select>
  
   <select id="getBilling" parameterType="map" resultType="map">
  	 select DATE_FORMAT(INVOICE_DATE,'%Y-%m-%d') date,INVOICE_NAME name,INVOICE_SCANIMG fileCode from  GM_BM_INVOICE
	where DORM_CODE=#{dormCode}
  </select>
  
  <select id="getDetail" parameterType="map" resultType="map">
  	 select MAX_BEDS maxbeds,CUR_BEDS curbeds,CUR_PRO_NOS proNos,CUR_PRO_NAMES proNames from gm_bm_dorm 
	where DORM_CODE=#{dormCode}
  </select>
  
  
  
  <insert id="insertContract" parameterType="map" >
  		insert into gm_bm_contract(DORM_CODE,CONTRACT_NAME,CONTRACT_DATE,CONTRACT_SCANIMG,SYS_CREATE_TIME,SYS_PROCESS_FLAG)
		VALUES(#{dormCode},#{contractName},#{contractDate},#{contractScanimg},NOW(),'1')
  </insert>
  
   <insert id="insertInvoice" parameterType="map" >
  		 insert into gm_bm_invoice(DORM_CODE,INVOICE_NAME,INVOICE_DATE,INVOICE_SCANIMG,SYS_CREATE_TIME,SYS_PROCESS_FLAG)
		VALUES(#{dormCode},#{invoiceName},#{invoiceDate},#{invoiceScanimg},NOW(),'1')
  </insert>
  
   <insert id="insertDormPerson" parameterType="map" >
  		 insert into gm_bm_bedrent(DORM_CODE,PRO_NO,EMPLOYEENAME,EMPLOYEECODE,RENT_DATE,ESTIMATE_RETURN_DATE,RENT_STATUS,
  		 SYS_CREATE_TIME,SYS_PROCESS_FLAG,REMARKS,FLOW_STATUS)
		 VALUES(#{dormCode},#{proNo},#{employeeName},#{employeeCode},#{rentDate},#{returnDate},1,NOW(),'1',#{remarks},4) 
   </insert>
  
  
  
  <delete id="deleteContract" parameterType="map">
  	  delete from gm_bm_contract where CONTRACT_SCANIMG=#{contractScanimg}
  </delete>
  
   <delete id="deleteInvoice" parameterType="map">
  	  delete from gm_bm_invoice where INVOICE_SCANIMG=#{invoiceScanimg}
  </delete>
  
  
  <delete id="deletePerson" parameterType="map">
  	  update gm_bm_bedrent set rent_status='2',RETURN_DATE=#{returnDate} where  employeecode =#{employeeCode}
  </delete>
  
  <update id="updateNum" parameterType="map">
  
  	update gm_bm_dorm 
	set CUR_BEDS=CUR_BEDS-1,
	DORM_STATUS=#{status}
	where dorm_code=#{dormCode}
 
  </update>
  
  <select id="getDormRentNums" parameterType="map" resultType="map">
  	select EMPLOYEECODE,EMPLOYEENAME,DORM_CODE from gm_bm_bedrent   where dorm_code=#{dormCode} and RENT_STATUS=1
  </select>
  
   <update id="updateDormMess" parameterType="map">
  
  	update gm_bm_dorm 
	set CUR_BEDS=CUR_BEDS+1,CUR_PRO_NOS=#{proNos},CUR_PRO_NAMES=#{proNames},DORM_STATUS='2'
	where dorm_code=#{dormCode}
  	  
  </update>
  
  <update id="updatePro" parameterType="map">
  
  	update gm_bm_dorm 
	set CUR_PRO_NOS=#{proNos},CUR_PRO_NAMES=#{proNames}
	where dorm_code=#{dormCode}
  	  
  </update>
  <update id="updateStatus" parameterType="map">
  
  	update gm_bm_dorm 
	set CUR_PRO_NOS=#{proNos},CUR_PRO_NAMES=#{proNames},DORM_STATUS='1'
	where dorm_code=#{dormCode}
  	  
  </update>
  
  
  
  <select id="getPersonDorm" parameterType="map" resultType="map">
  	   select * from gm_bm_bedrent
		where employeecode=#{employeeCode}
		and RENT_STATUS=1 and FLOW_STATUS=4
  </select>
  
 
 <select id="getDormList" parameterType="map" resultType="map">
 	select IFNULL(g.PROVINCE,'') PROVINCE,IFNULL(g.CITY,'') CITY,IFNULL(g.DISTRICT,'') DISTRICT,
	IFNULL(g.CUR_PRO_NAMES,'') CUR_PRO_NAMES,IFNULL(g.CUR_PRO_NOS,'') CUR_PRO_NOS,IFNULL(g.DORM_NAME,'') DORM_NAME,
	DATE_FORMAT(g.S_RENT_DATE,'%Y-%m-%d') S_RENT_DATE,g.MONTHRENT,DATE_FORMAT(g.E_RENT_DATE,'%Y-%m-%d') E_RENT_DATE,IFNULL(g.LANDLORD,'') LANDLORD,IFNULL(g.LANDLORD_PHONE,'') LANDLORD_PHONE,IFNULL(g.SHROFF_ACCOUNT,'') SHROFF_ACCOUNT,
	IFNULL(g.BENEFICIARY_NAME,'') BENEFICIARY_NAME,IFNULL(g.BANK,'') BANK,
	g.CUR_BEDS,g.MAX_BEDS,IFNULL(g.DAYRENT,'') DAYRENT,IFNULL(g.REMARKS,'') REMARKS,IFNULL(t1.INVOICE_DATE,'') INVOICE_DATE,IFNULL(t1.INVOICE_AMOUNT,'') INVOICE_AMOUNT,g.DORM_STATUS
	from  GM_BM_DORM g
	left join(select * from(select * from  GM_BM_INVOICE ORDER BY INVOICE_DATE DESC) t group by t.DORM_CODE) t1 on t1.DORM_CODE=g.DORM_CODE
	where 1=1
	<if test="areaName != null and areaName != ''">
    	and (g.CITY=#{areaName} or g.PROVINCE=#{areaName} or g.DISTRICT=#{areaName})
    </if>
    <if test="dormName != null and dormName != ''">
    	and (g.DORM_NAME like "%"#{dormName}"%"  or (g.CITY like "%"#{dormName}"%" 
    	or g.PROVINCE like "%"#{dormName}"%" or g.DISTRICT like "%"#{dormName}"%") or g.CUR_PRO_NAMES like "%"#{dormName}"%" )
    </if>
    <if test="dormType != null and dormType != ''">
    	and g.DORM_STATUS=#{dormType}
    </if>
    
  	limit #{firstResult},#{maxResult}
 	
 </select>
 
  <select id="queryForCount1" parameterType="java.util.HashMap" resultType="int">
     select count(*) from (select IFNULL(g.PROVINCE,'') PROVINCE,IFNULL(g.CITY,'') CITY,IFNULL(g.DISTRICT,'') DISTRICT,
	IFNULL(g.CUR_PRO_NAMES,'') CUR_PRO_NAMES,IFNULL(g.CUR_PRO_NOS,'') CUR_PRO_NOS,IFNULL(g.DORM_NAME,'') DORM_NAME,
	g.S_RENT_DATE,g.MONTHRENT,g.E_RENT_DATE,IFNULL(g.LANDLORD,'') LANDLORD,IFNULL(g.LANDLORD_PHONE,'') LANDLORD_PHONE,IFNULL(g.SHROFF_ACCOUNT,'') SHROFF_ACCOUNT,
	IFNULL(g.BENEFICIARY_NAME,'') BENEFICIARY_NAME,IFNULL(g.BANK,'') BANK,
	g.CUR_BEDS,g.MAX_BEDS,IFNULL(g.DAYRENT,'') DAYRENT,IFNULL(g.REMARKS,'') REMARKS,IFNULL(t1.INVOICE_DATE,'') INVOICE_DATE,IFNULL(t1.INVOICE_AMOUNT,'') INVOICE_AMOUNT,g.DORM_STATUS
	from  GM_BM_DORM g
	left join(select * from(select * from  GM_BM_INVOICE ORDER BY INVOICE_DATE DESC) t group by t.DORM_CODE) t1 on t1.DORM_CODE=g.DORM_CODE
	where 1=1
	<if test="areaName != null and areaName != ''">
    	and (g.CITY=#{areaName} or g.PROVINCE=#{areaName} or g.DISTRICT=#{areaName})
    </if>
    <if test="dormName != null and dormName != ''">
    	and (g.DORM_NAME like "%"#{dormName}"%"  or (g.CITY like "%"#{dormName}"%" 
    	or g.PROVINCE like "%"#{dormName}"%" or g.DISTRICT like "%"#{dormName}"%") or g.CUR_PRO_NAMES like "%"#{dormName}"%" )
    </if>
    <if test="dormType != null and dormType != ''">
    	and g.DORM_STATUS=#{dormType}
    </if>
    ) t3
  </select>
  
  
</mapper>