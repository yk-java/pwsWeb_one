<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.glens.pwCloudOs.commuteMgr.online.dao.CpOnlineUserHistoryMapper">
	<resultMap id="BaseResultMap"
		type="com.glens.pwCloudOs.commuteMgr.online.vo.CpOnlineUserHistoryVo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="companyCode" property="companycode" jdbcType="VARCHAR" />
		<result column="unitCode" property="unitcode" jdbcType="VARCHAR" />
		<result column="employeeCode" property="employeecode" jdbcType="VARCHAR" />
		<result column="employeeName" property="employeename" jdbcType="VARCHAR" />
		<result column="accountCode" property="accountcode" jdbcType="VARCHAR" />
		<result column="loginTime" property="logintime" jdbcType="VARCHAR" />
		<result column="offTime" property="offtime" jdbcType="VARCHAR" />
		<result column="network" property="network" jdbcType="CHAR" />
		<result column="duration" property="duration" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, companyCode, unitCode, employeeCode, employeeName, accountCode,
		loginTime, offTime,
		network, duration
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from cp_online_user_history
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from cp_online_user_history
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.glens.pwCloudOs.commuteMgr.online.vo.CpOnlineUserHistoryVo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into cp_online_user_history (id, companyCode, unitCode,
		employeeCode, employeeName, accountCode,
		loginTime, offTime, network,
		duration)
		values (#{id,jdbcType=BIGINT}, #{companycode,jdbcType=VARCHAR},
		#{unitcode,jdbcType=VARCHAR},
		#{employeecode,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, #{accountcode,jdbcType=VARCHAR},
		#{logintime,jdbcType=VARCHAR}, #{offtime,jdbcType=VARCHAR},
		#{network,jdbcType=CHAR},
		#{duration,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.glens.pwCloudOs.commuteMgr.online.vo.CpOnlineUserHistoryVo"
		useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into cp_online_user_history
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="companycode != null">
				companyCode,
			</if>
			<if test="unitcode != null">
				unitCode,
			</if>
			<if test="employeecode != null">
				employeeCode,
			</if>
			<if test="employeename != null">
				employeeName,
			</if>
			<if test="accountcode != null">
				accountCode,
			</if>
			<if test="logintime != null">
				loginTime,
			</if>
			<if test="offtime != null">
				offTime,
			</if>
			<if test="network != null">
				network,
			</if>
			<if test="duration != null">
				duration,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="companycode != null">
				#{companycode,jdbcType=VARCHAR},
			</if>
			<if test="unitcode != null">
				#{unitcode,jdbcType=VARCHAR},
			</if>
			<if test="employeecode != null">
				#{employeecode,jdbcType=VARCHAR},
			</if>
			<if test="employeename != null">
				#{employeename,jdbcType=VARCHAR},
			</if>
			<if test="accountcode != null">
				#{accountcode,jdbcType=VARCHAR},
			</if>
			<if test="logintime != null">
				#{logintime,jdbcType=VARCHAR},
			</if>
			<if test="offtime != null">
				#{offtime,jdbcType=VARCHAR},
			</if>
			<if test="network != null">
				#{network,jdbcType=CHAR},
			</if>
			<if test="duration != null">
				#{duration,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.glens.pwCloudOs.commuteMgr.online.vo.CpOnlineUserHistoryVo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update cp_online_user_history
		<set>
			<if test="companycode != null">
				companyCode = #{companycode,jdbcType=VARCHAR},
			</if>
			<if test="unitcode != null">
				unitCode = #{unitcode,jdbcType=VARCHAR},
			</if>
			<if test="employeecode != null">
				employeeCode = #{employeecode,jdbcType=VARCHAR},
			</if>
			<if test="employeename != null">
				employeeName = #{employeename,jdbcType=VARCHAR},
			</if>
			<if test="accountcode != null">
				accountCode = #{accountcode,jdbcType=VARCHAR},
			</if>
			<if test="logintime != null">
				loginTime = #{logintime,jdbcType=VARCHAR},
			</if>
			<if test="offtime != null">
				offTime = #{offtime,jdbcType=VARCHAR},
			</if>
			<if test="network != null">
				network = #{network,jdbcType=CHAR},
			</if>
			<if test="duration != null">
				duration = #{duration,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.glens.pwCloudOs.commuteMgr.online.vo.CpOnlineUserHistoryVo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update cp_online_user_history
		set companyCode = #{companycode,jdbcType=VARCHAR},
		unitCode = #{unitcode,jdbcType=VARCHAR},
		employeeCode = #{employeecode,jdbcType=VARCHAR},
		employeeName = #{employeename,jdbcType=VARCHAR},
		accountCode = #{accountcode,jdbcType=VARCHAR},
		loginTime = #{logintime,jdbcType=VARCHAR},
		offTime = #{offtime,jdbcType=VARCHAR},
		network = #{network,jdbcType=CHAR},
		duration = #{duration,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<update id="updatebyMap"
		parameterType="map">
		update cp_online_user_history
		set 
		offTime = now(),
		duration=UNIX_TIMESTAMP(now()) - UNIX_TIMESTAMP(loginTime)
		where 
		accountCode = #{accountcode}
		and  id &lt; #{id}
		and offTime is null
	</update>
	
	
	<select id="queryOnlineTime" parameterType="map" resultType="map">
	SELECT
		round(
			sum(
				UNIX_TIMESTAMP(offTime) - UNIX_TIMESTAMP(loginTime)
			) / 60,
			0
		) onlinetime,
		round(
			avg(
				UNIX_TIMESTAMP(offTime) - UNIX_TIMESTAMP(loginTime)
			) / 60,
			0
		) avgonlinetime
	FROM
		(
			SELECT
				b.loginTime,
				CASE
			WHEN b.offTime IS NULL THEN
				now()
			ELSE
				b.offTime
			END offTime
			FROM
				cp_online_user_history b
			WHERE
				 left(b.loginTime,10)=#{date}
			AND  left(b.offTime,10)=#{date}
			AND b.accountCode = #{accountCode}
		) c		
	</select>
	
	
	<select id="queryForCount" parameterType="map" resultType="int">
  	  SELECT
			count(*)
		FROM
			md_employee a
		LEFT JOIN pm_member t ON a.employeecode = t.employeecode
		AND t.work_statue = 1
		LEFT JOIN pm_base b ON t.pro_no = b.pro_no
		<if test="isProManager==1">
			AND b.EMPLOYEECODE = #{proManagerEmployeecode}
		</if>
		JOIN md_org_unit e ON a.unit_code = e.unit_code
		JOIN pf_account f ON a.employeecode = f.employeecode
		JOIN MD_EMPLOYEE_JOB g ON a.JOB_CODE = g.JOB_CODE
		WHERE
			e.company_code = #{companyCode}
		AND a.JOB_CLASS1 = 2
		AND a.WORK_STATUS = 1
		AND f.SYS_PROCESS_FLAG = '1'
		<if test="proNo != null and proNo != ''" >
      AND b.pro_no=#{proNo}
    </if>
    <if test="searchName != null and searchName != ''" >
      AND a.employeename like concat('%',#{searchName},'%')
    </if>
    <if test="jobCode != null and jobCode != ''">
    AND FIND_IN_SET(g.JOB_CODE, #{jobCode})
    </if>
    
  </select>
  
  <select id="queryForPage" parameterType="map" resultType="map">
  
		  SELECT
			IFNULL(b.pro_name, e.UNIT_NAME) proName,
			a.employeename employeeName,
			a.job_no jobNo,
			IFNULL(g.JOB_NAME, '') jobName,
			f.account_code accountCode
		FROM
			md_employee a
		LEFT JOIN pm_member t ON a.employeecode = t.employeecode
		AND t.work_statue = 1
		LEFT JOIN pm_base b ON t.pro_no = b.pro_no
		<if test="isProManager==1">
			AND b.EMPLOYEECODE = #{proManagerEmployeecode}
		</if>
		JOIN md_org_unit e ON a.unit_code = e.unit_code
		JOIN pf_account f ON a.employeecode = f.employeecode
		JOIN MD_EMPLOYEE_JOB g ON a.JOB_CODE = g.JOB_CODE
		WHERE
			e.company_code = #{companyCode}
		AND a.JOB_CLASS1 = 2
		AND a.WORK_STATUS = 1
		AND f.SYS_PROCESS_FLAG = '1'
		<if test="proNo != null and proNo != ''" >
      AND b.pro_no=#{proNo}
    </if>
    <if test="searchName != null and searchName != ''" >
      AND a.employeename like concat('%',#{searchName},'%')
    </if>
    <if test="jobCode != null and jobCode != ''">
    AND FIND_IN_SET(g.JOB_CODE, #{jobCode})
    </if>
    
		ORDER BY
			b.pro_name
		limit #{firstResult},#{maxResult}
  </select>
  
</mapper>